/*
 * intdash API specification
 * ## ベースURL  ベースURLは以下のとおりです。APIエンドポイントはこのベースURLから始まります。  ``` https://<host>/api ``` エンドポイント例: ``` https://example.intdash.jp/api/v1/measurements https://example.intdash.jp/api/media/videos ```  ## レスポンスのステータスコード  サーバーからクライアントに返却されるHTTPレスポンスのステータスコードは以下のとおりです。   | コード                    | 説明                                                                  | |:--------------------------|:----------------------------------------------------------------------| | 101 Switching Protocols   | サーバーはプロトコルを切り替えます。                                  | | 200 OK                    | リクエストは成功しました。                                            | | 201 Created               | 新しいリソースが作成されました。                                      | | 204 No Content            | リクエストは成功しました。返却するコンテンツはありません。            | | 400 Bad Request           | 構文が正しくないなどの理由により、リクエストは処理できませんでした。  | | 401 Unauthorized          | リクエストには認証が必要です。                                        | | 403 Forbidden             | アクセス権がないなどの理由により、リクエストは拒否されました。        | | 404 Not Found             | APIまたはリソースが見つかりません。                                   | | 405 Method Not Allowed    | 指定されたメソッドは許可されていません。                              | | 409 Conflict              | 既存のリソースとのコンフリクトのため、リクエストは失敗しました。      | | 500 Internal Server Error | サーバーで予期しないエラーが発生したため、リクエストは失敗しました。  |   ## 注意 リクエストボディのJSONでは、キーの大文字と小文字は区別されません。 従って、以下の2つのリクエストは同じものと見なされます。  ```  {   \"username\" : \"username\",   \"password\" : \"password\" }  ```   ```  {   \"Username\" : \"username\",   \"Password\" : \"password\" }  ```
 *
 * The version of the OpenAPI document: v2.4.0-next-4a4316946
 * Contact: VM2M-support@aptpod.co.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.aptpod.intdash;

import com.aptpod.ApiException;
import org.openapitools.client.model.CreateMyOAuth2ClientRequest;
import org.openapitools.client.model.OAuth2Client;
import org.openapitools.client.model.OAuth2ClientWithSecret;
import org.openapitools.client.model.OAuth2Clients;
import org.openapitools.client.model.UpdateOAuth2ClientRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthClientsApi
 */
@Disabled
public class AuthClientsApiTest {

    private final AuthClientsApi api = new AuthClientsApi();

    /**
     * Create My OAuth2Client
     *
     * 自分（ユーザー）のOAuth2クライアントを作成します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMyOAuth2ClientsTest() throws ApiException {
        CreateMyOAuth2ClientRequest createMyOAuth2ClientRequest = null;
        OAuth2ClientWithSecret response = api.createMyOAuth2Clients(createMyOAuth2ClientRequest);
        // TODO: test validations
    }

    /**
     * Delete My OAuth2Client
     *
     * 自分（ユーザー）のOAuth2クライアントを削除します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMyOAuth2ClientTest() throws ApiException {
        String clientId = null;
        api.deleteMyOAuth2Client(clientId);
        // TODO: test validations
    }

    /**
     * Delete OAuth2Client
     *
     * OAuth2クライアントを削除します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOAuth2ClientTest() throws ApiException {
        String clientId = null;
        api.deleteOAuth2Client(clientId);
        // TODO: test validations
    }

    /**
     * Get My OAuth2Client
     *
     * 自分（ユーザー）のOAuth2クライアントを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMyOAuth2ClientTest() throws ApiException {
        String clientId = null;
        OAuth2Client response = api.getMyOAuth2Client(clientId);
        // TODO: test validations
    }

    /**
     * Get OAuth2Client
     *
     * OAuth2クライアントを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOAuth2ClientTest() throws ApiException {
        String clientId = null;
        OAuth2Client response = api.getOAuth2Client(clientId);
        // TODO: test validations
    }

    /**
     * List My OAuth2Clients
     *
     * 自分（ユーザー）のOAuth2クライアントのリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMyOAuth2ClientsTest() throws ApiException {
        OAuth2Clients response = api.listMyOAuth2Clients();
        // TODO: test validations
    }

    /**
     * List OAuth2Clients
     *
     * OAuth2クライアントのリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listOAuth2ClientsTest() throws ApiException {
        List<String> id = null;
        List<String> name = null;
        String sort = null;
        Integer page = null;
        Integer perPage = null;
        OAuth2Clients response = api.listOAuth2Clients(id, name, sort, page, perPage);
        // TODO: test validations
    }

    /**
     * List User&#39;s OAuth2Clients
     *
     * ユーザーのOAuth2クライアントのリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUsersOAuth2ClientsTest() throws ApiException {
        String userUuid = null;
        OAuth2Clients response = api.listUsersOAuth2Clients(userUuid);
        // TODO: test validations
    }

    /**
     * Update My OAuth2Client
     *
     * 自分（ユーザー）のOAuth2クライアントを更新します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyOAuth2ClientTest() throws ApiException {
        String clientId = null;
        UpdateOAuth2ClientRequest updateOAuth2ClientRequest = null;
        OAuth2Client response = api.updateMyOAuth2Client(clientId, updateOAuth2ClientRequest);
        // TODO: test validations
    }

    /**
     * Update OAuth2Client
     *
     * OAuth2クライアントを更新します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOAuth2ClientTest() throws ApiException {
        String clientId = null;
        UpdateOAuth2ClientRequest updateOAuth2ClientRequest = null;
        OAuth2Client response = api.updateOAuth2Client(clientId, updateOAuth2ClientRequest);
        // TODO: test validations
    }

}
