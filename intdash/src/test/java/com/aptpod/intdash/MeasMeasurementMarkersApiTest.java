/*
 * intdash API specification
 * ## ベースURL  ベースURLは以下のとおりです。APIエンドポイントはこのベースURLから始まります。  ``` https://<host>/api ``` エンドポイント例: ``` https://example.intdash.jp/api/v1/measurements https://example.intdash.jp/api/media/videos ```  ## レスポンスのステータスコード  サーバーからクライアントに返却されるHTTPレスポンスのステータスコードは以下のとおりです。   | コード                    | 説明                                                                  | |:--------------------------|:----------------------------------------------------------------------| | 101 Switching Protocols   | サーバーはプロトコルを切り替えます。                                  | | 200 OK                    | リクエストは成功しました。                                            | | 201 Created               | 新しいリソースが作成されました。                                      | | 204 No Content            | リクエストは成功しました。返却するコンテンツはありません。            | | 400 Bad Request           | 構文が正しくないなどの理由により、リクエストは処理できませんでした。  | | 401 Unauthorized          | リクエストには認証が必要です。                                        | | 403 Forbidden             | アクセス権がないなどの理由により、リクエストは拒否されました。        | | 404 Not Found             | APIまたはリソースが見つかりません。                                   | | 405 Method Not Allowed    | 指定されたメソッドは許可されていません。                              | | 409 Conflict              | 既存のリソースとのコンフリクトのため、リクエストは失敗しました。      | | 500 Internal Server Error | サーバーで予期しないエラーが発生したため、リクエストは失敗しました。  |   ## 注意 リクエストボディのJSONでは、キーの大文字と小文字は区別されません。 従って、以下の2つのリクエストは同じものと見なされます。  ```  {   \"username\" : \"username\",   \"password\" : \"password\" }  ```   ```  {   \"Username\" : \"username\",   \"Password\" : \"password\" }  ```
 *
 * The version of the OpenAPI document: v2.4.0-next-4a4316946
 * Contact: VM2M-support@aptpod.co.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.aptpod.intdash;

import com.aptpod.ApiException;
import org.openapitools.client.model.MeasurementMarker;
import org.openapitools.client.model.MeasurementMarkerPostRequest;
import org.openapitools.client.model.MeasurementMarkerPutRequest;
import org.openapitools.client.model.MeasurementMarkers;
import org.openapitools.client.model.MeasurementMarkersWithoutPage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MeasMeasurementMarkersApi
 */
@Disabled
public class MeasMeasurementMarkersApiTest {

    private final MeasMeasurementMarkersApi api = new MeasMeasurementMarkersApi();

    /**
     * Create Measurement Marker by Measurement UUID
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/markers&#x60; を使用してください） 計測マーカーを作成します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMeasurementMarkerTest() throws ApiException {
        String measurementUuid = null;
        MeasurementMarkerPostRequest measurementMarkerPostRequest = null;
        MeasurementMarker response = api.createMeasurementMarker(measurementUuid, measurementMarkerPostRequest);
        // TODO: test validations
    }

    /**
     * Create Project Measurement Marker by Measurement UUID
     *
     * 計測マーカーを作成します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectMeasurementMarkerTest() throws ApiException {
        String projectUuid = null;
        String measurementUuid = null;
        MeasurementMarkerPostRequest measurementMarkerPostRequest = null;
        MeasurementMarker response = api.createProjectMeasurementMarker(projectUuid, measurementUuid, measurementMarkerPostRequest);
        // TODO: test validations
    }

    /**
     * Delete Measurement Marker
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/markers/{measurement_marker_uuid}&#x60; を使用してください） 計測マーカーを削除します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMeasurementMarkerTest() throws ApiException {
        String measurementMarkerUuid = null;
        api.deleteMeasurementMarker(measurementMarkerUuid);
        // TODO: test validations
    }

    /**
     * Delete Measurement Marker using Measurement UUID
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/markers/{Measurement_marker_uuid}&#x60; を使用してください） 計測マーカーを削除します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMeasurementMarkerWithMeasurementUUIDAndMarkerUUIDTest() throws ApiException {
        String measurementUuid = null;
        String measurementMarkerUuid = null;
        api.deleteMeasurementMarkerWithMeasurementUUIDAndMarkerUUID(measurementUuid, measurementMarkerUuid);
        // TODO: test validations
    }

    /**
     * Delete Measurement Markers by Measurement UUID
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/markers&#x60; を使用してください） 計測マーカーを削除します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMeasurementMarkersTest() throws ApiException {
        String measurementUuid = null;
        api.deleteMeasurementMarkers(measurementUuid);
        // TODO: test validations
    }

    /**
     * Delete Project Measurement Marker
     *
     * 計測マーカーを削除します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectMeasurementMarkerTest() throws ApiException {
        String projectUuid = null;
        String measurementMarkerUuid = null;
        api.deleteProjectMeasurementMarker(projectUuid, measurementMarkerUuid);
        // TODO: test validations
    }

    /**
     * Delete Project Measurement Marker using Measurement UUID
     *
     * 計測マーカーを削除します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUIDTest() throws ApiException {
        String projectUuid = null;
        String measurementUuid = null;
        String measurementMarkerUuid = null;
        api.deleteProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUID(projectUuid, measurementUuid, measurementMarkerUuid);
        // TODO: test validations
    }

    /**
     * Delete Project Measurement Markers by Measurement UUID
     *
     * 計測マーカーを削除します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectMeasurementMarkersTest() throws ApiException {
        String projectUuid = null;
        String measurementUuid = null;
        api.deleteProjectMeasurementMarkers(projectUuid, measurementUuid);
        // TODO: test validations
    }

    /**
     * Get Measurement Marker
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/markers/{measurement_marker_uuid}&#x60; を使用してください） 計測マーカーを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMeasurementMarkerTest() throws ApiException {
        String measurementMarkerUuid = null;
        MeasurementMarker response = api.getMeasurementMarker(measurementMarkerUuid);
        // TODO: test validations
    }

    /**
     * Get Measurement Marker using Measurement UUID
     *
     * **Deprecated** このエンドポイントではなく、 &#x60;GET /measurements/{measurement_uuid}&#x60; を使用してください。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMeasurementMarkerWithMeasurementUUIDAndMarkerUUIDTest() throws ApiException {
        String measurementUuid = null;
        String measurementMarkerUuid = null;
        MeasurementMarker response = api.getMeasurementMarkerWithMeasurementUUIDAndMarkerUUID(measurementUuid, measurementMarkerUuid);
        // TODO: test validations
    }

    /**
     * List Measurement Markers by Measurement UUID
     *
     * (**Deprecated** このエンドポイントではなく、 &#x60;GET /measurements/{measurement_uuid}&#x60; を使用してください。) 計測UUIDを指定して、その計測に付与されたマーカーの一覧を取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMeasurementMarkersWithMeasurementUUIDTest() throws ApiException {
        String measurementUuid = null;
        MeasurementMarkersWithoutPage response = api.getMeasurementMarkersWithMeasurementUUID(measurementUuid);
        // TODO: test validations
    }

    /**
     * Get Project Measurement Marker
     *
     * 計測マーカーを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectMeasurementMarkerTest() throws ApiException {
        String projectUuid = null;
        String measurementMarkerUuid = null;
        MeasurementMarker response = api.getProjectMeasurementMarker(projectUuid, measurementMarkerUuid);
        // TODO: test validations
    }

    /**
     * Get Project Measurement Marker using Measurement UUID
     *
     * **Deprecated** このエンドポイントではなく、 &#x60;GET /measurements/{measurement_uuid}&#x60; を使用してください。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUIDTest() throws ApiException {
        String projectUuid = null;
        String measurementUuid = null;
        String measurementMarkerUuid = null;
        MeasurementMarker response = api.getProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUID(projectUuid, measurementUuid, measurementMarkerUuid);
        // TODO: test validations
    }

    /**
     * List Project Measurement Markers by Measurement UUID
     *
     * (**Deprecated** このエンドポイントではなく、 &#x60;GET /measurements/{measurement_uuid}&#x60; を使用してください。) 計測UUIDを指定して、その計測に付与されたマーカーの一覧を取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectMeasurementMarkersWithMeasurementUUIDTest() throws ApiException {
        String projectUuid = null;
        String measurementUuid = null;
        MeasurementMarkersWithoutPage response = api.getProjectMeasurementMarkersWithMeasurementUUID(projectUuid, measurementUuid);
        // TODO: test validations
    }

    /**
     * List Measurement Markers
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/markers&#x60; を使用してください） 計測マーカーのリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMeasurementMarkersTest() throws ApiException {
        List<String> uuid = null;
        List<String> name = null;
        Long startUnixMicro = null;
        Long endUnixMicro = null;
        List<String> tagLessThanKeyGreaterThan = null;
        List<String> exclamationTagLessThanKeyGreaterThan = null;
        Integer limit = null;
        String sort = null;
        Integer page = null;
        String order = null;
        MeasurementMarkers response = api.listMeasurementMarkers(uuid, name, startUnixMicro, endUnixMicro, tagLessThanKeyGreaterThan, exclamationTagLessThanKeyGreaterThan, limit, sort, page, order);
        // TODO: test validations
    }

    /**
     * List Project Measurement Markers
     *
     * 計測マーカーのリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProjectMeasurementMarkersTest() throws ApiException {
        String projectUuid = null;
        List<String> uuid = null;
        List<String> name = null;
        Long startUnixMicro = null;
        Long endUnixMicro = null;
        List<String> tagLessThanKeyGreaterThan = null;
        List<String> exclamationTagLessThanKeyGreaterThan = null;
        Integer limit = null;
        String sort = null;
        Integer page = null;
        String order = null;
        MeasurementMarkers response = api.listProjectMeasurementMarkers(projectUuid, uuid, name, startUnixMicro, endUnixMicro, tagLessThanKeyGreaterThan, exclamationTagLessThanKeyGreaterThan, limit, sort, page, order);
        // TODO: test validations
    }

    /**
     * Update Measurement Marker
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/markers/{measurement_marker_uuid}&#x60; を使用してください） 計測マーカーを更新します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMeasurementMarkerTest() throws ApiException {
        String measurementMarkerUuid = null;
        MeasurementMarkerPutRequest measurementMarkerPutRequest = null;
        MeasurementMarker response = api.updateMeasurementMarker(measurementMarkerUuid, measurementMarkerPutRequest);
        // TODO: test validations
    }

    /**
     * Replace Measurement Marker using Measurement UUID
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/markers/{Measurement_marker_uuid}&#x60; を使用してください） 計測マーカーの情報を更新します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMeasurementMarkerWithMeasurementUUIDAndMarkerUUIDTest() throws ApiException {
        String measurementUuid = null;
        String measurementMarkerUuid = null;
        MeasurementMarkerPutRequest measurementMarkerPutRequest = null;
        MeasurementMarker response = api.updateMeasurementMarkerWithMeasurementUUIDAndMarkerUUID(measurementUuid, measurementMarkerUuid, measurementMarkerPutRequest);
        // TODO: test validations
    }

    /**
     * Update Project Measurement Marker
     *
     * 計測マーカーを更新します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProjectMeasurementMarkerTest() throws ApiException {
        String projectUuid = null;
        String measurementMarkerUuid = null;
        MeasurementMarkerPutRequest measurementMarkerPutRequest = null;
        MeasurementMarker response = api.updateProjectMeasurementMarker(projectUuid, measurementMarkerUuid, measurementMarkerPutRequest);
        // TODO: test validations
    }

    /**
     * Replace Project Measurement Marker using Measurement UUID
     *
     * 計測マーカーの情報を更新します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUIDTest() throws ApiException {
        String projectUuid = null;
        String measurementUuid = null;
        String measurementMarkerUuid = null;
        MeasurementMarkerPutRequest measurementMarkerPutRequest = null;
        MeasurementMarker response = api.updateProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUID(projectUuid, measurementUuid, measurementMarkerUuid, measurementMarkerPutRequest);
        // TODO: test validations
    }

}
