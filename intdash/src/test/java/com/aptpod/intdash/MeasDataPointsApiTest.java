/*
 * intdash API specification
 * ## ベースURL  ベースURLは以下のとおりです。APIエンドポイントはこのベースURLから始まります。  ``` https://<host>/api ``` エンドポイント例: ``` https://example.intdash.jp/api/v1/measurements https://example.intdash.jp/api/media/videos ```  ## レスポンスのステータスコード  サーバーからクライアントに返却されるHTTPレスポンスのステータスコードは以下のとおりです。   | コード                    | 説明                                                                  | |:--------------------------|:----------------------------------------------------------------------| | 101 Switching Protocols   | サーバーはプロトコルを切り替えます。                                  | | 200 OK                    | リクエストは成功しました。                                            | | 201 Created               | 新しいリソースが作成されました。                                      | | 204 No Content            | リクエストは成功しました。返却するコンテンツはありません。            | | 400 Bad Request           | 構文が正しくないなどの理由により、リクエストは処理できませんでした。  | | 401 Unauthorized          | リクエストには認証が必要です。                                        | | 403 Forbidden             | アクセス権がないなどの理由により、リクエストは拒否されました。        | | 404 Not Found             | APIまたはリソースが見つかりません。                                   | | 405 Method Not Allowed    | 指定されたメソッドは許可されていません。                              | | 409 Conflict              | 既存のリソースとのコンフリクトのため、リクエストは失敗しました。      | | 500 Internal Server Error | サーバーで予期しないエラーが発生したため、リクエストは失敗しました。  |   ## 注意 リクエストボディのJSONでは、キーの大文字と小文字は区別されません。 従って、以下の2つのリクエストは同じものと見なされます。  ```  {   \"username\" : \"username\",   \"password\" : \"password\" }  ```   ```  {   \"Username\" : \"username\",   \"Password\" : \"password\" }  ```
 *
 * The version of the OpenAPI document: v2.4.0-next-4a4316946
 * Contact: VM2M-support@aptpod.co.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.aptpod.intdash;

import com.aptpod.ApiException;
import org.openapitools.client.model.DataIDs;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MeasDataPointsApi
 */
@Disabled
public class MeasDataPointsApiTest {

    private final MeasDataPointsApi api = new MeasDataPointsApi();

    /**
     * Store Data Points
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/data&#x60; を使用してください）  データポイントを登録します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDataPointsTest() throws ApiException {
        File body = null;
        File response = api.createDataPoints(body);
        // TODO: test validations
    }

    /**
     * Store Project Data Points
     *
     * データポイントを登録します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectDataPointsTest() throws ApiException {
        String projectUuid = null;
        File body = null;
        File response = api.createProjectDataPoints(projectUuid, body);
        // TODO: test validations
    }

    /**
     * List Edge&#39;s Data IDs
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/getids&#x60; を使用してください）  エッジを指定し、そのエッジから送信されているデータに含まれるデータ識別子（ &#x60;data_type&#x60; 、 &#x60;channel&#x60; 、 &#x60;data_id&#x60; の組み合わせ）のリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDataIDsTest() throws ApiException {
        Long start = null;
        Long end = null;
        String edgeUuid = null;
        DataIDs response = api.listDataIDs(start, end, edgeUuid);
        // TODO: test validations
    }

    /**
     * List Data IDs
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/getids&#x60; を使用してください） 計測を指定し、その計測に含まれるデータ識別子（ &#x60;data_type&#x60; 、 &#x60;channel&#x60; 、 &#x60;data_id&#x60; の組み合わせ）のリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDataIDsWithMeasurementUUIDTest() throws ApiException {
        String measurementUuid = null;
        DataIDs response = api.listDataIDsWithMeasurementUUID(measurementUuid);
        // TODO: test validations
    }

    /**
     * List Data Points
     *
     * （Deprecated。このエンドポイントでなく &#x60;/projects/00000000-0000-0000-0000-000000000000/data&#x60; を使用してください）  データポイントのリストを取得します。  返却されるデータポイントはJSON形式です。データポイントごとに改行で区切られます。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDataPointsTest() throws ApiException {
        String name = null;
        String start = null;
        String end = null;
        List<String> idq = null;
        String since = null;
        String exitOnError = null;
        List<String> label = null;
        Long period = null;
        Long limit = null;
        String order = null;
        String timeFormat = null;
        File response = api.listDataPoints(name, start, end, idq, since, exitOnError, label, period, limit, order, timeFormat);
        // TODO: test validations
    }

    /**
     * List Project Edge&#39;s Data IDs
     *
     * エッジを指定し、そのエッジから送信されているデータに含まれるデータ識別子（ &#x60;data_type&#x60; 、 &#x60;channel&#x60; 、 &#x60;data_id&#x60; の組み合わせ）のリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProjectDataIDsTest() throws ApiException {
        String projectUuid = null;
        Long start = null;
        Long end = null;
        String edgeUuid = null;
        DataIDs response = api.listProjectDataIDs(projectUuid, start, end, edgeUuid);
        // TODO: test validations
    }

    /**
     * List Project Data IDs
     *
     * 計測を指定し、その計測に含まれるデータ識別子（ &#x60;data_type&#x60; 、 &#x60;channel&#x60; 、 &#x60;data_id&#x60; の組み合わせ）のリストを取得します。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProjectDataIDsWithMeasurementUUIDTest() throws ApiException {
        String projectUuid = null;
        String measurementUuid = null;
        DataIDs response = api.listProjectDataIDsWithMeasurementUUID(projectUuid, measurementUuid);
        // TODO: test validations
    }

    /**
     * List Project Data Points
     *
     * データポイントのリストを取得します。 返却されるデータポイントはJSON形式です。データポイントごとに改行で区切られます。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProjectDataPointsTest() throws ApiException {
        String projectUuid = null;
        String name = null;
        List<String> idq = null;
        String start = null;
        String end = null;
        String since = null;
        String exitOnError = null;
        List<String> label = null;
        Long period = null;
        Integer limit = null;
        String order = null;
        String timeFormat = null;
        File response = api.listProjectDataPoints(projectUuid, name, idq, start, end, since, exitOnError, label, period, limit, order, timeFormat);
        // TODO: test validations
    }

}
