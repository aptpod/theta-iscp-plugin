openapi: 3.0.3
info:
  contact:
    email: VM2M-support@aptpod.co.jp
    name: 株式会社アプトポッド
    url: https://www.aptpod.co.jp/
  description: |-
    ## ベースURL

    ベースURLは以下のとおりです。APIエンドポイントはこのベースURLから始まります。

    ```
    https://<host>/api
    ```
    エンドポイント例:
    ```
    https://example.intdash.jp/api/v1/measurements
    https://example.intdash.jp/api/media/videos
    ```

    ## レスポンスのステータスコード

    サーバーからクライアントに返却されるHTTPレスポンスのステータスコードは以下のとおりです。


    | コード                    | 説明                                                                  |
    |:--------------------------|:----------------------------------------------------------------------|
    | 101 Switching Protocols   | サーバーはプロトコルを切り替えます。                                  |
    | 200 OK                    | リクエストは成功しました。                                            |
    | 201 Created               | 新しいリソースが作成されました。                                      |
    | 204 No Content            | リクエストは成功しました。返却するコンテンツはありません。            |
    | 400 Bad Request           | 構文が正しくないなどの理由により、リクエストは処理できませんでした。  |
    | 401 Unauthorized          | リクエストには認証が必要です。                                        |
    | 403 Forbidden             | アクセス権がないなどの理由により、リクエストは拒否されました。        |
    | 404 Not Found             | APIまたはリソースが見つかりません。                                   |
    | 405 Method Not Allowed    | 指定されたメソッドは許可されていません。                              |
    | 409 Conflict              | 既存のリソースとのコンフリクトのため、リクエストは失敗しました。      |
    | 500 Internal Server Error | サーバーで予期しないエラーが発生したため、リクエストは失敗しました。  |


    ## 注意
    リクエストボディのJSONでは、キーの大文字と小文字は区別されません。 従って、以下の2つのリクエストは同じものと見なされます。

    ```

    {
      "username" : "username",
      "password" : "password"
    }

    ```


    ```

    {
      "Username" : "username",
      "Password" : "password"
    }

    ```
  title: intdash API specification
  version: v2.4.0-next-4a4316946
servers:
- description: URLのサンプルです。
  url: https://example.intdash.jp/api
security:
- IntdashToken: []
- OAuth2TokenInHeader: []
- OAuth2TokenInCookie: []
tags:
- name: auth_Clients
  x-displayName: Clients
- name: auth_Authorization
  x-displayName: Authorization
- name: auth_Edges
  x-displayName: Edges
- name: auth_OAuth2
  x-displayName: OAuth2
- name: auth_Me
  x-displayName: Me
- name: auth_Users
  x-displayName: Users
- name: auth_Projects
  x-displayName: Projects
- name: auth_Groups
  x-displayName: Groups
- name: auth_Group Members
  x-displayName: Group Members
- name: auth_Project Edges
  x-displayName: Project Edges
- name: auth_Project Members
  x-displayName: Project Members
- name: auth_Roles
  x-displayName: Roles
- name: auth_Scopes
  x-displayName: Scopes
- name: broker_Edge Connections
  x-displayName: Edge Connections
- name: broker_Stream
  x-displayName: Stream
- name: broker_iSCP
  x-displayName: iSCP
- description: |
    <SchemaDefinition schemaRef="#/components/schemas/DataPoint" />
  name: meas_data_model
  x-displayName: DataPoint Model
- name: meas_DataPoints
  x-displayName: DataPoints
- name: meas_DataPointIDs
  x-displayName: DataPointIDs
- name: meas_Measurements
  x-displayName: Measurements
- name: meas_Measurement Jobs
  x-displayName: Measurement Jobs
- name: meas_Measurement Markers
  x-displayName: Measurement Markers
- name: meas_Uploading Measurements
  x-displayName: Uploading Measurements
- name: meas_Signals
  x-displayName: Signals
- name: meas_Trashed Measurements
  x-displayName: Trashed Measurements
- name: media_HLS
  x-displayName: HLS
- name: media_Jobs
  x-displayName: Jobs
- name: media_Videos
  x-displayName: Videos
- name: media_Live
  x-displayName: Live
- name: versions_Version
  x-displayName: Version
paths:
  /auth/clients:
    get:
      description: OAuth2クライアントのリストを取得します。
      operationId: listOAuth2Clients
      parameters:
      - description: OAuth2クライアントID
        example: 039b8ee2-8edc-46e4-9a88-4d03bac142f7
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 名前による部分一致検索
        example: client_name
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。 例えば、 `name-` を指定すると、nameによる降順で出力されます。
            - name
            - created_at
            - updated_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name+
          type: string
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuth2Clients'
          description: OK
      summary: List OAuth2Clients
      tags:
      - auth_Clients
      x-accepts: application/json; charset=utf-8
  /auth/authorize/http:
    post:
      operationId: checkHTTPAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckHTTPAuthorizationRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CheckAuthorizationResponse'
          description: OK
      summary: Check HTTP Authorization
      tags:
      - auth_Authorization
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/clients/{client_id}:
    delete:
      description: OAuth2クライアントを削除します。
      operationId: deleteOAuth2Client
      parameters:
      - description: OAuth2クライアントID
        example: 039b8ee2-8edc-46e4-9a88-4d03bac142f7
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete OAuth2Client
      tags:
      - auth_Clients
      x-accepts: application/json
    get:
      description: OAuth2クライアントを取得します。
      operationId: getOAuth2Client
      parameters:
      - description: OAuth2クライアントID
        example: 039b8ee2-8edc-46e4-9a88-4d03bac142f7
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuth2Client'
          description: OK
      summary: Get OAuth2Client
      tags:
      - auth_Clients
      x-accepts: application/json; charset=utf-8
    patch:
      description: OAuth2クライアントを更新します。
      operationId: updateOAuth2Client
      parameters:
      - description: OAuth2クライアントID
        example: 039b8ee2-8edc-46e4-9a88-4d03bac142f7
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOAuth2ClientRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuth2Client'
          description: OK
      summary: Update OAuth2Client
      tags:
      - auth_Clients
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/edges:
    get:
      description: エッジのリストを取得します。
      operationId: listEdges
      parameters:
      - description: エッジのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 名前による部分一致検索
        example: edge_name
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 表示名による部分一致検索
        example: edge_nickname
        explode: true
        in: query
        name: nickname
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 所有者ユーザーのUUID
        example: d30267f0-bdd4-4d53-b072-45d3cc29c7de
        explode: true
        in: query
        name: owner_uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          所有者の有無。

          * `true` : 所有者が設定されているエッジを取得します。
          * `false` : 所有者が設定されていないエッジを取得します。
        example: "true"
        explode: true
        in: query
        name: has_owner
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      - description: |-
          並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。
          接尾辞を省略した場合は昇順となります。 例えば、 `name-` を指定すると、nameによる降順で出力されます。
            - name
            - created_at
            - updated_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name+
          type: string
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edges:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Edges'
          description: OK
      summary: List Edges
      tags:
      - auth_Edges
      x-accepts: application/json; charset=utf-8
    post:
      description: 所有者がない状態でエッジを作成します。
      operationId: createEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEdgeRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                EdgeWithoutOwner:
                  $ref: '#/components/examples/EdgeWithoutOwner'
                  value: null
              schema:
                $ref: '#/components/schemas/Edge'
          description: Created
      summary: Create Edge
      tags:
      - auth_Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/edges/me:
    get:
      description: 自分のUUIDと同じエッジUUIDを持つエッジを取得します。
      operationId: GetMeAsEdge
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edge:
                  $ref: '#/components/examples/Edge'
                  value: null
              schema:
                $ref: '#/components/schemas/Edge'
          description: OK
      summary: Get Edge having the same UUID as Me
      tags:
      - auth_Edges
      x-accepts: application/json; charset=utf-8
  /auth/edges/{edge_uuid}:
    delete:
      description: エッジを削除します。
      operationId: deleteEdge
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Edge
      tags:
      - auth_Edges
      x-accepts: application/json
    get:
      description: エッジを取得します。
      operationId: getEdge
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edge:
                  $ref: '#/components/examples/Edge'
                  value: null
              schema:
                $ref: '#/components/schemas/Edge'
          description: OK
      summary: Get Edge
      tags:
      - auth_Edges
      x-accepts: application/json; charset=utf-8
    patch:
      description: エッジを更新します。
      operationId: updateEdge
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEdgeRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edge:
                  $ref: '#/components/examples/Edge'
                  value: null
              schema:
                $ref: '#/components/schemas/Edge'
          description: OK
      summary: Update Edge
      tags:
      - auth_Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/edges/{edge_uuid}/owner:
    delete:
      description: エッジに所有者がない状態にします。
      operationId: removeOwner
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Unassign Owner
      tags:
      - auth_Edges
      x-accepts: application/json
    post:
      description: エッジに所有者を割り当てます。
      operationId: assignOwner
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignOwnerRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/EdgeOwner'
          description: OK
        "409":
          content:
            application/json; charset=utf-8:
              example:
                type: conflict
                title: error message
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Assign Owner
      tags:
      - auth_Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/oauth2/authorization:
    get:
      description: "OAuth2認可エンドポイント。 [RFC6749:The OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749)"
      operationId: oauth2Authorization
      parameters:
      - description: OAuth2クライアントID
        example: client_id
        explode: true
        in: query
        name: client_id
        required: true
        schema:
          type: string
        style: form
      - description: OAuth2のresponse_type。 `code` のみサポートされています。
        example: code
        explode: true
        in: query
        name: response_type
        required: true
        schema:
          enum:
          - code
          type: string
        style: form
      - description: 認可後のリダイレクト先URI
        example: http://localhost:8080/
        explode: true
        in: query
        name: redirect_uri
        required: true
        schema:
          type: string
        style: form
      - description: CSRF対策のためのstate
        example: 05d54c58385046dd822d233c6adfb9e9
        explode: true
        in: query
        name: state
        required: true
        schema:
          type: string
        style: form
      - description: PKCEコードチャレンジ。 `code_verifier` から計算したSHA-256ハッシュを、Base64 URLエンコードしたもの。
        example: ZtNPunH49FD35FWYhT5Tv8I7vRKQJ8uxMaL0_9eHjNA
        explode: true
        in: query
        name: code_challenge
        required: false
        schema:
          type: string
        style: form
      - description: PKCEコードチャレンジの方式。 `S256` （SHA-256）のみサポートされます。
        example: S256
        explode: true
        in: query
        name: code_challenge_method
        required: false
        schema:
          enum:
          - S256
          type: string
        style: form
      responses:
        "302":
          description: APIサーバーで設定されているログインページや同意ページへのリダイレクト
      summary: Authorization Endpoint
      tags:
      - auth_OAuth2
      x-accepts: application/json
  /auth/oauth2/revocation:
    post:
      description: "トークンを無効化します。 このエンドポイントをコールしてからトークンが無効化されるまで、通常数秒程度かかります。 [RFC7009:OAuth\
        \ 2.0 Token Revocation](https://tools.ietf.org/html/rfc7009)"
      operationId: reovokeToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            examples:
              email:
                value:
                  client_id: 99dcf67c_default.aptpod.co.jp
                  token: eyJhbGciOiJSUzI1NiIsImtpZCI6ImNkY2M4NjAxZGNiMTY2ODg5MTAyNjY5OWY2MmQ5ZDEyNGIxMTcwZmQ4OWU2YTgxNTkyNGIwNDIwZWQ2MDM0NWYiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE1ODA5NTQ5NzgsImlhdCI6MTU4MDk1MTM3OCwiaXNzIjoibWljcm8tYXV0aCJ9.Xmi5TgHRiXIaVZXtfCxPNEIWrJMusmlqImA2d7uTZDtnUh6Cv_RvbLgChVsyl5hPFNDXU-Bm4-Nh8ppQVJpHQhVYPeVlycMXhKXdlx_kNJoBA8tJ4BgZlQObt16ZzakZIoYJBH8ffWkWxDYGVswVFRaB4e4EfsaOa3jGP15jK9g
                  token_type_hint: refresh_token
            schema:
              $ref: '#/components/schemas/RevokeTokenRequest'
      responses:
        "200":
          description: OK
      summary: Revoke Token
      tags:
      - auth_OAuth2
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json
  /auth/oauth2/jwks:
    get:
      description: "JSON Web Keysのリストを取得します。 [RFC7517:JSON Web Key](https://tools.ietf.org/html/rfc7517)"
      responses:
        "200":
          content:
            application/jwk-set+json; charset=utf-8:
              examples:
                response:
                  value:
                    keys:
                    - use: sig
                      kty: RSA
                      kid: 6b8b47b2ea9d29b3efdfa1b3d3bf1b3cc88df7c8bb202c8b0f744dde2efe936e
                      alg: RS256
                      "n": puyrqHYId3dIDZfDyEAY_Z8NoS86ohYWx0YcOPgfELGsu4NMX8yJhIG4f-wAXxnhFTdOI4nXjbBLmTfxliwTfkH94utcWiCCTLELa9RyZlL19SyFDfVf606xVaOGsESWwPTAid1_QigGt8Qx9ebtVsb5NfXWOeEofRWR29u6H6k
                      e: AQAB
                    - use: sig
                      kty: EC
                      kid: 9e02473a20ef0c9a22049132686ee8d6e331af1a3dcf4c0c80dc4978ba66bd75
                      crv: P-384
                      alg: ES384
                      x: SG_q0mYlLQ8PM56M8gfQX2D2XWbB6ALM0eX67OArp5FdlJ1B6IADP7cidWVag6AU
                      "y": fnmtLHn8UQl-fY8i9ri15A2CxQ_eCArZD_H8h2vtPi6v6bnDK2Kn0GnohnHn_12n
              schema:
                $ref: '#/components/schemas/OAuth2JWKs'
          description: OK
      summary: List JSON Web Keys
      tags:
      - auth_OAuth2
      x-accepts: application/jwk-set+json; charset=utf-8
  /auth/oauth2/token:
    post:
      description: "OAuth2のアクセストークンを取得します。 [RFC6749:The OAuth 2.0 Authorization Framework](https://tools.ietf.org/html/rfc6749)"
      operationId: issueToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            examples:
              email:
                value:
                  grant_type: password
                  username: username@example.com
                  password: password
                  client_id: 99dcf67c_default.aptpod.co.jp
              username:
                value:
                  grant_type: password
                  username: username
                  password: password
                  client_id: 99dcf67c_default.aptpod.co.jp
              authorization_code:
                value:
                  grant_type: authorization_code
                  code: w765opGdrT6Bd8dC4oT_ovsAjyM2NO8-U1egu0FgmN8.1MFSqmUl-HTrsOuvYRw3g8Ra0laz4X35kZgZr7eM640
                  client_id: 533bc9ea_authorization_code.aptpod.co.jp
                  redirect_uri: http://localhost:8080
              authorization_code_pkce:
                value:
                  grant_type: authorization_code
                  code: w765opGdrT6Bd8dC4oT_ovsAjyM2NO8-U1egu0FgmN8.1MFSqmUl-HTrsOuvYRw3g8Ra0laz4X35kZgZr7eM640
                  client_id: 533bc9ea_authorization_code.aptpod.co.jp
                  redirect_uri: http://localhost:8080
                  code_verifier: 659cbc006ea54ed6-abf12ebd8d40e00868504d2cdc49418a86107dba5f463f5d
              client_credentials `client_secret_post`:
                value:
                  grant_type: client_credentials
                  client_id: d2219ec6-b7ee-47c2-a7bf-447754b1de49
                  client_secret: 3cEZUVWX5PrM5SsEGVP84MmGbM7BgcgvfQaKlSnTR0zIjWYSulPJcFSMvzG09uto
              client_credentials `tls_client_auth`:
                value:
                  grant_type: client_credentials
                  client_id: d2219ec6-b7ee-47c2-a7bf-447754b1de49
                  client_certification: '-----BEGIN CERTIFICATE----- MIIEpzCCAw+gAwIBAgIRAPf1PElvbMfTv4n7yc1B1VkwDQYJKoZIhvcNAQELBQAw
                    gbcxHjAcBgNVBAoTFW1rY2VydCBkZXZlbG9wbWVudCBDQTFGMEQGA1UECww9bWFz
                    YXl1a2ktbWl5YXVjaGlAbWl5YXVjaGktbWFzYXl1a2ktMTQxMS5sb2NhbCAo5a6u
                    5YaF5aOv5LmLKTFNMEsGA1UEAwxEbWtjZXJ0IG1hc2F5dWtpLW1peWF1Y2hpQG1p
                    eWF1Y2hpLW1hc2F5dWtpLTE0MTEubG9jYWwgKOWuruWGheWjr+S5iykwHhcNMjAx
                    MTE3MDgzODIxWhcNMzAxMTE3MDgzODIxWjBxMQswCQYDVQQGEwJKUDEOMAwGA1UE
                    CBMFVG9reW8xETAPBgNVBAcTCFNoaW5qdWt1MQ8wDQYDVQQKEwZhcHRwb2QxEzAR
                    BgNVBAsTCnByb2R1Y3Rpb24xGTAXBgNVBAMTEGRldmVsb3BtZW50LWNlcnQwggEi
                    MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDe/V7GAyDWAIZ8/wHnUAvfzt5i
                    777x3Wmpf8qNzyZKo3um9xFdIa0LBqkYDS5RgBnapdLY+2Ihkw+VFA4ws++8eeW4
                    wuXmwOZXVb6rGVdL6AH84XI9Zl0TQ6vZR0xcav3ZmWKU3eEw6eN2iDJhSzzdcUPv
                    paGw4LQ3VxknBHhi1+Vm5HxjG6c1+LfAgnW7AVEFPj13AP3B2Axe2SiCGspaBoK3
                    x5EMqVRGVQmZTP2igVgIyUZ8CgiRstmCOTt9HCNrCud39eY5p73lDn6fwB7Fj/7p
                    MKLYPip1xs60N9NkRpsnz85V5Qo5kvunV9NUFeTRCzciIqd8Ku7vH6QABKtbAgMB
                    AAGjczBxMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNV
                    HRMBAf8EAjAAMB8GA1UdIwQYMBaAFCfPRuEGzxXomEKZE9Vc2i8SRnW3MBsGA1Ud
                    EQQUMBKCEGRldmVsb3BtZW50LWNlcnQwDQYJKoZIhvcNAQELBQADggGBALPyYn4y
                    whQ5JezeUwDpKj/UVl3PdeCIoqBrj4s+6GVtBpwE3m6lFw1Fp1g0Bgoh90wuchlw
                    ijsaf8MwWezFNeTpZ/TONc9zgM0Dv+WBrEpsNc+VeJAfSNBLNo63fmHjmnUdOL/F
                    jEe/avphet22GJaa6KHsPRzqVXsaDjcWTlT8oSSwuaOWpHVXuW1m0TG2fJlIGPhW
                    EbjDjAxPF8+meW9GH1sT8QA8rhRZl4O8J8Z2QH8wQTfnWe3jCCgf5kmD0h5URZwD
                    GZbn0MSXa+7xX9RgaAxwvsNMDqhW/cF8IDmxWE8X5xTukuN5Qz6EtBtvwliETJro
                    YyIN9a/aMjJjypp8tEMoLeJRKWFsOy5DKh0rSNjb8FLWlf176dIrahcyhAs2n8AB
                    38P9mgn2cyoijg52CA3GmofPM9cxsnvcmzScvi7dL6QCTIPDP2nuWZIX3SJVY/Jp
                    qKxueGGWuD5ePDy020qxEGIXZcCnhhoz6HSjEDiqVjQKjjhJEugQ6QPo1w== -----END
                    CERTIFICATE-----'
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    token_type: bearer
                    access_token: eyJhbGciOiJSUzI1NiIsImtpZCI6ImNkY2M4NjAxZGNiMTY2ODg5MTAyNjY5OWY2MmQ5ZDEyNGIxMTcwZmQ4OWU2YTgxNTkyNGIwNDIwZWQ2MDM0NWYiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjE1ODA5NTQ5NzgsImlhdCI6MTU4MDk1MTM3OCwiaXNzIjoibWljcm8tYXV0aCJ9.Xmi5TgHRiXIaVZXtfCxPNEIWrJMusmlqImA2d7uTZDtnUh6Cv_RvbLgChVsyl5hPFNDXU-Bm4-Nh8ppQVJpHQhVYPeVlycMXhKXdlx_kNJoBA8tJ4BgZlQObt16ZzakZIoYJBH8ffWkWxDYGVswVFRaB4e4EfsaOa3jGP15jK9g
                    expires_in: 3600
                    refresh_token: lv70VlZ92fLAKiNT5qzOi684K0R5ZVcPjtAhCo_A_0I.iUIeiUrBVR9OoM9y_QBzSVzAgXvJ-8AYANCA1WEx_Lw
                    refresh_token_expires_in: 2592000
                    scope: ""
              schema:
                $ref: '#/components/schemas/issueToken_200_response'
          description: OK
      summary: Token Endpoint
      tags:
      - auth_OAuth2
      x-content-type: application/x-www-form-urlencoded
      x-accepts: application/json; charset=utf-8
  /auth/users/me:
    get:
      description: 自分（ユーザー）を取得します。
      operationId: getMe
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                User:
                  $ref: '#/components/examples/User'
                  value: null
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get Me
      tags:
      - auth_Me
      x-accepts: application/json; charset=utf-8
    patch:
      description: 自分（ユーザー）を更新します。
      operationId: updateMe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                User:
                  $ref: '#/components/examples/User'
                  value: null
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "403":
          content:
            application/json; charset=utf-8:
              example:
                type: forbidden
                title: error message
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Update Me
      tags:
      - auth_Me
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/clients:
    get:
      description: 自分（ユーザー）のOAuth2クライアントのリストを取得します。
      operationId: listMyOAuth2Clients
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuth2Clients'
          description: OK
      summary: List My OAuth2Clients
      tags:
      - auth_Clients
      x-accepts: application/json; charset=utf-8
    post:
      description: 自分（ユーザー）のOAuth2クライアントを作成します。
      operationId: createMyOAuth2Clients
      requestBody:
        content:
          application/json:
            examples:
              AuthorizationCode:
                value:
                  name: my-authorization-code-client
                  grant_type: authorization_code
                  token_endpoint_auth_method: client_secret_basic
                  redirect_uris:
                  - http://localhost:8080
              ClientCredentials:
                value:
                  name: my-credentials-client
                  grant_type: client_credentials
                  token_endpoint_auth_method: client_secret_post
            schema:
              $ref: '#/components/schemas/CreateMyOAuth2ClientRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuth2ClientWithSecret'
          description: Created
      summary: Create My OAuth2Client
      tags:
      - auth_Clients
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/clients/{client_id}:
    delete:
      description: 自分（ユーザー）のOAuth2クライアントを削除します。
      operationId: deleteMyOAuth2Client
      parameters:
      - description: OAuth2クライアントID
        example: 039b8ee2-8edc-46e4-9a88-4d03bac142f7
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete My OAuth2Client
      tags:
      - auth_Clients
      x-accepts: application/json
    get:
      description: 自分（ユーザー）のOAuth2クライアントを取得します。
      operationId: getMyOAuth2Client
      parameters:
      - description: OAuth2クライアントID
        example: 039b8ee2-8edc-46e4-9a88-4d03bac142f7
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuth2Client'
          description: OK
      summary: Get My OAuth2Client
      tags:
      - auth_Clients
      x-accepts: application/json; charset=utf-8
    patch:
      description: 自分（ユーザー）のOAuth2クライアントを更新します。
      operationId: updateMyOAuth2Client
      parameters:
      - description: OAuth2クライアントID
        example: 039b8ee2-8edc-46e4-9a88-4d03bac142f7
        explode: false
        in: path
        name: client_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOAuth2ClientRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuth2Client'
          description: OK
        "304":
          description: Not Modified
      summary: Update My OAuth2Client
      tags:
      - auth_Clients
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/edges:
    get:
      description: 自分（ユーザー）が所有するエッジのリストを取得します。
      operationId: listMyEdges
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edges:
                  $ref: '#/components/examples/Edges'
                  value: null
              schema:
                $ref: '#/components/schemas/Edges'
          description: OK
      summary: List My Edges
      tags:
      - auth_Edges
      x-accepts: application/json; charset=utf-8
    post:
      description: 新しいエッジを作成し、自分（ユーザー）を所有者に設定します。
      operationId: createMyEdge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEdgeRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Edge'
          description: Created
      summary: Create My Edge
      tags:
      - auth_Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/edges/{edge_uuid}:
    delete:
      description: 自分（ユーザー）が所有するエッジを削除します。
      operationId: deleteMyEdge
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete My Edge
      tags:
      - auth_Edges
      x-accepts: application/json
    get:
      description: 自分（ユーザー）が所有するエッジを取得します。
      operationId: getMyEdge
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edge:
                  $ref: '#/components/examples/Edge'
                  value: null
              schema:
                $ref: '#/components/schemas/Edge'
          description: OK
      summary: Get My Edge
      tags:
      - auth_Edges
      x-accepts: application/json; charset=utf-8
    patch:
      description: 自分（ユーザー）が所有するエッジを更新します。
      operationId: updateMyEdge
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEdgeRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edge:
                  $ref: '#/components/examples/Edge'
                  value: null
              schema:
                $ref: '#/components/schemas/Edge'
          description: OK
      summary: Update My Edge
      tags:
      - auth_Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
    put:
      description: 指定したUUIDを持つ新しいエッジを作成し、自分を所有者に設定します。
      operationId: createMyEdgeWithUUID
      parameters:
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              CreateEdgeWithUUID:
                $ref: '#/components/examples/CreateEdgeWithUUIDRequest'
                value: null
            schema:
              $ref: '#/components/schemas/CreateEdgeRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Edge'
          description: Created
      summary: Create My Edge With UUID
      tags:
      - auth_Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/authorize/http:
    post:
      operationId: checkMeHTTPAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckMeHTTPAuthorizationRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CheckAuthorizationResponse'
          description: OK
      summary: Check Me HTTP Authorization
      tags:
      - auth_Authorization
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users:
    get:
      description: ユーザーのリストを取得します。
      operationId: listUsers
      parameters:
      - description: ユーザーのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: ロールのUUID
        example: af22c56b-6b3e-4807-a165-07e9dbd7e25b
        explode: true
        in: query
        name: role_uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: ユーザーの名前による部分一致検索。文字列をダブルクォーテーションで囲むと、完全一致のものだけを取得します。
        example: intdash
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: ユーザーの表示名による部分一致検索。文字列をダブルクォーテーションで囲むと、完全一致のものだけを取得します。
        example: intdash-nickname
        explode: true
        in: query
        name: nickname
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: メールアドレスによる部分一致検索。文字列をダブルクォーテーションで囲むと、完全一致のものだけを取得します。
        example: intdash@example.com
        explode: true
        in: query
        name: email
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          * `true` を指定した場合、無効化されているユーザーのみを取得します。
          * `false` を指定した場合、有効なユーザーのみを取得します。
          * 指定を省略した場合、有効／無効にかかわらずユーザーを取得します。
        example: false
        explode: true
        in: query
        name: disabled
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          * `true` を指定した場合、スーパーユーザーのみを取得します。
          * `false` を指定した場合、スーパーユーザー以外を取得します。
          * 指定を省略した場合、スーパーユーザーであるかにかかわらずユーザーを取得します。
        example: false
        explode: true
        in: query
        name: is_super
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          * `true` を指定した場合、一時パスワードを使用しているユーザーのみを取得します。
          * `false` を指定した場合、パスワードを設定済みのユーザーのみを取得します。
          * 指定を省略した場合、一時パスワードを使用しているかにかかわらずユーザーを取得します。
        example: false
        explode: true
        in: query
        name: is_temporary
        required: false
        schema:
          type: boolean
        style: form
      - description: ログイン失敗回数の最小値。ログイン失敗回数がこの数値以上のユーザーを取得します。
        example: 1
        explode: true
        in: query
        name: min_sign_in_attempt_count
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: ログイン失敗回数の最大値。ログイン失敗回数がこの数値以下のユーザーを取得します。
        example: 10
        explode: true
        in: query
        name: max_sign_in_attempt_count
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |-
          並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。 例えば、 `name-` を指定すると、nameによる降順で出力されます。
            - name
            - created_at
            - updated_at
            - last_sign_in_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: name+
          type: string
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Users:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Users'
          description: OK
      summary: List Users
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
    post:
      description: ユーザーを作成します。新しいユーザーには自動生成された一時パスワードが設定されます。 ユーザー作成のリクエストにメールアドレス（
        `email` ）が含まれていた場合は、 そのメールアドレスに確認メールが送信されます。
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                CreatedUser:
                  $ref: '#/components/examples/CreatedUser'
                  value: null
              schema:
                $ref: '#/components/schemas/User'
          description: Created
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ConflictNameAndEmail:
                  $ref: '#/components/examples/ErrorProblemConflictNameAndEmail'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Create User
      tags:
      - auth_Users
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/emails:
    post:
      description: 自分（ユーザー）のメールアドレスを設定します。 メールアドレスの設定が成功すると、確認用URLを含むメールがそのアドレスに送信されます。
        確認用URLには、メールアドレス確認用トークンとメールアドレスのIDが含まれます。
      operationId: createMyEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserEmail'
          description: Created
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Create My Email
      tags:
      - auth_Me
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/emails/{user_email_id}:
    delete:
      description: 自分（ユーザー）のメールアドレスを削除します。
      operationId: deleteMyEmail
      parameters:
      - description: ユーザーのメールアドレスのID
        example: 1
        explode: false
        in: path
        name: user_email_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete My Email
      tags:
      - auth_Me
      x-accepts: application/json
    patch:
      description: 自分（ユーザー）のメールアドレスを更新します。 メールアドレスの設定が成功すると、確認用URLを含むメールがそのアドレスに送信されます。
        確認用URLには、メールアドレス確認用トークンとメールアドレスのIDが含まれます。
      operationId: updateMyEmail
      parameters:
      - description: ユーザーのメールアドレスのID
        example: 1
        explode: false
        in: path
        name: user_email_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEmailRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserEmail'
          description: OK
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Update My Email
      tags:
      - auth_Me
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/emails/{user_email_id}/verification:
    put:
      description: メールアドレスを確認するための確認メールを送信します。
      operationId: sendVerificationEmailToMyAddress
      parameters:
      - description: ユーザーのメールアドレスのID
        example: 1
        explode: false
        in: path
        name: user_email_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserEmailVerification'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                AlreadyVerified:
                  $ref: '#/components/examples/ErrorProblemBadRequest'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Bad Request
      summary: Send Verification Email to Me
      tags:
      - auth_Me
      x-accepts: application/json; charset=utf-8
  /auth/users/me/emails/{user_email_id}/verified:
    put:
      description: 自分（ユーザー）のメールアドレスを確認済みにします。
      operationId: updateMyAddressToVerified
      parameters:
      - description: ユーザーのメールアドレスのID
        example: 1
        explode: false
        in: path
        name: user_email_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailVerifiedRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                id: 1
                address: intdash@example.com
                verified: true
                created_at: 2000-01-01T00:00:00Z
                updated_at: 2000-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/UserEmail'
          description: OK
      summary: Set My Email as Verified
      tags:
      - auth_Me
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/password:
    put:
      description: |-
        パスワードを変更します。
        現在のパスワード `old_password` または `recovery_token` が必要です。
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                UserPassword:
                  $ref: '#/components/examples/UserPassword'
                  value: null
              schema:
                $ref: '#/components/schemas/UserPassword'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              example:
                type: invalid_request
                title: error message
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Bad Request
      summary: Change Password
      tags:
      - auth_Me
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/password/check:
    post:
      description: パスワードがポリシーに適合しているかをチェックします。
      operationId: checkPassword
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CheckPasswordRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CheckPasswordResult'
          description: OK
      summary: Check Password
      tags:
      - auth_Me
      x-content-type: application/json; charset=utf-8
      x-accepts: application/json; charset=utf-8
  /auth/users/me/roles:
    get:
      description: 自分（ユーザー）に割り当てられたロールのリストを取得します。
      operationId: listMyRoles
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                MyRoles:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Roles'
          description: OK
      summary: List My Roles
      tags:
      - auth_Me
      x-accepts: application/json; charset=utf-8
  /auth/users/me/tokens:
    get:
      description: 自分（ユーザー）のAPIトークンのリストを取得します。
      operationId: listMyAPITokens
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                UserAPITokenList:
                  $ref: '#/components/examples/UserAPITokenList'
                  value: null
              schema:
                $ref: '#/components/schemas/UserAPITokens'
          description: OK
      summary: List My API Tokens
      tags:
      - auth_Me
      x-accepts: application/json; charset=utf-8
    post:
      description: 自分（ユーザー）のAPIトークンを作成します。
      operationId: createMyAPIToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserAPITokenRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                CreatedUserAPIToken:
                  $ref: '#/components/examples/CreatedUserAPIToken'
                  value: null
              schema:
                $ref: '#/components/schemas/UserAPIToken'
          description: Created
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Create My API Token
      tags:
      - auth_Me
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/me/tokens/{user_api_token_id}:
    delete:
      description: 自分（ユーザー）のAPIトークンを削除します。
      operationId: deleteMyAPIToken
      parameters:
      - description: APIトークンのID
        example: 1
        explode: false
        in: path
        name: user_api_token_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete My API Token
      tags:
      - auth_Me
      x-accepts: application/json
    patch:
      description: 自分（ユーザー）のAPIトークンを作成します。
      operationId: updateMyAPIToken
      parameters:
      - description: APIトークンのID
        example: 1
        explode: false
        in: path
        name: user_api_token_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateUserAPITokenRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                UserAPIToken:
                  $ref: '#/components/examples/UserAPIToken'
                  value: null
              schema:
                $ref: '#/components/schemas/UserAPIToken'
          description: OK
      summary: Update My API Token
      tags:
      - auth_Me
      x-content-type: application/json; charset=utf-8
      x-accepts: application/json; charset=utf-8
  /auth/users/me/projects:
    get:
      description: 自分（ユーザー）が所属するプロジェクトのリストを取得します。
      operationId: listMyProjects
      parameters:
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - name
          - name+
          - name-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - Name
          - NameAsc
          - NameDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Projects'
          description: OK
      summary: List My Projects
      tags:
      - auth_Projects
      x-accepts: application/json; charset=utf-8
  /auth/users/me/groups:
    get:
      description: 自分（ユーザー）が所属するグループのリストを取得します。
      operationId: listMyGroups
      parameters:
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - name
          - name+
          - name-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - Name
          - NameAsc
          - NameDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                MyGroups:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Groups'
          description: OK
      summary: List My Groups
      tags:
      - auth_Groups
      x-accepts: application/json; charset=utf-8
  /auth/users/tokens/introspection:
    post:
      description: APIトークンの検証を行います。
      operationId: introspectAPIToken
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/APITokenIntrospectionRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                InvalidToken:
                  value:
                    active: false
              schema:
                $ref: '#/components/schemas/APITokenIntrospectionResponse'
          description: OK
      summary: Introspect API Token
      tags:
      - auth_Users
      x-content-type: application/json; charset=utf-8
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}:
    delete:
      description: ユーザーを削除します。
      operationId: deleteUser
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              example:
                type: forbidden
                title: error message
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
      summary: Delete User
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
    get:
      description: ユーザーを取得します。
      operationId: getUser
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                User:
                  $ref: '#/components/examples/User'
                  value: null
              schema:
                $ref: '#/components/schemas/User'
          description: OK
      summary: Get User
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
    patch:
      description: ユーザーを更新します。
      operationId: updateUser
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                User:
                  $ref: '#/components/examples/User'
                  value: null
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "403":
          content:
            application/json; charset=utf-8:
              example:
                type: forbidden
                title: error message
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Update User
      tags:
      - auth_Users
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/enable:
    put:
      description: ユーザーを有効化します。
      operationId: enableUser
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                User:
                  $ref: '#/components/examples/User'
                  value: null
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "403":
          content:
            application/json; charset=utf-8:
              example:
                type: forbidden
                title: error message
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
      summary: Enable User
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/disable:
    put:
      description: ユーザーを無効化します。
      operationId: disableUser
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
                name: intdash
                disabled: true
                is_super: false
                emails:
                - id: 1
                  address: intdash@example.com
                  verified: false
                  created_at: 2000-01-01T00:00:00Z
                  updated_at: 2000-01-01T00:00:00Z
                roles:
                - af22c56b-6b3e-4807-a165-07e9dbd7e25b
                created_at: 2000-01-01T00:00:00Z
                updated_at: 2000-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        "403":
          content:
            application/json; charset=utf-8:
              example:
                type: forbidden
                title: error message
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
      summary: Disable User
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/clients:
    get:
      description: ユーザーのOAuth2クライアントのリストを取得します。
      operationId: listUsersOAuth2Clients
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OAuth2Clients'
          description: OK
      summary: List User's OAuth2Clients
      tags:
      - auth_Clients
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/edges:
    get:
      description: 指定されたユーザーが所有するエッジのリストを取得します。
      operationId: listUsersEdges
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edges:
                  $ref: '#/components/examples/Edges'
                  value: null
              schema:
                $ref: '#/components/schemas/Edges'
          description: OK
      summary: List User's Edges
      tags:
      - auth_Edges
      x-accepts: application/json; charset=utf-8
    post:
      description: 指定されたユーザーを所有者とするエッジを作成します。
      operationId: createUsersEdge
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEdgeRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Edge'
          description: Created
      summary: Create User's Edge
      tags:
      - auth_Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/edges/{edge_uuid}:
    delete:
      description: ユーザーが所有するエッジを削除します。
      operationId: deleteUsersEdge
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete User's Edge
      tags:
      - auth_Edges
      x-accepts: application/json
    get:
      description: ユーザーが所有するエッジを取得します。
      operationId: getUsersEdge
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edge:
                  $ref: '#/components/examples/Edge'
                  value: null
              schema:
                $ref: '#/components/schemas/Edge'
          description: OK
      summary: Get User's Edge
      tags:
      - auth_Edges
      x-accepts: application/json; charset=utf-8
    patch:
      description: ユーザーが所有するエッジを更新します。
      operationId: updateUsersEdge
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEdgeRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Edge:
                  $ref: '#/components/examples/Edge'
                  value: null
              schema:
                $ref: '#/components/schemas/Edge'
          description: OK
      summary: Update User's Edge
      tags:
      - auth_Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/emails:
    post:
      description: ユーザーのメールアドレスを設定します。 メールアドレスの設定が成功すると、確認用URLを含むメールがそのアドレスに送信されます。
        確認用URLには、メールアドレス確認用トークンとメールアドレスのIDが含まれます。
      operationId: createEmail
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserEmail'
          description: Created
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Create Email
      tags:
      - auth_Users
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/emails/{user_email_id}:
    delete:
      description: ユーザーのメールアドレスを削除します。
      operationId: deleteEmail
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: ユーザーのメールアドレスのID
        example: 1
        explode: false
        in: path
        name: user_email_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Email
      tags:
      - auth_Users
      x-accepts: application/json
    patch:
      description: ユーザーのメールアドレスを更新します。 メールアドレスの設定が成功すると、確認用URLを含むメールがそのアドレスに送信されます。
        確認用URLには、メールアドレス確認用トークンとメールアドレスのIDが含まれます。
      operationId: updateEmail
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: ユーザーのメールアドレスのID
        example: 1
        explode: false
        in: path
        name: user_email_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEmailRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserEmail'
          description: OK
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Update Email
      tags:
      - auth_Users
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/emails/{user_email_id}/verification:
    put:
      description: メールアドレスを確認するため確認メールを送信します。メールアドレス確認用トークンを使用します。
      operationId: sendVerificationEmail
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: ユーザーのメールアドレスのID
        example: 1
        explode: false
        in: path
        name: user_email_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/UserEmailVerification'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                AlreadyVerified:
                  $ref: '#/components/examples/ErrorProblemBadRequest'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Bad Request
      summary: Send Verification Email
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/emails/{user_email_id}/verified:
    put:
      description: ユーザーのメールアドレスを確認済みにします。
      operationId: updateToVerified
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: ユーザーのメールアドレスのID
        example: 1
        explode: false
        in: path
        name: user_email_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailVerifiedRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                id: 1
                address: intdash@example.com
                verified: true
                created_at: 2000-01-01T00:00:00Z
                updated_at: 2000-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/UserEmail'
          description: OK
      summary: Set Email as Verified
      tags:
      - auth_Users
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/password:
    put:
      description: ユーザーのパスワードを、ランダムな一時パスワードに変更します。
      operationId: createTemporaryPassword
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                UserTemporaryPassword:
                  $ref: '#/components/examples/UserTemporaryPassword'
                  value: null
              schema:
                $ref: '#/components/schemas/UserPassword'
          description: OK
      summary: Create Temporary Password
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/password/unlock:
    put:
      description: ユーザーのパスワードのロックを解除します。このユーザーのログイン失敗回数は0にリセットされます。
      operationId: unlockPassword
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              example:
                attempt_count: 0
                is_temporary: false
                last_attempt_at: 2000-01-01T00:00:00Z
                created_at: 2000-01-01T00:00:00Z
                updated_at: 2000-01-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/UserPassword'
          description: OK
      summary: Unlock Password
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/roles:
    get:
      description: ユーザーのロールのリストを取得します。
      operationId: listUsersRoles
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                UsersRoles:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Roles'
          description: OK
      summary: List User's Roles
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/roles/{role_uuid}:
    delete:
      description: ユーザーへのロールの割り当てを解除します。
      operationId: unassignRole
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: ロールのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: role_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Unassign Role
      tags:
      - auth_Users
      x-accepts: application/json
    put:
      description: ユーザーにロールを割り当てます。
      operationId: assignRole
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: ロールのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: role_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
        "304":
          description: Not Modified
      summary: Assign Role
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/tokens:
    get:
      description: ユーザーのAPIトークンのリストを取得します。
      operationId: listAPITokens
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                UserAPITokenList:
                  $ref: '#/components/examples/UserAPITokenList'
                  value: null
              schema:
                $ref: '#/components/schemas/UserAPITokens'
          description: OK
      summary: List API Tokens
      tags:
      - auth_Users
      x-accepts: application/json; charset=utf-8
    post:
      description: ユーザーのAPIトークンを作成します。
      operationId: createAPIToken
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserAPITokenRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                CreatedUserAPIToken:
                  $ref: '#/components/examples/CreatedUserAPIToken'
                  value: null
              schema:
                $ref: '#/components/schemas/UserAPIToken'
          description: Created
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Create API Token
      tags:
      - auth_Users
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/users/{user_uuid}/tokens/{user_api_token_id}:
    delete:
      description: ユーザーのAPIトークンを削除します。
      operationId: deleteAPIToken
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: APIトークンのID
        example: 1
        explode: false
        in: path
        name: user_api_token_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete API Token
      tags:
      - auth_Users
      x-accepts: application/json
    patch:
      description: ユーザーのAPIトークンを更新します。
      operationId: updateAPIToken
      parameters:
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      - description: APIトークンのID
        example: 1
        explode: false
        in: path
        name: user_api_token_id
        required: true
        schema:
          example: 1
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateUserAPITokenRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                UserAPIToken:
                  $ref: '#/components/examples/UserAPIToken'
                  value: null
              schema:
                $ref: '#/components/schemas/UserAPIToken'
          description: OK
      summary: Update API Token
      tags:
      - auth_Users
      x-content-type: application/json; charset=utf-8
      x-accepts: application/json; charset=utf-8
  /auth/groups:
    get:
      description: グループのリストを取得します。
      operationId: listGroups
      parameters:
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - name
          - name+
          - name-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - Name
          - NameAsc
          - NameDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Groups:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Groups'
          description: OK
      summary: List Groups
      tags:
      - auth_Groups
      x-accepts: application/json; charset=utf-8
    post:
      description: グループを作成します。
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                CreatedGroup:
                  $ref: '#/components/examples/CreatedGroup'
                  value: null
              schema:
                $ref: '#/components/schemas/Group'
          description: Created
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ConflictNameAndEmail:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Create Group
      tags:
      - auth_Groups
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/groups/{group_uuid}:
    delete:
      description: グループを削除します。
      operationId: deleteGroup
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Group
      tags:
      - auth_Groups
      x-accepts: application/json
    get:
      description: グループを取得します。
      operationId: getGroup
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
      summary: Get Group
      tags:
      - auth_Groups
      x-accepts: application/json; charset=utf-8
    patch:
      description: グループを更新します。
      operationId: updateGroup
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
      summary: Update Group
      tags:
      - auth_Groups
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/groups/{group_uuid}/groups:
    get:
      description: サブグループを取得します。
      operationId: listSubGroup
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - name
          - name+
          - name-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - Name
          - NameAsc
          - NameDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                SubGroups:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Groups'
          description: OK
      summary: List Sub Groups
      tags:
      - auth_Groups
      x-accepts: application/json; charset=utf-8
    post:
      description: サブグループを作成します。
      operationId: createSubGroup
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                CreatedGroup:
                  $ref: '#/components/examples/CreatedGroup'
                  value: null
              schema:
                $ref: '#/components/schemas/Group'
          description: Created
        "403":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorExceededMaxGroupsCount:
                  $ref: '#/components/examples/ErrorProblemErrorExceededMaxGroupsCount'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ConflictNameAndEmail:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Create Sub Group
      tags:
      - auth_Groups
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/groups/{group_uuid}/members:
    get:
      description: グループメンバーリストを取得します。
      operationId: listGroupMembers
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          * `true` を指定した場合、オーナーのみを取得します。
          * `false` を指定した場合、オーナー以外を取得します。
          * 指定を省略した場合、オーナーであるかにかかわらずメンバーを取得します。
        example: false
        explode: true
        in: query
        name: is_owner
        required: false
        schema:
          type: boolean
        style: form
      - description: ユーザーのUUID
        explode: true
        in: query
        name: user_uuid
        required: false
        schema:
          items:
            example: b7f5f259-6a63-4a26-bfa3-e15240cbc0b7
            type: string
          type: array
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - name
          - name+
          - name-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - Name
          - NameAsc
          - NameDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                GroupMembers:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Members'
          description: OK
      summary: List Group Members
      tags:
      - auth_Group Members
      x-accepts: application/json; charset=utf-8
    post:
      description: グループメンバーを追加します。
      operationId: addGroupMember
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupMemberRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Member'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Bad Request
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                AlreadyMember:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Add Group Member
      tags:
      - auth_Group Members
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/groups/{group_uuid}/projects:
    get:
      description: プロジェクトのリストを取得します。
      operationId: listGroupProjects
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - name
          - name+
          - name-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - Name
          - NameAsc
          - NameDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                GroupProjects:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Projects'
          description: OK
      summary: List Group Projects
      tags:
      - auth_Projects
      x-accepts: application/json; charset=utf-8
    post:
      description: プロジェクトを作成します。
      operationId: createProject
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                CreatedProject:
                  $ref: '#/components/examples/CreatedProject'
                  value: null
              schema:
                $ref: '#/components/schemas/Project'
          description: Created
        "403":
          content:
            application/json; charset=utf-8:
              examples:
                ExceededMaxProjectsCountPerGroup:
                  $ref: '#/components/examples/ErrorProblemExceededMaxProjectsCountPerGroup'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ConflictNameAndEmail:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Create Project
      tags:
      - auth_Projects
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/projects:
    get:
      description: プロジェクトのリストを取得します。
      operationId: listProjects
      parameters:
      - description: 指定した時刻より後に作成されたリソースを取得します。
        example: 2006-01-02T15:04:05.999999999Z
        explode: true
        in: query
        name: since_created_at
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - name
          - name+
          - name-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - Name
          - NameAsc
          - NameDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Projects'
          description: OK
      summary: List Projects
      tags:
      - auth_Projects
      x-accepts: application/json; charset=utf-8
  /auth/projects/{project_uuid}:
    delete:
      description: プロジェクトを削除します。プロジェクトを削除できるのはプロジェクトのオーナーのみです。
      operationId: deleteProject
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              examples:
                CannotDeleteProject:
                  $ref: '#/components/examples/ErrorProblemForbiddenCannotDeleteProject'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
      summary: Delete Project
      tags:
      - auth_Projects
      x-accepts: application/json; charset=utf-8
    get:
      description: プロジェクトを取得します。
      operationId: getProject
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
      summary: Get Project
      tags:
      - auth_Projects
      x-accepts: application/json; charset=utf-8
    patch:
      description: プロジェクトを更新します。
      operationId: updateProject
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                ErrorProblemConflict:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Update Project
      tags:
      - auth_Projects
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/projects/{project_uuid}/edges:
    get:
      description: プロジェクトに所属するエッジのリストを取得します。
      operationId: listProjectEdges
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: エッジのUUID
        explode: true
        in: query
        name: edge_uuid
        required: false
        schema:
          items:
            example: b7f5f259-6a63-4a26-bfa3-e15240cbc0b7
            type: string
          type: array
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - nickname
          - nickname+
          - nickname-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - NicknameAt
          - NicknameAtAsc
          - NicknameAtDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                ProjectEdges:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/ProjectEdges'
          description: OK
      summary: List Project Edges
      tags:
      - auth_Project Edges
      x-accepts: application/json; charset=utf-8
    post:
      description: エッジをプロジェクトに追加します。
      operationId: addProjectEdges
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectEdgeRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProjectEdge'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Bad Request
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                AlreadyInProject:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Add Project Edge
      tags:
      - auth_Project Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/projects/{project_uuid}/edges/{edge_uuid}:
    delete:
      description: プロジェクトからエッジを外します。
      operationId: removeProjectEdge
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Remove Project Edge
      tags:
      - auth_Project Edges
      x-accepts: application/json
    get:
      description: プロジェクトに所属するエッジを取得します。
      operationId: getProjectEdge
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProjectEdge'
          description: OK
      summary: Get Project Edge
      tags:
      - auth_Project Edges
      x-accepts: application/json; charset=utf-8
    patch:
      description: プロジェクトエッジを更新します。
      operationId: updateProjectEdge
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: エッジのUUID
        example: e920a50c-ddde-4571-b066-b568340de7cf
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectEdgeRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProjectEdge'
          description: OK
        "304":
          description: Not Modified
      summary: Update Project Edge
      tags:
      - auth_Project Edges
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/projects/{project_uuid}/members:
    get:
      description: プロジェクトメンバーリストを取得します。
      operationId: listProjectMembers
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: ユーザーのUUID
        explode: true
        in: query
        name: user_uuid
        required: false
        schema:
          items:
            example: b7f5f259-6a63-4a26-bfa3-e15240cbc0b7
            type: string
          type: array
        style: form
      - description: |-
          * `true` を指定した場合、オーナーのみを取得します。
          * `false` を指定した場合、オーナー以外を取得します。
          * 指定を省略した場合、オーナーであるかにかかわらずメンバーを取得します。
        example: false
        explode: true
        in: query
        name: is_owner
        required: false
        schema:
          type: boolean
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      - description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
          例えば、 `name-` を指定すると、nameによる降順で出力されます。
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - created_at
          - created_at+
          - created_at-
          - updated_at
          - updated_at+
          - updated_at-
          - name
          - name+
          - name-
          type: string
          x-enum-varnames:
          - CreatedAt
          - CreatedAtAsc
          - CreatedAtDesc
          - UpdatedAt
          - UpdatedAtAsc
          - UpdatedAtDesc
          - Name
          - NameAsc
          - NameDesc
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                ProjectMembers:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Members'
          description: OK
      summary: List Project Members
      tags:
      - auth_Project Members
      x-accepts: application/json; charset=utf-8
    post:
      description: プロジェクトメンバーを追加します。
      operationId: addProjectMember
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProjectMemberRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Member'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Bad Request
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                AlreadyMember:
                  $ref: '#/components/examples/ErrorProblemConflict'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Conflict
      summary: Add Project Member
      tags:
      - auth_Project Members
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/projects/{project_uuid}/members/{user_uuid}:
    delete:
      description: プロジェクトからメンバーを外します。
      operationId: removeProjectMember
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              examples:
                OwnerMember:
                  $ref: '#/components/examples/ErrorProblemForbiddenRemoveOwner'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
      summary: Remove Project Member
      tags:
      - auth_Project Members
      x-accepts: application/json; charset=utf-8
    get:
      description: プロジェクトメンバーを取得します。
      operationId: getProjectMember
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Member'
          description: OK
        "404":
          description: Not Found
      summary: Get Project Member
      tags:
      - auth_Project Members
      x-accepts: application/json; charset=utf-8
    patch:
      description: プロジェクトメンバーを更新します。
      operationId: updateProjectMember
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectMemberRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Member'
          description: OK
      summary: Update Project Member
      tags:
      - auth_Project Members
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/projects/{project_uuid}/members/{user_uuid}/owner:
    delete:
      description: オーナー属性を取り除きます。
      operationId: removeProjectOwnerAttribute
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "304":
          description: Not Modified
        "403":
          content:
            application/json; charset=utf-8:
              examples:
                OwnerMember:
                  $ref: '#/components/examples/ErrorProblemForbiddenAtLeastOneOwner'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
      summary: Remove Project Owner Attribute
      tags:
      - auth_Project Members
      x-accepts: application/json; charset=utf-8
    put:
      description: オーナー属性を追加します。オーナー属性を追加したメンバーは自動的にそのプロジェクトにおける全ての権限が付与されます。
      operationId: addProjectOwnerAttribute
      parameters:
      - description: プロジェクトのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Member'
          description: OK
        "304":
          description: Not Modified
      summary: Add Project Owner Attribute
      tags:
      - auth_Project Members
      x-accepts: application/json; charset=utf-8
  /auth/groups/{group_uuid}/members/{user_uuid}:
    delete:
      description: グループメンバーを除名します。
      operationId: removeGroupMember
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json; charset=utf-8:
              examples:
                OwnerMember:
                  $ref: '#/components/examples/ErrorProblemForbiddenRemoveOwner'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
      summary: Remove Group Member
      tags:
      - auth_Group Members
      x-accepts: application/json; charset=utf-8
    get:
      description: グループメンバーを取得します。
      operationId: getGroupMember
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Member'
          description: OK
        "404":
          description: Not Found
      summary: Get Group Member
      tags:
      - auth_Group Members
      x-accepts: application/json; charset=utf-8
    patch:
      description: グループメンバーを更新します。
      operationId: updateGroupMember
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupMemberRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Member'
          description: OK
      summary: Update Group Member
      tags:
      - auth_Group Members
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /auth/groups/{group_uuid}/members/{user_uuid}/owner:
    delete:
      description: オーナー属性を取り除きます。
      operationId: removeGroupOwnerAttribute
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "304":
          description: Not Modified
        "403":
          content:
            application/json; charset=utf-8:
              examples:
                OwnerMember:
                  $ref: '#/components/examples/ErrorProblemForbiddenAtLeastOneOwner'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Forbidden
      summary: Remove Group Owner Attribute
      tags:
      - auth_Group Members
      x-accepts: application/json; charset=utf-8
    put:
      description: オーナー属性を追加します。オーナー属性を追加したメンバーは自動的にそのグループにおける全ての権限が付与されます。
      operationId: addGroupOwnerAttribute
      parameters:
      - description: グループのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: group_uuid
        required: true
        schema:
          type: string
        style: simple
      - example: 0932ff17-567c-4ac8-a40d-136357890f7b
        explode: false
        in: path
        name: user_uuid
        required: true
        schema:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Member'
          description: OK
        "304":
          description: Not Modified
      summary: Add Group Owner Attribute
      tags:
      - auth_Group Members
      x-accepts: application/json; charset=utf-8
  /auth/roles:
    get:
      description: ロールのリストを取得します。
      operationId: listRoles
      parameters:
      - description: ロールのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: ロールの名前による部分一致検索。文字列をダブルクォーテーションで囲むと、完全一致のものだけを取得します。
        example: member
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Roles:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Roles'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Bad Request
      summary: List Roles
      tags:
      - auth_Roles
      x-accepts: application/json; charset=utf-8
  /auth/roles/{role_uuid}:
    get:
      description: ロールを取得します。
      operationId: getRole
      parameters:
      - description: ロールのUUID
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        explode: false
        in: path
        name: role_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Role'
          description: OK
      summary: Get Role
      tags:
      - auth_Roles
      x-accepts: application/json; charset=utf-8
  /auth/scopes:
    get:
      description: スコープのリストを取得します。
      operationId: listScopes
      parameters:
      - description: スコープのUUID
        example: 4688a07a-0cbc-4597-8c87-538e744bc90d
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: スコープの名前による部分一致検索。文字列をダブルクォーテーションで囲むと、完全一致のものだけを取得します。
        example: meas:r
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 取得するページの番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 30
          maximum: 200
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                Scopes:
                  $ref: '#/components/examples/EmptyList'
                  value: null
              schema:
                $ref: '#/components/schemas/Scopes'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ErrorProblem'
          description: Bad Request
      summary: List Scopes
      tags:
      - auth_Scopes
      x-accepts: application/json; charset=utf-8
  /auth/scopes/{scope_uuid}:
    get:
      description: スコープを取得します。
      operationId: getScope
      parameters:
      - description: The Scope UUID.
        example: 4688a07a-0cbc-4597-8c87-538e744bc90d
        explode: false
        in: path
        name: scope_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Scope'
          description: OK
      summary: Get Scope
      tags:
      - auth_Scopes
      x-accepts: application/json; charset=utf-8
  /v1/edge_connections:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/edge_connection` を使用してください）
         エッジ接続のリストを取得します。
         エッジ接続は、エッジが `/v1/ws/measurements` エンドポイントに接続したときに新規作成され、
         3日間更新がないと削除されます。
      operationId: listEdgeConnections
      parameters:
      - description: エッジのUUID
        example:
        - b55e3351-97e2-4db1-ac90-60fda8b3d144
        explode: true
        in: query
        name: edge
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 並べ替えに使用するキー
        example: last_lived_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: last_lived_at
          enum:
          - last_lived_at
          - created_at
          - updated_at
          type: string
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: 1回のリクエストで取得する件数
        example:
        - "100"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: 取得するページの番号
        example: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    items:
                    - uuid: e0326d93-6e94-4edf-92a2-961cc1c07414
                      last_lived_at: 2017-02-11T01:23:45Z
                      edge:
                        uuid: b55e3351-97e2-4db1-ac90-60fda8b3d144
                        name: edge_name
                        nickname: edge_nickname
                        description: edge description
                        type: user
                        disabled: true
                        internal: false
                        protected: false
                        last_lived_at: 2017-02-11T01:23:45Z
                        last_login_at: 2017-02-11T01:23:45Z
                        created_at: 2017-02-11T01:23:45Z
                        updated_at: 2017-02-11T01:23:45Z
                      created_at: 2017-02-11T01:23:45Z
                      updated_at: 2017-02-11T12:34:56Z
                    page: null
              schema:
                $ref: '#/components/schemas/EdgeConnectionList'
          description: OK
      summary: List Edge Connections
      tags:
      - broker_Edge Connections
      x-accepts: application/json; charset=utf-8
  /v1/edge_connections/{edge_connection_uuid}:
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/edge_connection/{edge_connection_uuid}`\
        \ を使用してください） エッジ接続（ `/v1/ws/measurements` に接続されたエッジの接続情報）を取得します。"
      operationId: getEdgeConnection
      parameters:
      - description: エッジ接続のUUID
        example: e0326d93-6e94-4edf-92a2-961cc1c07414
        explode: false
        in: path
        name: edge_connection_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    created_at: 2017-02-11T01:23:45Z
                    downstreams:
                    - created_at: 2017-02-11T01:23:45Z
                      dst_edge_uuid: c3341333-31ce-40a6-9208-2dde4c869aab
                      last_received_at: 2017-02-11T01:23:45Z
                      received_close_request: false
                      src_edge_uuid: 3c11158e-ce70-41a9-8ed6-dd3a3b94ce3e
                      stream_id: 1
                      updated_at: 2017-02-11T12:34:56Z
                    edge:
                      created_at: 2017-02-11T01:23:45Z
                      description: edge description
                      disabled: true
                      internal: false
                      last_lived_at: 2017-02-11T01:23:45Z
                      last_login_at: 2017-02-11T01:23:45Z
                      name: edge_name
                      nickname: edge_nickname
                      protected: false
                      type: user
                      updated_at: 2017-02-11T01:23:45Z
                      uuid: b55e3351-97e2-4db1-ac90-60fda8b3d144
                    last_lived_at: 2017-02-11T01:23:45Z
                    updated_at: 2017-02-11T12:34:56Z
                    upstreams:
                    - created_at: 2017-02-11T01:23:45Z
                      last_received_at: 2017-02-11T01:23:45Z
                      measurement_uuid: e6e292d6-013f-4214-9367-6a5673c8c82a
                      received_close_request: false
                      resend: false
                      src_edge_uuid: 3c11158e-ce70-41a9-8ed6-dd3a3b94ce3e
                      store: false
                      stream_id: 1
                      updated_at: 2017-02-11T12:34:56Z
                    uuid: e0326d93-6e94-4edf-92a2-961cc1c07414
              schema:
                $ref: '#/components/schemas/EdgeConnection'
          description: OK
      summary: Get Edge Connection
      tags:
      - broker_Edge Connections
      x-accepts: application/json; charset=utf-8
  /v1/stream:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/stream` を使用してください）
         WebSocketを使ってリアルタイムデータを取得します。


         同じくWebSocketを使ってリアルタイムデータを扱う `/v1/ws/measurements` では、
         iSCP (intdash Stream Control Protocol)を使用しますが、
         本エンドポイントではJSONとしてデータポイントを取得することができます。

         ## クエリパラメータ


         | パラメータ名     | 型                         | 必須       | デフォルト | 説明  |

         | ---------------- | -------------------------- | ---------- | ---------- | ----- |

         | flush_interval   | string                     | true       | -          |
         メッセージがフラッシュされる間隔を指定します。
         単位は"ns"、"us" (または"µs")、"ms"、"s"、"m"、"h"のいずれかを使用してください
         （参考: [Goのtimeパッケージ](https://golang.org/pkg/time/#ParseDuration)）。
         指定がない場合は、メッセージごとにフラッシュされます。 |


         ## メッセージのフォーマット

         ###  JSON Lines

         リクエストメッセージおよびレスポンスメッセージには [JSON lines](http://jsonlines.org/) 形式を使用します。

         1つのメッセージが1行です。


         例:

         ```

         { "type" : "message_type", "contents" : { depends on message_type }}

         { "type" : "message_type", "contents" : { depends on message_type }}

         { "type" : "message_type", "contents" : { depends on message_type }}

         { "type" : "message_type", "contents" : { depends on message_type }}

         { "type" : "message_type", "contents" : { depends on message_type }}

         .

         .


         ```

         注意: メッセージに改行を含むことはできません。

         改行が入ったメッセージの例（悪い例）:

         ```

         {
           "type" : "message_type",
           "contents" : { depends on message_type }
         }

         ```


         メッセージには、 `type` 属性および `contents` 属性が必要です。
         `contents` のスキーマは、 `type` により決定されます。

         ## ダウンストリーム開始リクエスト

         ### ダウンストリーム開始リクエストメッセージのスキーマ

         | 属性名           | 型                       | 必須       | デフォルト        | 説明    |

         | ---------------- | ------------------------ | ---------- | ----------------- | ------- |

         | id               | number                   | false      | -                 | idに指定した値は、レスポンスの `ack` 属性として返ります。 |

         | type             | string                   | true       | `"open_downstream"` | 固定値  |

         | contents         | object（次の表を参照）   | true       | -                 |         |


         ### ダウンストリーム開始リクエスト内 `contents` のスキーマ

         | 属性名           | 型                       | 必須       | デフォルト         | 説明   |

         | ---------------- | ------------------------ | ---------- | ------------------ | ------ |

         | edge             | string                   | true       | -                  | データの送信元エッジを、エッジのUUIDまたはエッジの名前で指定します。
         最初に、一致するエッジUUIDが検索され、一致するエッジUUIDがなければ一致する名前が検索されます。 |

         | filter           | string array             | false      | `[]`               | 「フィルター」を参照してください。 |


         ### フィルター

         データコードとデータ名を指定することにより、指定にマッチしたデータポイントだけを受信することができます。

         ただし、メタデータのデータポイントは、フィルターの設定に関係なくすべて受信されます。


         フィルターは以下のフォーマットで設定します: `<型コード>:<データ名>`

         データコードについては、後述の 時系列データのペイロードフォーマット を参照してください。

         フィルター設定文字列の各セグメントにはワイルドカード( `**` )を使用することができます。


         例:

         - 型コードが `can_data_field` のデータポイント（CAN）を受信する -> `can_data_field:**`

         - 型コードが `string/` で始まるデータポイントを受信する（`string/json` 、 `string/csv` など） -> `string/**:**`

         - 文字列のデータポイントのうち、データ名が `my-string` のものを受信する -> `string:my-string`


         `filter` として空の配列が指定された場合は、すべてのデータポイントを受信します。


         ### ダウンストリーム開始リクエストの例

         リクエスト:

         ```

         { "type" : "open_downstream", "contents" : { "edge" : "edge_name_or_uuid", "filter" : ["string:a/b"] } }

         ```

         レスポンス（レスポンスの詳細については、「レスポンス」を参照してください）:


         ```

         { "type" : "response", "contents": { "code" : 10000, "message": "succeed: open downstream" } }

         ```


         ## ダウンストリーム更新リクエスト

         ### ダウンストリーム更新リクエストメッセージのスキーマ


         | 属性名           | 型                       | 必須       | デフォルト        | 説明    |

         | ---------------- | ------------------------ | ---------- | ----------------- | ------- |

         | id               | number                   | false      | -                 | idに指定した値は、レスポンスの `ack` 属性として返ります。 |

         | type             | string                   | true       | `"update_downstream"`  | 固定値  |

         | contents         | object（次の表を参照）   | true       | -                 |         |


         ### ダウンストリーム更新リクエスト内 `contents` のスキーマ


         | 属性名           | 型                       | 必須       | デフォルト        | 説明    |

         | ---------------- | ------------------------ | ---------- | ----------------- | ------- |

         | filter           | string array             | true       | -                 |「フィルター」を参照してください。 |


         ### ダウンストリーム更新リクエストの例

         フィルターを指定する場合のリクエスト:

         ```

         { "type" : "update_downstream", "contents" : { "filter" : ["string:a/b"] } }

         ```


         フィルターを指定せずすべてのデータポイントを受信する場合のリクエスト:

         ```

         { "type" : "update_downstream", "contents" : { "filter" : [] } }

         ```


         レスポンス（レスポンスの詳細については、「レスポンス」を参照してください）:


         ```

         { "type" : "response", "contents": { "code" : 10000, "message": "succeed:
         update downstream" } }

         ```


         ## ダウンストリーム終了リクエスト

         ### ダウンストリーム終了リクエストメッセージのスキーマ


         | 属性名           | 型                       | 必須       | デフォルト        | 説明    |

         | ---------------- | ------------------------ | ---------- | ----------------- | ------- |

         | id               | number                   | false      | -                 | idに指定した値は、レスポンスの `ack` 属性として返ります。  |

         | type             | string                   | true       | `"close_downstream"` | 固定値|


         ### ダウンストリーム終了リクエストの例

         リクエスト:

         ```

         { "type" : "close_downstream"}

         ```

         レスポンス（レスポンスの詳細については、「レスポンス」を参照してください）:

         ```

         { "type" : "response", "contents": { "code" : 10000, "message": "succeed: close downstream" } }

         ```


         ## レスポンスメッセージ

         リクエストの処理結果が返却されます。

         ### レスポンスメッセージのスキーマ


         | 属性名           | 型                       | 必須       | デフォルト        | 説明    |

         | ---------------- | ------------------------ | ---------- | ----------------- | ----- |

         | type             | string                   | true       | `"response"`      | 固定値|

         | ack              | number                   | false      | -                 | リクエストで `id` が指定されていた場合、その値 |

         | contents         | object（次の表を参照）   | true       | -                 |       |


         ### レスポンス内 `contents` のスキーマ


         | 属性名           | 型                       | 必須       | デフォルト        | 説明    |

         | ---------------- | ------------------------ | ---------- | ----------------- | ----- |

         | code             | number                   | true       | -                 | 10000 < code < 20000 の場合、成功。
         20000 < code < 30000 の場合、不正なリクエスト。50000 < code の場合、予期しないエラー |

         | message          | string                   | true       | -                 | リクエストで `id` が指定されていた場合、その値 |


         ### レスポンスの例

         ```

         { "type" : "response", "contents": { "code" : 10000, "message": "succeed: open downstream" } }

         ```


         リクエストで `id` が指定されている場合のレスポンス例（ `id` の値が `ack` として返ります）:


         ```

         { "ack": 1, "type" : "response", "contents": { "code" : 10000, "message": "succeed: open downstream" } }

         ```

         # 時系列データのペイロードフォーマット

         時系列データポイントが格納するペイロードのフォーマットです。各データ型に対する `contents`のフォーマットは [このページ](https://git.aptpod.co.jp/intdash-protocol/dataformat/-/tree/master/data) を参照してください。

         ## データ型

         各データバイナリには、ペイロードのフォーマットを示すデータ型が付与されます。各データ型には、型を識別するためのコード名が割り当てられます。

         ## 標準データ型

         単一のデータを格納するデータ型です。


         |          名称           |  コード   | バイト長 |             説明             |

         | :---------------------- | :-------- | :------: | :--------------------------- |

         | Bytes     | `bytes`   |   可変   | フォーマットなしバイト列     |

         | String    | `string`  |   可変   | フォーマットなし文字列       |

         | Float64   | `float64` |    8     | IEEE754 64ビット浮動小数点数 |

         | Int64     | `int64`   |    8     | 符号付き 64ビット整数        |

         | Bool      | `bool`    |    1     | 真偽値                       |


         ## メディアデータ型

         メディア（動画/音声）関連のデータを格納するデータ型です。


         |          名称           |    コード    | バイト長 |            説明            |

         | :---------------------- | :----------- | :------: | :------------------------- |

         | JPEG | `video/jpeg` |   可変   | JPEG 形式の画像データ      |

         | H264 | `video/h264` |   可変   | H264 形式の映像データ      |


         ### 拡張バイナリ型

         フォーマット付きのバイナリデータを格納するデータ型です。


         |                       名称                        |      コード       | バイト長 |                   説明                    |

         | :------------------------------------------------ | :---------------- | :------: | :---------------------------------------- |

         | BSON                                 | `bson`            |   可変   | BSON フォーマット                         |

         | CAN Frame                            | `can_frame`       |   可変   | CAN フレーム フォーマット                 |

         | CAN Data Field                       | `can_data_field`  |   可変   | CAN データフィールド フォーマット         |

         | MAVLink1 Packet                      | `mavlink1_packet` |   可変   | MAVLink パケット フォーマット             |

         | Generic (非推奨)                     | `generic`         |   可変   | iSCPv1互換 汎用フォーマット               |

         | Controlpad (非推奨)                  | `control_pad`     |   可変   | iSCPv1互換 コントロールパッドフォーマット |

         | GeneralSensor (非推奨)               | `general_sensor`  |   可変   | iSCPv1互換 汎用センサーフォーマット       |


         ### 拡張文字列型

         フォーマット付きの文字列データを格納するデータ型です。


         |           名称           |    コード     | バイト長 |       説明        |

         | :----------------------- | :------------ | :------: | :---------------- |

         | JSON | `string/json`     |   可変   | JSON フォーマット |

         | CSV   | `string/csv`     |   可変   | CSV フォーマット  |

         | NMEA | `string/nmea`     |   可変   | NMEA フォーマット |
      operationId: Stream
      responses:
        "101":
          description: Switching Protocols.
      summary: Get Realtime Streaming Data
      tags:
      - broker_Stream
      x-accepts: application/json
  /v1/ws/measurements:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/ws/measurements` を使用してください）
         iSCP v1（WebSocket上でリアルタイムデータを送受信するintdash独自プロトコル）の使用を開始するためのエンドポイントです。


         このリクエストを送ることで、プロトコルがWebSocketに切り替えられ、iSCP v1を使用できます。

         "permessage-deflate" (RFC 7692) が使用できます。


         iSCP v1の詳細については、別ドキュメント [詳説iSCP 1.0](https://docs.intdash.jp/manual/iscp1-essentials/latest/ja/iscp1-essentials-ja.pdf) を参照してください。


         「詳説iSCP 1.0」に記載されいていない事項ついては、 [アプトポッド](https://www.aptpod.co.jp/contact/) にお問い合わせください。
      operationId: ConnectISCPV1
      responses:
        "101":
          description: Switching Protocols
      summary: Connect ISCPv1
      tags:
      - broker_iSCP
      x-accepts: application/json
  /iscp/connect:
    get:
      description: |-
        iSCP v2（WebSocket上でリアルタイムデータを送受信するintdash独自プロトコル）の使用を開始するためのエンドポイントです。
        このリクエストを送ることで、プロトコルがWebSocketに切り替えられ、iSCP v2を使用できます。

        iSCP v2の詳細については、 [アプトポッド](https://www.aptpod.co.jp/contact/) にお問い合わせください。
      operationId: connectISCPV2
      responses:
        "101":
          description: Switching Protocols
      summary: Connect ISCPv2
      tags:
      - broker_iSCP
      x-accepts: application/json
  /iscp/tickets:
    post:
      description: |-
        iSCPの認証チケットを発行します。

        iSCPの認証チケットは、iSCPv2の接続リクエスト時の拡張用アクセストークンとして使用することができます。 また、認証チケットは有効期限内で一回のみ使用することができます。 一度使用した認証チケットは有効期限に関わらず使用することはできません。
      operationId: issueISCPTicket
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ISCPTicket'
          description: Created
      summary: Issue ISCP Ticket
      tags:
      - broker_iSCP
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/edge_connections:
    get:
      description: エッジ接続のリストを取得します。 エッジ接続は、エッジが `/v1/ws/measurements` エンドポイントに接続したときに新規作成され、
        3日間更新がないと削除されます。
      operationId: listProjectEdgeConnections
      parameters:
      - description: プロジェクトのUUID
        example: c78ce0c1-eb57-4f93-a087-ee3b7cee5e06
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: エッジのUUID
        example:
        - b55e3351-97e2-4db1-ac90-60fda8b3d144
        explode: true
        in: query
        name: edge
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 並べ替えに使用するキー
        example: last_lived_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: last_lived_at
          enum:
          - last_lived_at
          - created_at
          - updated_at
          type: string
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: 1回のリクエストで取得する件数
        example:
        - "100"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: 取得するページの番号
        example: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    items:
                    - uuid: e0326d93-6e94-4edf-92a2-961cc1c07414
                      last_lived_at: 2017-02-11T01:23:45Z
                      edge:
                        uuid: b55e3351-97e2-4db1-ac90-60fda8b3d144
                        name: edge_name
                        nickname: edge_nickname
                        description: edge description
                        type: user
                        disabled: true
                        internal: false
                        protected: false
                        last_lived_at: 2017-02-11T01:23:45Z
                        last_login_at: 2017-02-11T01:23:45Z
                        created_at: 2017-02-11T01:23:45Z
                        updated_at: 2017-02-11T01:23:45Z
                      created_at: 2017-02-11T01:23:45Z
                      updated_at: 2017-02-11T12:34:56Z
                    page: null
              schema:
                $ref: '#/components/schemas/EdgeConnectionList'
          description: OK
      summary: List Project Edge Connections
      tags:
      - broker_Edge Connections
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/edge_connections/{edge_connection_uuid}:
    get:
      description: エッジ接続（ `/v1/ws/measurements` に接続されたエッジの接続情報）を取得します。
      operationId: getProjectEdgeConnection
      parameters:
      - description: プロジェクトのUUID
        example: c78ce0c1-eb57-4f93-a087-ee3b7cee5e06
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: エッジ接続のUUID
        example: e0326d93-6e94-4edf-92a2-961cc1c07414
        explode: false
        in: path
        name: edge_connection_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    created_at: 2017-02-11T01:23:45Z
                    downstreams:
                    - created_at: 2017-02-11T01:23:45Z
                      dst_edge_uuid: c3341333-31ce-40a6-9208-2dde4c869aab
                      last_received_at: 2017-02-11T01:23:45Z
                      received_close_request: false
                      src_edge_uuid: 3c11158e-ce70-41a9-8ed6-dd3a3b94ce3e
                      stream_id: 1
                      updated_at: 2017-02-11T12:34:56Z
                    edge:
                      created_at: 2017-02-11T01:23:45Z
                      description: edge description
                      disabled: true
                      internal: false
                      last_lived_at: 2017-02-11T01:23:45Z
                      last_login_at: 2017-02-11T01:23:45Z
                      name: edge_name
                      nickname: edge_nickname
                      protected: false
                      type: user
                      updated_at: 2017-02-11T01:23:45Z
                      uuid: b55e3351-97e2-4db1-ac90-60fda8b3d144
                    last_lived_at: 2017-02-11T01:23:45Z
                    updated_at: 2017-02-11T12:34:56Z
                    upstreams:
                    - created_at: 2017-02-11T01:23:45Z
                      last_received_at: 2017-02-11T01:23:45Z
                      measurement_uuid: e6e292d6-013f-4214-9367-6a5673c8c82a
                      received_close_request: false
                      resend: false
                      src_edge_uuid: 3c11158e-ce70-41a9-8ed6-dd3a3b94ce3e
                      store: false
                      stream_id: 1
                      updated_at: 2017-02-11T12:34:56Z
                    uuid: e0326d93-6e94-4edf-92a2-961cc1c07414
              schema:
                $ref: '#/components/schemas/EdgeConnection'
          description: OK
      summary: Get Project Edge Connection
      tags:
      - broker_Edge Connections
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/stream:
    get:
      description: |-
        WebSocketを使ってリアルタイムデータを取得します。

        同じくWebSocketを使ってリアルタイムデータを扱う `/v1/ws/measurements` では、 iSCP (intdash Stream Control Protocol)を使用しますが、 本エンドポイントではJSONとしてデータポイントを取得することができます。
        ## クエリパラメータ

        | パラメータ名     | 型                         | 必須       | デフォルト | 説明  |
        | ---------------- | -------------------------- | ---------- | ---------- | ----- |
        | flush_interval   | string                     | true       | -          | メッセージがフラッシュされる間隔を指定します。 単位は"ns"、"us" (または"µs")、"ms"、"s"、"m"、"h"のいずれかを使用してください （参考: [Goのtimeパッケージ](https://golang.org/pkg/time/#ParseDuration)）。 指定がない場合は、メッセージごとにフラッシュされます。 |

        ## メッセージのフォーマット
        ###  JSON Lines
        リクエストメッセージおよびレスポンスメッセージには [JSON lines](http://jsonlines.org/) 形式を使用します。
        1つのメッセージが1行です。

        例:
        ```
        { "type" : "message_type", "contents" : { depends on message_type }}
        { "type" : "message_type", "contents" : { depends on message_type }}
        { "type" : "message_type", "contents" : { depends on message_type }}
        { "type" : "message_type", "contents" : { depends on message_type }}
        { "type" : "message_type", "contents" : { depends on message_type }}
        .
        .

        ```
        注意: メッセージに改行を含むことはできません。
        改行が入ったメッセージの例（悪い例）:
        ```
        {
          "type" : "message_type",
          "contents" : { depends on message_type }
        }
        ```

        メッセージには、 `type` 属性および `contents` 属性が必要です。 `contents` のスキーマは、 `type` により決定されます。
        ## ダウンストリーム開始リクエスト
        ### ダウンストリーム開始リクエストメッセージのスキーマ
        | 属性名           | 型                       | 必須       | デフォルト        | 説明    |
        | ---------------- | ------------------------ | ---------- | ----------------- | ------- |
        | id               | number                   | false      | -                 | idに指定した値は、レスポンスの `ack` 属性として返ります。 |
        | type             | string                   | true       | `"open_downstream"` | 固定値  |
        | contents         | object（次の表を参照）   | true       | -                 |         |

        ### ダウンストリーム開始リクエスト内 `contents` のスキーマ
        | 属性名           | 型                       | 必須       | デフォルト         | 説明   |
        | ---------------- | ------------------------ | ---------- | ------------------ | ------ |
        | edge             | string                   | true       | -                  | データの送信元エッジを、エッジのUUIDまたはエッジの名前で指定します。 最初に、一致するエッジUUIDが検索され、一致するエッジUUIDがなければ一致する名前が検索されます。 |
        | filter           | string array             | false      | `[]`               | 「フィルター」を参照してください。 |

        ### フィルター
        データコードとデータ名を指定することにより、指定にマッチしたデータポイントだけを受信することができます。
        ただし、メタデータのデータポイントは、フィルターの設定に関係なくすべて受信されます。

        フィルターは以下のフォーマットで設定します: `<型コード>:<データ名>`
        データコードについては、後述の 時系列データのペイロードフォーマット を参照してください。
        フィルター設定文字列の各セグメントにはワイルドカード( `**` )を使用することができます。

        例:
        - 型コードが `can_data_field` のデータポイント（CAN）を受信する -> `can_data_field:**`
        - 型コードが `string/` で始まるデータポイントを受信する（`string/json` 、 `string/csv` など） -> `string/**:**`
        - 文字列のデータポイントのうち、データ名が `my-string` のものを受信する -> `string:my-string`

        `filter` として空の配列が指定された場合は、すべてのデータポイントを受信します。

        ### ダウンストリーム開始リクエストの例
        リクエスト:
        ```
        { "type" : "open_downstream", "contents" : { "edge" : "edge_name_or_uuid", "filter" : ["string:a/b"] } }
        ```
        レスポンス（レスポンスの詳細については、「レスポンス」を参照してください）:

        ```
        { "type" : "response", "contents": { "code" : 10000, "message": "succeed: open downstream" } }
        ```

        ## ダウンストリーム更新リクエスト
        ### ダウンストリーム更新リクエストメッセージのスキーマ

        | 属性名           | 型                       | 必須       | デフォルト        | 説明    |
        | ---------------- | ------------------------ | ---------- | ----------------- | ------- |
        | id               | number                   | false      | -                 | idに指定した値は、レスポンスの `ack` 属性として返ります。 |
        | type             | string                   | true       | `"update_downstream"`  | 固定値  |
        | contents         | object（次の表を参照）   | true       | -                 |         |

        ### ダウンストリーム更新リクエスト内 `contents` のスキーマ

        | 属性名           | 型                       | 必須       | デフォルト        | 説明    |
        | ---------------- | ------------------------ | ---------- | ----------------- | ------- |
        | filter           | string array             | true       | -                 |「フィルター」を参照してください。 |

        ### ダウンストリーム更新リクエストの例
        フィルターを指定する場合のリクエスト:
        ```
        { "type" : "update_downstream", "contents" : { "filter" : ["string:a/b"] } }
        ```

        フィルターを指定せずすべてのデータポイントを受信する場合のリクエスト:
        ```
        { "type" : "update_downstream", "contents" : { "filter" : [] } }
        ```

        レスポンス（レスポンスの詳細については、「レスポンス」を参照してください）:

        ```
        { "type" : "response", "contents": { "code" : 10000, "message": "succeed: update downstream" } }
        ```

        ## ダウンストリーム終了リクエスト
        ### ダウンストリーム終了リクエストメッセージのスキーマ

        | 属性名           | 型                       | 必須       | デフォルト        | 説明    |
        | ---------------- | ------------------------ | ---------- | ----------------- | ------- |
        | id               | number                   | false      | -                 | idに指定した値は、レスポンスの `ack` 属性として返ります。  |
        | type             | string                   | true       | `"close_downstream"` | 固定値|

        ### ダウンストリーム終了リクエストの例
        リクエスト:
        ```
        { "type" : "close_downstream"}
        ```
        レスポンス（レスポンスの詳細については、「レスポンス」を参照してください）:
        ```
        { "type" : "response", "contents": { "code" : 10000, "message": "succeed: close downstream" } }
        ```

        ## レスポンスメッセージ
        リクエストの処理結果が返却されます。
        ### レスポンスメッセージのスキーマ

        | 属性名           | 型                       | 必須       | デフォルト        | 説明    |
        | ---------------- | ------------------------ | ---------- | ----------------- | ----- |
        | type             | string                   | true       | `"response"`      | 固定値|
        | ack              | number                   | false      | -                 | リクエストで `id` が指定されていた場合、その値 |
        | contents         | object（次の表を参照）   | true       | -                 |       |

        ### レスポンス内 `contents` のスキーマ

        | 属性名           | 型                       | 必須       | デフォルト        | 説明    |
        | ---------------- | ------------------------ | ---------- | ----------------- | ----- |
        | code             | number                   | true       | -                 | 10000 < code < 20000 の場合、成功。 20000 < code < 30000 の場合、不正なリクエスト。50000 < code の場合、予期しないエラー |
        | message          | string                   | true       | -                 | リクエストで `id` が指定されていた場合、その値 |

        ### レスポンスの例
        ```
        { "type" : "response", "contents": { "code" : 10000, "message": "succeed: open downstream" } }
        ```

        リクエストで `id` が指定されている場合のレスポンス例（ `id` の値が `ack` として返ります）:

        ```
        { "ack": 1, "type" : "response", "contents": { "code" : 10000, "message": "succeed: open downstream" } }
        ```
        # 時系列データのペイロードフォーマット
        時系列データポイントが格納するペイロードのフォーマットです。各データ型に対する `contents`のフォーマットは [このページ](https://git.aptpod.co.jp/intdash-protocol/dataformat/-/tree/master/data) を参照してください。
        ## データ型
        各データバイナリには、ペイロードのフォーマットを示すデータ型が付与されます。各データ型には、型を識別するためのコード名が割り当てられます。
        ## 標準データ型
        単一のデータを格納するデータ型です。

        |          名称           |  コード   | バイト長 |             説明             |
        | :---------------------- | :-------- | :------: | :--------------------------- |
        | Bytes     | `bytes`   |   可変   | フォーマットなしバイト列     |
        | String    | `string`  |   可変   | フォーマットなし文字列       |
        | Float64   | `float64` |    8     | IEEE754 64ビット浮動小数点数 |
        | Int64     | `int64`   |    8     | 符号付き 64ビット整数        |
        | Bool      | `bool`    |    1     | 真偽値                       |

        ## メディアデータ型
        メディア（動画/音声）関連のデータを格納するデータ型です。

        |          名称           |    コード    | バイト長 |            説明            |
        | :---------------------- | :----------- | :------: | :------------------------- |
        | JPEG | `video/jpeg` |   可変   | JPEG 形式の画像データ      |
        | H264 | `video/h264` |   可変   | H264 形式の映像データ      |

        ### 拡張バイナリ型
        フォーマット付きのバイナリデータを格納するデータ型です。

        |                       名称                        |      コード       | バイト長 |                   説明                    |
        | :------------------------------------------------ | :---------------- | :------: | :---------------------------------------- |
        | BSON                                 | `bson`            |   可変   | BSON フォーマット                         |
        | CAN Frame                            | `can_frame`       |   可変   | CAN フレーム フォーマット                 |
        | CAN Data Field                       | `can_data_field`  |   可変   | CAN データフィールド フォーマット         |
        | MAVLink1 Packet                      | `mavlink1_packet` |   可変   | MAVLink パケット フォーマット             |
        | Generic (非推奨)                     | `generic`         |   可変   | iSCPv1互換 汎用フォーマット               |
        | Controlpad (非推奨)                  | `control_pad`     |   可変   | iSCPv1互換 コントロールパッドフォーマット |
        | GeneralSensor (非推奨)               | `general_sensor`  |   可変   | iSCPv1互換 汎用センサーフォーマット       |

        ### 拡張文字列型
        フォーマット付きの文字列データを格納するデータ型です。

        |           名称           |    コード     | バイト長 |       説明        |
        | :----------------------- | :------------ | :------: | :---------------- |
        | JSON | `string/json`     |   可変   | JSON フォーマット |
        | CSV   | `string/csv`     |   可変   | CSV フォーマット  |
        | NMEA | `string/nmea`     |   可変   | NMEA フォーマット |
      operationId: projectStream
      parameters:
      - description: プロジェクトのUUID
        example: c78ce0c1-eb57-4f93-a087-ee3b7cee5e06
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "101":
          description: Switching Protocols.
      summary: Get Project Realtime Streaming Data
      tags:
      - broker_Stream
      x-accepts: application/json
  /v1/projects/{project_uuid}/ws/measurements:
    get:
      description: |-
        iSCP v1（WebSocket上でリアルタイムデータを送受信するintdash独自プロトコル）の使用を開始するためのエンドポイントです。

        このリクエストを送ることで、プロトコルがWebSocketに切り替えられ、iSCP v1を使用できます。
        "permessage-deflate" (RFC 7692) が使用できます。

        iSCP v1の詳細については、別ドキュメント [詳説iSCP 1.0](https://docs.intdash.jp/manual/iscp1-essentials/latest/ja/iscp1-essentials-ja.pdf) を参照してください。

        「詳説iSCP 1.0」に記載されいていない事項ついては、 [アプトポッド](https://www.aptpod.co.jp/contact/) にお問い合わせください。
      operationId: ConnectProjectISCPV1
      parameters:
      - description: プロジェクトのUUID
        example: c78ce0c1-eb57-4f93-a087-ee3b7cee5e06
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "101":
          description: Switching Protocols
      summary: Connect Project ISCPv1
      tags:
      - broker_iSCP
      x-accepts: application/json
  /v1/data:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/data` を使用してください）
         データポイントのリストを取得します。
         返却されるデータポイントはJSON形式です。データポイントごとに改行で区切られます。
      operationId: listDataPoints
      parameters:
      - description: |-
          どの計測またはどのエッジのデータポイントを取得するかを、以下のいずれかを使って指定します：
          - 計測UUID
          - エッジUUID
          - エッジの名前

          最初に、指定されたnameに一致する計測UUIDがあるかが検索されます。なければ一致するエッジUUIDがあるかが検索され、それもなければ一致するエッジの名前があるかが検索されます。
        example: 8f40b21c-f2c4-4fa5-8fe3-325491a59597
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の始点。以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z)
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.123456Z
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の終点。以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z)
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.234567Z
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得したいデータポイントの条件を以下のフォーマットで指定します。
          `data_id` には、 `GET /data_ids` エンドポイントで取得できる `data_id` の値を使用します。

          - `<data_type>:<channel>/<data_id>`

          各セグメントにはワイルドカード(*)を使用することができます。 例:
            - CAN(data_type = `1`)のデータポイントを取得する -> `1:*/*` または `1`
            - チャンネル2のCANデータポイントを取得する -> `1:2/*` または `1:2`
            - チャンネル2のCANデータポイントのうち、データIDが `00000001` のものを取得する -> `1:2/00000001`
        example: 1:1/*
        explode: true
        in: query
        name: idq
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          指定した時刻以降に更新された計測のみを取得します。
          以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z).
            - UNIX時刻（マイクロ秒）(**Deprecated**).
        example: 2019-10-29T03:04:05.341268Z
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: '`true` を指定した場合、取得中にエラーが発生すると処理を中断し、中断前までのデータポイントのリストを返します。'
        example: "false"
        explode: true
        in: query
        name: exit_on_error
        required: false
        schema:
          default: "false"
          type: string
        style: form
      - description: 信号定義のラベル
        example: label
        explode: true
        in: query
        name: label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          データポイントを指定した間隔（マイクロ秒）に間引きます。（ **Experimental** ）

          指定された間隔ごとに最新のデータポイントを残し、それ以外を除去します。 また、指定された間隔になるようにデータポイントの時刻を揃えます。
          ```
           --1--2----3---4--5---6-7--89-a---b-c---d--e--> period指定なし
           |     |     |     |     |     |     |     |
           |     |     |     |     |     |     |     |
           2-----3-----5-----7-----a-----c-----d-----e--> period指定あり

           |<--->| period
          ```
        example: 10000
        explode: true
        in: query
        name: period
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数。デフォルトは無制限。
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 並べ替えの順序。デフォルトは `asc` （昇順）
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: レスポンスの時刻表示形式。デフォルトは `us` （マイクロ秒）
        example: rfc3339
        explode: true
        in: query
        name: time_format
        required: false
        schema:
          enum:
          - ns
          - us
          - ms
          - s
          - rfc3339
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DataPointJSONLine'
            application/protobuf:
              schema:
                description: |-
                  - データは64ビットの符号なし整数です。バイトオーダーはリトルエンディアンです。
                  - データペイロード
                    - [protocol.proto](https://docs.intdash.jp/api/measurement/proto/index.html) の `DataResponseProto` 参照

                  ```

                  0    1    2    3    4    5    6    7    8
                  +----+----+----+----+----+----+----+----+
                  | Data Length( 8 byte)                  |
                  +----+----+----+----+----+----+----+----+ --+--
                  | Data Payload                          |   |
                  +                                       +   |
                  |                                       |   |
                  +                                       +   |
                  .                                       .   | Data Length
                  .                                       .   |
                  .                                       .   |
                  +                                       +   |
                  |                                       |   |
                  +----+----+----+----+----+----+----+----+ --+--
                  | Data Length(8byte)                    |
                  +----+----+----+----+----+----+----+----+ --+--
                  | Data Payload                          |   |
                  +                                       +   |
                  |                                       |   |
                  +                                       +   |
                  .                                       .   | Data Length
                  .                                       .   |
                  ```
                format: binary
                type: string
          description: OK
          headers:
            Transfer-Encoding:
              explode: false
              schema:
                enum:
                - Chunked
                type: string
              style: simple
      summary: List Data Points
      tags:
      - meas_DataPoints
      x-accepts: "application/json; charset=utf-8,application/protobuf"
  /v1/data_ids:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/data_ids` を使用してください）
         データポイントのデータID（ `data_type`, `data_id` ）のリストを取得します。
      operationId: listDataPointDataIDs
      parameters:
      - description: |-
          どの計測またはどのエッジのデータポイントを取得するかを、以下のいずれかを使って指定します：
          - 計測UUID
          - エッジUUID
          - エッジの名前

          最初に、指定されたnameに一致する計測UUIDがあるかが検索されます。なければ一致するエッジUUIDがあるかが検索され、それもなければ一致するエッジの名前があるかが検索されます。
        example: 8f40b21c-f2c4-4fa5-8fe3-325491a59597
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の始点。以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z)
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.123456Z
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の終点。以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z)
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.234567Z
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DataPointDataIDs'
          description: OK
      summary: List Data Point Data IDs
      tags:
      - meas_DataPointIDs
      x-accepts: application/json; charset=utf-8
  /v1/getids:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/getids` を使用してください）
         エッジを指定し、そのエッジから送信されているデータに含まれるデータ識別子（ `data_type` 、 `channel` 、 `data_id` の組み合わせ）のリストを取得します。
      operationId: listDataIDs
      parameters:
      - description: 取得対象範囲の始点（マイクロ秒単位のUNIX時刻）
        example: 1505797626000000
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 取得対象範囲の終点（マイクロ秒単位のUNIX時刻）
        example: 1505798226123456
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: エッジのUUID
        example: 24dbdc29-165f-4919-b2ce-7a335282bde2
        explode: true
        in: query
        name: edge_uuid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/DataIDsGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/DataIDs'
          description: OK
      summary: List Edge's Data IDs
      tags:
      - meas_DataPoints
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/getids:
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/getids`\
        \ を使用してください） 計測を指定し、その計測に含まれるデータ識別子（ `data_type` 、 `channel` 、 `data_id` の\
        組み合わせ）のリストを取得します。"
      operationId: listDataIDsWithMeasurementUUID
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/DataIDsGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/DataIDs'
          description: OK
      summary: List Data IDs
      tags:
      - meas_DataPoints
      x-accepts: application/json; charset=utf-8
  /v1/measurements/data:
    post:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/data` を使用してください）
         データポイントを登録します。
      operationId: createDataPoints
      requestBody:
        content:
          application/protobuf:
            schema:
              format: binary
              type: string
        description: |-
          このエンドポイント使用時は、 `Content-Type` を以下にしてください。
            * `application/protobuf`
                * [protocol.proto](https://docs.intdash.jp/api/measurement/proto/index.html) の `StoreProto` を参照してください。
                  * `DataPointProto` の `data_payload`は iSCP v1のデータフォーマットに従います。
                  * iSCPのデータフォーマットは [詳説 iSCP 1.0](https://docs.intdash.jp/manual/iscp1-essentials/latest/ja/iscp1-essentials-ja.pdf#page=23)を参照してください。
      responses:
        "200":
          content:
            '*/*':
              schema:
                description: OK
                format: binary
                type: string
          description: OK
      summary: Store Data Points
      tags:
      - meas_DataPoints
      x-content-type: application/protobuf
      x-accepts: '*/*'
  /v1/measurements:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements` を使用してください）
         計測のリストを取得します。
      operationId: listMeasurements
      parameters:
      - description: 計測のUUID
        example: 5c3ac8b5-3acd-43ea-86cb-4835664b0483
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 名前が指定した文字列から始まる計測を取得します。 文字列をダブルクォーテーションで囲むと、完全一致のものだけが取得されます。
        example: measurement1
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 計測に関連付けられたエッジのUUID
        example: e0022b03-023f-4f24-90f1-560be10c423b
        explode: true
        in: query
        name: edge_uuid
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の始点。以下のいずれかの形式で指定します。
            - RFC3339(例 `2019-10-29T03:04:05.341268Z` )
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.123456Z
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の終点。以下のいずれかの形式で指定します。
            - RFC3339(例 `2019-10-29T03:04:05.341268Z` )
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.234567Z
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      - description: |-
          `true` にすると、計測の一部が取得対象範囲に入っていればその計測は取得対象となります。 `false` にすると、計測の基準時刻（計測開始）が取得対象範囲に入っていればその計測は取得対象となります。
          ```
             | measurement1 |
             +--------------+
                                             | measurement2 |
                                             +--------------+
                                 | measurement3 |
                                 +--------------+
                                                                  time
          -----------+----------------------------+------------>
                     |                            |
                    start                        end
          ```

          - この例では、もし `partial_match` を `true` にすると、 `measurement1` 、 `measurement2` 、 `measurement3` が取得できます。
          - もし `partial_match` を `false` にすると、 `measurement2` と `measurement3` が取得できます。
        example: true
        explode: true
        in: query
        name: partial_match
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: 計測の基準時刻のタイプ
        example: ntp
        explode: true
        in: query
        name: basetime_type
        required: false
        schema:
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          type: string
        style: form
      - description: |-
          計測が終了している（ended）かどうかを指定して計測を取得します。

          エッジにおいてデータの取得が終了している場合、その計測は「終了(ended)」となります。
          計測は終了(ended)していても、まだサーバーに送信されていないデータがエッジに残っている可能性があります。
          * `true`: 終了した計測だけを取得します。
          * `false`: 終了していない計測だけを取得します。
        example: false
        explode: true
        in: query
        name: ended
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          指定した時刻以降に更新された計測のみを取得します。

          以下のいずれかの形式で指定します。

            - RFC3339(例 `2019-10-29T03:04:05.341268Z` )
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.341268Z
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: 計測時間の最小値（マイクロ秒）。これより短い計測は取得しません。
        example: 100
        explode: true
        in: query
        name: duration_start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 計測時間の最大値（マイクロ秒）。これより長い計測は取得しません。
        example: 100000
        explode: true
        in: query
        name: duration_end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 計測のステータス
        example: measuring
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - measuring
            - resending
            - finished
            type: string
          type: array
        style: form
      - description: 1回のリクエストで取得する件数。ただし、0を指定するとデフォルトの値が使用されます。
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: base_time
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: base_time
          enum:
          - name
          - description
          - ended
          - duration
          - base_time
          - processed_ratio
          - created_at
          - updated_at
          type: string
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasList'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurements'
          description: OK
      summary: List Measurements
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
    post:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements` を使用してください）
         計測を作成します。

         - **Note**
           - 計測の保護／非保護を切り替える権限を持たないエッジも、
             計測作成時は保護された計測を作成することが可能です。
      operationId: createMeasurement
      requestBody:
        content:
          application/json:
            examples:
              example1:
                $ref: '#/components/examples/MeasCreate'
                value: null
            schema:
              $ref: '#/components/schemas/MeasCreate'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/Meas'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: Created
      summary: Create Measurement
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}:
    delete:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}` を使用してください）
         計測を削除します。
         - **Note**
           - 保護された計測は削除できません。
      operationId: deleteMeasurement
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Trash Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}`\
        \ を使用してください） 計測を取得します。"
      operationId: getMeasurement
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasFinished'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: OK
      summary: Get Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
    post:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}`\
        \ を使用してください） 指定したUUIDの計測を作成します。"
      operationId: createMeasurementWithUUID
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                $ref: '#/components/examples/MeasCreate'
                value: null
            schema:
              $ref: '#/components/schemas/MeasCreate'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/Meas'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: Created
      summary: Create Measurement with UUID
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
    put:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}`\
        \ を使用してください） 計測に関する情報を更新します。"
      operationId: updateMeasurement
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasReplace'
      responses:
        "204":
          description: No Content
      summary: Update Measurement
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json
  /v1/measurements/{measurement_uuid}/complete:
    put:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/complete` を使用してください）
         計測を回収完了（completed）にします。
         completedは、エッジでのデータ取得が終了し（ended）、
         かつ、すべてのデータがサーバーに送信されたことを意味します。
      operationId: completeMeasurement
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/Meas'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: OK
      summary: Complete Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/end:
    put:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/end` を使用してください）
         計測終了（ended）とします。endedは、エッジにおけるデータの取得が終了していることを表します。
         （サーバーに回収されていないデータがまだエッジに残っている可能性はあります。サーバーへのデータの回収が完了した状態は、completedと呼びます。）
      operationId: endMeasurement
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SequenceSummary'
          description: OK
      summary: End Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/protected:
    delete:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/protected`\
        \ を使用してください） 計測の保護を解除します。"
      operationId: unprotectMeasurement
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Unprotect Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json
    put:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/protected`\
        \ を使用してください） 計測を保護します。保護された計測は削除できません。 [See](#section/Protected-resources)\
        \ も参照してください。"
      operationId: protectMeasurement
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Protect Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json
  /v1/measurements/{measurement_uuid}/basetimes:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/basetimes` を使用してください）
         計測の基準時刻のリストを取得します。
      operationId: listMeasurementBaseTimes
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasBaseTimesGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasBaseTimes'
          description: OK
      summary: List Measurement Base Times
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/basetimes/{type}:
    delete:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/basetimes/{type}` を使用してください）
         基準時刻を削除します。

         指定された基準時刻が使用中の場合（その計測の `basetime_type` として設定されている場合）は、
         その基準時刻は削除できません（ステータスコード `409` が返却されます）。

         このような場合は、他の基準時刻をその計測の `basetime_type` にしてから、削除したい基準時刻を削除してください。
      operationId: deleteMeasurementBaseTime
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 基準時刻のタイプ
        example: ntp
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Measurement Base Time
      tags:
      - meas_Measurements
      x-accepts: application/json
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/basetimes/{type}`\
        \ を使用してください） 基準時刻タイプを指定して計測の基準時刻を取得します。"
      operationId: getMeasurementBaseTime
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 基準時刻のタイプ
        example: ntp
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasBaseTimeGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasBaseTime'
          description: OK
      summary: Get Measurement Base Time
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
    put:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/basetimes/{type}` を使用してください）
         基準時刻を更新します。
         この計測において、使用する基準時刻が設定されていない（ `basetime_type` が `undefined` ）の場合は、
         新しい基準時刻を `basetime_type` に設定します。
      operationId: updateMeasurementBaseTime
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 基準時刻のタイプ
        example: ntp
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                $ref: '#/components/examples/MeasBaseTimePutRequest'
                value: null
            schema:
              $ref: '#/components/schemas/MeasBaseTimePut'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasBaseTimePutResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasBaseTime'
          description: OK
      summary: Replace Measurement Base Time
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/sections:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/sections` を使用してください）
         計測に含まれるセクションのリストを取得します。
      operationId: getMeasurementSections
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測セクションの処理ステータス。 `processed` （処理済みの計測セクションを取得）、 `unprocessed`
          （未処理の計測セクションを取得）、 `both` （両方を取得）のいずれかを選択します。
        example: processed
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: both
          enum:
          - processed
          - unprocessed
          - both
          type: string
        style: form
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementSectionsGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementSectionsGetResponse'
          description: OK
      summary: List Measurement Sections
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/sequences:
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/sequences`\
        \ を使用してください） 計測シーケンスのリストを取得します。"
      operationId: listMeasurementSequences
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MeasurementSequenceGroups'
          description: OK
      summary: List Measurement Sequences
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/sequences/{sequences_uuid}:
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/sequences/{sequence_uuid}`\
        \ を使用してください） 計測シーケンスを取得します。"
      operationId: getMeasurementSequence
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測シーケンスのUUID
        example: 0b849907-9f04-4c87-b176-b73fb527e935
        explode: false
        in: path
        name: sequences_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MeasurementSequenceGroup'
          description: OK
      summary: Get Measurement Sequence
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
    patch:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/sequences/{sequence_uuid}`\
        \ を使用してください） 計測シーケンスを更新します。"
      operationId: updateMeasurementSequence
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測シーケンスのUUID
        example: 0b849907-9f04-4c87-b176-b73fb527e935
        explode: false
        in: path
        name: sequences_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementSequenceGroupReplace'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MeasurementSequenceGroup'
          description: OK
      summary: Update Measurement Sequence
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
    put:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/sequences/{sequence_uuid}`\
        \ を使用してください） 計測シーケンスを置換します。"
      operationId: replaceMeasurementSequence
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測シーケンスのUUID
        example: 0b849907-9f04-4c87-b176-b73fb527e935
        explode: false
        in: path
        name: sequences_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementSequenceGroupReplace'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MeasurementSequenceGroup'
          description: OK
      summary: Replace Measurement Sequence
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/measurements/sequences/chunks:
    post:
      deprecated: true
      description: （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/sequence/chunks`
        を使用してください） 計測シーケンスにチャンクを作成します。
      operationId: createMeasurementSequenceChunks
      requestBody:
        content:
          application/vnd.iscp.v2.protobuf:
            schema:
              description: |-
                [protocol.proto](https://docs.intdash.jp/api/measurement/proto/index.html)の`StoreDataChunks`を参照してくだいさい。

                `StoreDataPoint`のpayloadは iSCP v2のデータフォーマットに従います。この資料は現在準備中です。
              format: binary
              type: string
          application/json:
            schema:
              description: |-
                [protocol.proto](https://docs.intdash.jp/api/measurement/proto/index.html)の`StoreDataChunks`をJSONでシリアライズしたものです。

                `StoreDataPoint`のpayloadは iSCP v2のデータフォーマットに従います。この資料は現在準備中です。
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateMeasurementChunksResult'
          description: OK
      summary: Create Measurement Sequence Chunk
      tags:
      - meas_Measurements
      x-content-type: application/vnd.iscp.v2.protobuf
      x-accepts: application/json; charset=utf-8
  /v1/measurements/jobs:
    get:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/jobs` を使用してください）
         ジョブ（CSVファイルを計測に変換するジョブなど）のリストを取得します。
      operationId: listMeasurementJobs
      parameters:
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
        style: form
      - description: ジョブのステータス
        example: succeeded
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ready
          - processing
          - succeeded
          - failed
          - cancelled
          type: string
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementJobsGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementJobs'
          description: OK
      summary: List Measurement Jobs
      tags:
      - meas_Measurement Jobs
      x-accepts: application/json; charset=utf-8
  /v1/measurements/jobs/{job_uuid}:
    delete:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/jobs/{job_uuid}`\
        \ を使用してください） ジョブを削除します。"
      operationId: deleteMeasurementJob
      parameters:
      - description: ジョブのUUID
        example: ddba7729-3a53-42bb-a4cf-6d19a3e66deb
        explode: false
        in: path
        name: job_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Measurement Job
      tags:
      - meas_Measurement Jobs
      x-accepts: application/json
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/jobs/{job_uuid}`\
        \ を使用してください） ジョブを取得します。"
      operationId: getMeasurementJob
      parameters:
      - description: ジョブのUUID
        example: ddba7729-3a53-42bb-a4cf-6d19a3e66deb
        explode: false
        in: path
        name: job_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementJobGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementJob'
          description: OK
      summary: Get Measurement Job
      tags:
      - meas_Measurement Jobs
      x-accepts: application/json; charset=utf-8
  /v1/measurements/jobs/{job_uuid}/cancel:
    put:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/jobs/{job_uuid}/cancel`\
        \ を使用してください） ジョブをキャンセルします。"
      operationId: cancelMeasurementJob
      parameters:
      - description: ジョブのUUID
        example: ddba7729-3a53-42bb-a4cf-6d19a3e66deb
        explode: false
        in: path
        name: job_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Cancel Measurement Job
      tags:
      - meas_Measurement Jobs
      x-accepts: application/json
  /v1/measurements/markers:
    get:
      deprecated: true
      description: （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/markers`
        を使用してください） 計測マーカーのリストを取得します。
      operationId: listMeasurementMarkers
      parameters:
      - description: 計測マーカーのUUID
        example: c14f84c1-b7a5-459b-bd1e-35982e4a4f38
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 計測マーカーの名前
        example: measurement marker1
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Get MeasMarkers which start Meas.BaseTime + elapsed_time &lt;=\
          \ this[usec]."
        example: 1000
        explode: true
        in: query
        name: start_unix_micro
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Get MeasMarkers which start this[usec] &lt; Meas.BaseTime +\
          \ elapsed_time."
        example: 1000
        explode: true
        in: query
        name: end_unix_micro
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |-
          タグのキーと値を使って条件を指定し、条件に一致する計測マーカーを取得します。
          キーのみを指定した場合は、指定されたキーを持つ計測マーカーを取得します。 キーと値を指定した場合は、指定されたキーを持ち、その値として指定された値を含む計測マーカーを取得します。
          `tag.<key>=<value>` 条件は複数個指定することができ、OR条件で使用されます。 ただし `!tag.<key>` と組み合わせた場合、  `!tag.<key>` が優先されます。

          例:

              | measurement marker | tag (key: value) |
              | ------------------ | ---------------- |
              | 1                  | a: value1        |
              |                    | c: value2        |
              |                    | e: 1             |

              | 2                  | a: b             |
              |                    | c: d             |

              | 3                  | a: b             |

            -  `?tag.e=` の場合、計測マーカー1番が取得されます。
            -  `?!tag.c=` の場合、計測マーカー3番が取得されます。
            -  `?tag.a=&!tag.e=` の場合、計測マーカー2、3番が取得されます。
            -  `?tag.a=val&tag.c=d` の場合、計測マーカー1、2番が取得されます。
        example: include_tag_value
        explode: true
        in: query
        name: tag.<key>
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          タグのキーを使って条件を指定し、条件に一致する計測キャプチャを除外します。
          タグの値は無視されます。
          `!tag.<key>` を複数個指定した場合、AND条件となります。 また、 `tag.<key>=<value>` と組み合わせて使用した場合、 `tag.<key>=<value>`  よりも `!tag.<key>` が優先されます。
          例: 上の `tag.<key>` の説明を参照してください。
        example: exclude_tag_value
        explode: true
        in: query
        name: '!tag.<key>'
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: base_time
          enum:
          - name
          - base_time
          - created_at
          - updated_at
          type: string
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementMarkersGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarkers'
          description: OK
      summary: List Measurement Markers
      tags:
      - meas_Measurement Markers
      x-accepts: application/json; charset=utf-8
  /v1/measurements/markers/{measurement_marker_uuid}:
    delete:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/markers/{measurement_marker_uuid}`\
        \ を使用してください） 計測マーカーを削除します。"
      operationId: deleteMeasurementMarker
      parameters:
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Measurement Marker
      tags:
      - meas_Measurement Markers
      x-accepts: application/json
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/markers/{measurement_marker_uuid}`\
        \ を使用してください） 計測マーカーを取得します。"
      operationId: getMeasurementMarker
      parameters:
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: OK
      summary: Get Measurement Marker
      tags:
      - meas_Measurement Markers
      x-accepts: application/json; charset=utf-8
    put:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/markers/{measurement_marker_uuid}`\
        \ を使用してください） 計測マーカーを更新します。"
      operationId: updateMeasurementMarker
      parameters:
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              range:
                $ref: '#/components/examples/MeasurementMarkerPutRequestRange'
                value: null
              point:
                $ref: '#/components/examples/MeasurementMarkerPutRequestPoint'
                value: null
            schema:
              $ref: '#/components/schemas/MeasurementMarkerPutRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: OK
      summary: Update Measurement Marker
      tags:
      - meas_Measurement Markers
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/measurements/markers/{measurement_marker_uuid}/measurement:
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/markers/{measurement_marker_uuid}/measurement`\
        \ を使用してください）"
      operationId: getMeasurementFromMeasurementMarker
      parameters:
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example:
                  $ref: '#/components/examples/Meas'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: OK
      summary: Get Measurement from Marker
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/measurements/upload:
    get:
      deprecated: true
      description: （ **Deprecated** このエンドポイントではなく、`GET /measurements/jobs` を使用してください。）
        計測のアップロードのリストを取得します。
      operationId: listMeasurementStatuses
      parameters:
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementUploadStatusesGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementUploadStatusesGetResponse'
          description: OK
      summary: List Uploading Statuses of Measurements
      tags:
      - meas_Uploading Measurements
      x-accepts: application/json; charset=utf-8
    post:
      description: |-
        CSVまたはMP4（**MP4はexperimental**）ファイルをアップロードし、計測を作成します。 計測には、指定されたエッジUUIDが関連付けられます。

        `base_time` （基準時刻）は、RFC3339による表現か、UNIX時刻（マイクロ秒）を指定してください。
        基準時刻が指定されていない場合は、CSVファイルのデータ行の1行目の時刻が基準時刻として使用されます。
        CSVファイルのデータは、時刻順にソートされている必要があります。
        `meas_end` パラメーターの設定は任意です。指定しない場合、 `true` となります。

        CSVファイルの例:
        ```
        time,       col1,   col2, col3,      col4,   col5, col6,      col7,   col8, col9,      col10
        1539263579, val11,  12,   13.12345,  val14,  15,   16.12345,  val17,  18, 19.12345,  val110
        1539263580, val21,  22,   23.12345,  val24,  25,   26.12345,  val27,  28, 29.12345,  val210
        1539263581, val31,  32,   33.12345,  val34,  35,   36.12345,  val37,  38, 39.12345,  val310
        1539263582, val41,  42,   43.12345,  val44,  45,   46.12345,  val47,  48, 49.12345,  val410
        ```
        空白行がある場合、行番号のカウントは加算されますが、その行は処理されません。 例えば、以下のような場合の空白行は無視されます。
        ```
        time,       col1,   col2, col3,      col4,   col5, col6,      col7,   col8, col9,      col10
        1539263579, val11,  12,   13.12345,  val14,  15,   16.12345,  val17,  18, 19.12345,  val110

        1539263581, val31,  32,   33.12345,  val34,  35,   36.12345,  val37,  38, 39.12345,  val310
        1539263582, val41,  42,   43.12345,  val44,  45,   46.12345,  val47,  48, 49.12345,  val410
        ```

        [Go parser library](https://golang.org/pkg/encoding/csv/) も参照してください。

        時刻の列には、RFC3339による表現か、UNIX時刻（秒）を使用することができます。
        ## エスケープ
        値の内部で `,` を使用したい場合は、その値全体を `"` で囲んでください。
        また、値の内部で `"` を使用したい場合は、値全体を `"` で囲み、さらに、 `"` を `""` のように表記してください。
        値を `"` で囲まないと、CSVファイルのパースの際にエラーが発生します。

        エスケープの例:
        ```
        time,col1
        1539263579,"ab,cde"                  .....OK (parsed as 'ab,cde')
        1539263579,"ab""cde"                 .....OK (parsed as 'ab"cde')
        1539263579,     abcde                .....OK (parsed as '     abcde')
        1539263579,"     abcde"              .....OK (parsed as '     abcde')
        1539263579,ab"cde                    .....NG
        1539263579, "abcde"                  .....NG
        1539263579,ab,cde                    .....NG(wrong number of fields)
        ```
      operationId: uploadMeasurement
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasurementUploadPostRequest'
      responses:
        "202":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementUploadPostResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementUploadPostResponse'
          description: OK
      summary: Create Measurement from CSV File
      tags:
      - meas_Uploading Measurements
      x-content-type: multipart/form-data
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/upload:
    post:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/upload` を使用してください）
         CSVファイルをアップロードし、計測にデータを追加します。
      operationId: uploadMeasurementIntoMeasurement
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasurementUploadPostRequestAppend'
        description: '`meas_end` パラメーターの設定は任意です。指定しない場合、 `true` となります。'
      responses:
        "202":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementUploadPostResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementUploadPostResponse'
          description: OK
      summary: Store Data Points by CSV File
      tags:
      - meas_Uploading Measurements
      x-content-type: multipart/form-data
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/markers:
    delete:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/markers`\
        \ を使用してください） 計測マーカーを削除します。"
      operationId: deleteMeasurementMarkers
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Measurement Markers by Measurement UUID
      tags:
      - meas_Measurement Markers
      x-accepts: application/json
    get:
      deprecated: true
      description: "(**Deprecated** このエンドポイントではなく、 `GET /measurements/{measurement_uuid}`\
        \ を使用してください。) 計測UUIDを指定して、その計測に付与されたマーカーの一覧を取得します。"
      operationId: getMeasurementMarkersWithMeasurementUUID
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  value:
                    items:
                    - uuid: 887326ce-a2a2-4db6-8c06-2f8447f0f29e
                      name: name
                      description: description
                      type: range
                      detail:
                        start_elapsed_time: 100
                        end_elapsed_time: 200
                      tag:
                        key1: value1
                        key2: value2
                      elapsed_time: 1000
                      created_at: 2017-02-11T01:23:45Z
                      created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                      updated_at: 2017-02-11T12:34:56Z
                      updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                    - uuid: 887326ce-a2a2-4db6-8c06-2f8447f0f29e
                      name: name
                      description: description
                      type: range
                      detail:
                        occurred_elapsed_time: 100
                      tag:
                        key1: value1
                        key2: value2
                      elapsed_time: 1000
                      created_at: 2017-02-11T01:23:45Z
                      created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                      updated_at: 2017-02-11T12:34:56Z
                      updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
              schema:
                $ref: '#/components/schemas/MeasurementMarkersWithoutPage'
          description: OK
      summary: List Measurement Markers by Measurement UUID
      tags:
      - meas_Measurement Markers
      x-accepts: application/json; charset=utf-8
    post:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/markers`\
        \ を使用してください） 計測マーカーを作成します。"
      operationId: createMeasurementMarker
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              point:
                $ref: '#/components/examples/MeasurementMarkerPostRequestPoint'
                value: null
              range:
                $ref: '#/components/examples/MeasurementMarkerPostRequestRange'
                value: null
            schema:
              $ref: '#/components/schemas/MeasurementMarkerPostRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: Created
      summary: Create Measurement Marker by Measurement UUID
      tags:
      - meas_Measurement Markers
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/measurements/{measurement_uuid}/markers/{measurement_marker_uuid}:
    delete:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/markers/{Measurement_marker_uuid}`\
        \ を使用してください） 計測マーカーを削除します。"
      operationId: deleteMeasurementMarkerWithMeasurementUUIDAndMarkerUUID
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Measurement Marker using Measurement UUID
      tags:
      - meas_Measurement Markers
      x-accepts: application/json
    get:
      deprecated: true
      description: "**Deprecated** このエンドポイントではなく、 `GET /measurements/{measurement_uuid}`\
        \ を使用してください。"
      operationId: getMeasurementMarkerWithMeasurementUUIDAndMarkerUUID
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: OK
      summary: Get Measurement Marker using Measurement UUID
      tags:
      - meas_Measurement Markers
      x-accepts: application/json; charset=utf-8
    put:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/measurements/{measurement_uuid}/markers/{Measurement_marker_uuid}`\
        \ を使用してください） 計測マーカーの情報を更新します。"
      operationId: updateMeasurementMarkerWithMeasurementUUIDAndMarkerUUID
      parameters:
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              range:
                $ref: '#/components/examples/MeasurementMarkerPutRequestRange'
                value: null
              point:
                $ref: '#/components/examples/MeasurementMarkerPutRequestPoint'
                value: null
            schema:
              $ref: '#/components/schemas/MeasurementMarkerPutRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: OK
      summary: Replace Measurement Marker using Measurement UUID
      tags:
      - meas_Measurement Markers
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/signals:
    get:
      deprecated: true
      description: （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/signals`
        を使用してください） 信号定義のリストを取得します。
      operationId: listSignals
      parameters:
      - description: ラベルが指定した文字列から始まる信号定義を取得します。 文字列をダブルクォーテーションで囲むと、完全一致のものだけを取得します。
        example: label1
        explode: true
        in: query
        name: label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 並べ替えに使用するキー
        example: label
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - label
          - created_at
          - updated_at
          type: string
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: 1回のリクエストで取得する件数
        example: "100"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 取得するページの番号
        example: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    items:
                    - channel: 1
                      conversion:
                        options:
                          bitsize: 8
                          endian: big
                          offset: 0
                          scale: 1
                          sign: signed
                          startbit: 0
                        type: num_fixed_point
                      created_at: 2017-02-11T01:23:45Z
                      data_id: "00000001"
                      data_type: 1
                      description: this is signal1
                      display:
                        format: '%6.3f'
                        max: 10
                        min: -10
                        unit: m/s2
                      hash: sha256:8ddad69061d8...
                      label: signal1
                      updated_at: 2017-02-11T12:34:56Z
                      uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
                    page:
                      first: true
                      last: true
                      next: /path?xxx=1&bbb=2&page=3
                      previous: /path?xxx=1&bbb=2&page=1
                      total_count: 1
              schema:
                $ref: '#/components/schemas/Signals'
          description: OK
      summary: List Signals
      tags:
      - meas_Signals
      x-accepts: application/json; charset=utf-8
    post:
      deprecated: true
      description: |-
        （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/signals` を使用してください）
         信号定義を作成します。

         * **Note**
             - 既存の信号定義と `label` が重複する場合、または `uuid` が重複する場合は、
               ステータスコード `409 Conflict` が返却されます。
      operationId: createSignal
      requestBody:
        content:
          application/json:
            examples:
              example:
                value:
                  channel: 1
                  conversion:
                    options:
                      bitsize: 8
                      endian: big
                      offset: 0
                      scale: 1
                      sign: signed
                      startbit: 0
                    type: num_fixed_point
                  data_id: "00000001"
                  data_type: 1
                  description: description of signal
                  display:
                    format: '%6.3f'
                    max: 10
                    min: -10
                    unit: m/s2
                  label: signal
                  uuid: 022a9941-d7ff-44ee-a9ff-55a623880a40
            schema:
              $ref: '#/components/schemas/CreateSignalRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    channel: 1
                    conversion:
                      options:
                        bitsize: 8
                        endian: big
                        offset: 0
                        scale: 1
                        sign: signed
                        startbit: 0
                      type: num_fixed_point
                    created_at: 2017-02-11T01:23:45Z
                    data_id: "00000001"
                    data_type: 1
                    description: this is signal1
                    display:
                      format: '%6.3f'
                      max: 10
                      min: -10
                      unit: m/s2
                    hash: sha256:8ddad69061d8...
                    label: signal1
                    updated_at: 2017-02-11T12:34:56Z
                    uuid: c1c3fd05-89c6-4da8-abdb-7d31aec2af18
              schema:
                $ref: '#/components/schemas/Signal'
          description: Created
      summary: Create Signal
      tags:
      - meas_Signals
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/signals/{signal_uuid}:
    delete:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/signals/{signal_uuid}`\
        \ を使用してください） 信号定義を削除します。"
      operationId: deleteSignal
      parameters:
      - description: 信号定義のUUID
        example: a74b933c-7c3a-4e9f-bf16-299a96d26562
        explode: false
        in: path
        name: signal_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Signal
      tags:
      - meas_Signals
      x-accepts: application/json
    get:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/signals/{signal_uuid}`\
        \ を使用してください） 信号定義を取得します。"
      operationId: getSignal
      parameters:
      - description: 信号定義のUUID
        example: a74b933c-7c3a-4e9f-bf16-299a96d26562
        explode: false
        in: path
        name: signal_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    uuid: c1c3fd05-89c6-4da8-abdb-7d31aec2af18
                    label: signal1
                    data_id: "00000001"
                    data_type: 1
                    description: this is signal1
                    channel: 1
                    conversion:
                      options:
                        bitsize: 8
                        endian: big
                        offset: 0
                        scale: 1
                        sign: signed
                        startbit: 0
                      type: num_fixed_point
                    display:
                      format: '%6.3f'
                      max: 10
                      min: -10
                      unit: m/s2
                    hash: sha256:8ddad69061d8...
                    created_at: 2017-02-11T01:23:45Z
                    updated_at: 2017-02-11T12:34:56Z
              schema:
                $ref: '#/components/schemas/Signal'
          description: OK
      summary: Get Signal
      tags:
      - meas_Signals
      x-accepts: application/json; charset=utf-8
    put:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/signals/{signal_uuid}`\
        \ を使用してください） 信号定義を更新します。"
      operationId: updateSignal
      parameters:
      - description: 信号定義のUUID
        example: a74b933c-7c3a-4e9f-bf16-299a96d26562
        explode: false
        in: path
        name: signal_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example:
                value:
                  channel: 1
                  conversion:
                    options:
                      bitsize: 8
                      endian: big
                      offset: 0
                      scale: 1
                      sign: signed
                      startbit: 0
                    type: num_fixed_point
                  data_id: "00000001"
                  data_type: 1
                  description: description of signal
                  display:
                    format: '%6.3f'
                    max: 10
                    min: -10
                    unit: m/s2
                  label: signal
            schema:
              $ref: '#/components/schemas/UpdateSignalRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    uuid: c1c3fd05-89c6-4da8-abdb-7d31aec2af18
                    label: signal1
                    data_id: "00000001"
                    data_type: 1
                    description: this is signal1
                    channel: 1
                    conversion:
                      options:
                        bitsize: 8
                        endian: big
                        offset: 0
                        scale: 1
                        sign: signed
                        startbit: 0
                      type: num_fixed_point
                    display:
                      format: '%6.3f'
                      max: 10
                      min: -10
                      unit: m/s2
                    hash: sha256:8ddad69061d8...
                    created_at: 2017-02-11T01:23:45Z
                    updated_at: 2017-02-11T12:34:56Z
              schema:
                $ref: '#/components/schemas/Signal'
          description: OK
      summary: Update Signal
      tags:
      - meas_Signals
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/trashed_measurements:
    get:
      deprecated: true
      description: （Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/trashed_measurements`
        を使用してください） ゴミ箱に入っている計測のリストを取得します。
      operationId: listTrashedMeasurements
      parameters:
      - description: 1回のリクエストで取得する件数。`0` を指定した場合は、デフォルト値の50件となります。
        example: 1
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 50
          minimum: 0
          type: integer
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  value:
                    items:
                    - uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
                      name: meas1
                      description: description of measurement
                      edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
                      duration: 100000000
                      ended: true
                      status: measuring
                      basetime: 2017-02-11T01:23:45.678901Z
                      basetime_type: ntp
                      processed_ratio: 0.9
                      protected: false
                      received_data_points: null
                      markers:
                      - uuid: 887326ce-a2a2-4db6-8c06-2f8447f0f29e
                        name: name
                        description: description
                        type: point
                        detail:
                          occurred_elapsed_time: 100
                        tag:
                          key1: value1
                          key2: value2
                        elapsed_time: 1000
                        created_at: 2017-02-11T01:23:45Z
                        created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                        updated_at: 2017-02-11T12:34:56Z
                        updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                      created_at: 2017-02-11T01:23:45Z
                      updated_at: 2017-02-11T12:34:56Z
                    total_count: 1
              schema:
                $ref: '#/components/schemas/TrashedMeasurements'
          description: OK
      summary: List Trashed Measurements
      tags:
      - meas_Trashed Measurements
      x-accepts: application/json; charset=utf-8
  /v1/trashed_measurements/{measurement_uuid}:
    delete:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/trashed_measurements/{measurement_uuid}`\
        \ を使用してください） ゴミ箱に入っている計測と、その計測に関連付けられているデータポイントを直ちに削除します。"
      operationId: deleteTrashedMeasurement
      parameters:
      - description: 計測のUUID
        example: 86fff159-5887-43c9-bf2d-cd1b522c047d
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Trashed Measurement and Delete Data Points Immediately
      tags:
      - meas_Trashed Measurements
      x-accepts: application/json
  /v1/trashed_measurements/{measurement_uuid}/restore:
    delete:
      deprecated: true
      description: "（Deprecated。このエンドポイントでなく `/projects/00000000-0000-0000-0000-000000000000/trashed_measurements/{measurement_uuid}/restore`\
        \ を使用してください） ゴミ箱に入っている計測を復元します。"
      operationId: restoreTrashedMeasurement
      parameters:
      - description: 計測のUUID
        example: 86fff159-5887-43c9-bf2d-cd1b522c047d
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Restore Measurement
      tags:
      - meas_Trashed Measurements
      x-accepts: application/json
  /v1/projects/{project_uuid}/data:
    get:
      description: データポイントのリストを取得します。 返却されるデータポイントはJSON形式です。データポイントごとに改行で区切られます。
      operationId: listProjectDataPoints
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          どの計測またはどのエッジのデータポイントを取得するかを、以下のいずれかを使って指定します：
          - 計測UUID
          - エッジUUID
          - エッジの名前

          最初に、指定されたnameに一致する計測UUIDがあるかが検索されます。なければ一致するエッジUUIDがあるかが検索され、それもなければ一致するエッジの名前があるかが検索されます。
        example: 8f40b21c-f2c4-4fa5-8fe3-325491a59597
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: |-
          取得したいデータポイントの条件を以下のフォーマットで指定します。
          `data_id` には、 `GET /data_ids` エンドポイントで取得できる `data_id` の値を使用します。

          - `<data_type>:<channel>/<data_id>`

          各セグメントにはワイルドカード(*)を使用することができます。 例:
            - CAN(data_type = `1`)のデータポイントを取得する -> `1:*/*` または `1`
            - チャンネル2のCANデータポイントを取得する -> `1:2/*` または `1:2`
            - チャンネル2のCANデータポイントのうち、データIDが `00000001` のものを取得する -> `1:2/00000001`
        example: 1:1/*
        explode: true
        in: query
        name: idq
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          取得対象範囲の始点。以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z)
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.123456Z
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の終点。以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z)
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.234567Z
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      - description: |-
          指定した時刻以降に更新された計測のみを取得します。
          以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z).
            - UNIX時刻（マイクロ秒）(**Deprecated**).
        example: 2019-10-29T03:04:05.341268Z
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: '`true` を指定した場合、取得中にエラーが発生すると処理を中断し、中断前までのデータポイントのリストを返します。'
        example: "false"
        explode: true
        in: query
        name: exit_on_error
        required: false
        schema:
          default: "false"
          type: string
        style: form
      - description: 信号定義のラベル
        example: label
        explode: true
        in: query
        name: label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          データポイントを指定した間隔（マイクロ秒）に間引きます。（ **Experimental** ）

          指定された間隔ごとに最新のデータポイントを残し、それ以外を除去します。 また、指定された間隔になるようにデータポイントの時刻を揃えます。
          ```
           --1--2----3---4--5---6-7--89-a---b-c---d--e--> period指定なし
           |     |     |     |     |     |     |     |
           |     |     |     |     |     |     |     |
           2-----3-----5-----7-----a-----c-----d-----e--> period指定あり

           |<--->| period
          ```
        example: 10000
        explode: true
        in: query
        name: period
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序。デフォルトは `asc` （昇順）
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: レスポンスの時刻表示形式。デフォルトは `us` （マイクロ秒）
        example: rfc3339
        explode: true
        in: query
        name: time_format
        required: false
        schema:
          enum:
          - ns
          - us
          - ms
          - s
          - rfc3339
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DataPointJSONLine'
            application/protobuf:
              schema:
                description: |-
                  - データは64ビットの符号なし整数です。バイトオーダーはリトルエンディアンです。
                  - データペイロード
                    - [protocol.proto](https://docs.intdash.jp/api/measurement/proto/index.html) の `DataResponseProto` 参照

                  ```

                  0    1    2    3    4    5    6    7    8
                  +----+----+----+----+----+----+----+----+
                  | Data Length( 8 byte)                  |
                  +----+----+----+----+----+----+----+----+ --+--
                  | Data Payload                          |   |
                  +                                       +   |
                  |                                       |   |
                  +                                       +   |
                  .                                       .   | Data Length
                  .                                       .   |
                  .                                       .   |
                  +                                       +   |
                  |                                       |   |
                  +----+----+----+----+----+----+----+----+ --+--
                  | Data Length(8byte)                    |
                  +----+----+----+----+----+----+----+----+ --+--
                  | Data Payload                          |   |
                  +                                       +   |
                  |                                       |   |
                  +                                       +   |
                  .                                       .   | Data Length
                  .                                       .   |
                  ```
                format: binary
                type: string
          description: OK
          headers:
            Transfer-Encoding:
              explode: false
              schema:
                enum:
                - Chunked
                type: string
              style: simple
      summary: List Project Data Points
      tags:
      - meas_DataPoints
      x-accepts: "application/json; charset=utf-8,application/protobuf"
  /v1/projects/{project_uuid}/data_ids:
    get:
      description: "データポイントのデータID（ `data_type`, `data_id` ）のリストを取得します。"
      operationId: listProjectDataPointDataIDs
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          どの計測またはどのエッジのデータポイントを取得するかを、以下のいずれかを使って指定します：
          - 計測UUID
          - エッジUUID
          - エッジの名前

          最初に、指定されたnameに一致する計測UUIDがあるかが検索されます。なければ一致するエッジUUIDがあるかが検索され、それもなければ一致するエッジの名前があるかが検索されます。
        example: 8f40b21c-f2c4-4fa5-8fe3-325491a59597
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の始点。以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z)
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.123456Z
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の終点。以下のいずれかの形式で指定します。
            - rfc3339(ex 2019-10-29T03:04:05.341268Z)
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.234567Z
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/DataPointDataIDs'
          description: OK
      summary: List Project Data Point Data IDs
      tags:
      - meas_DataPointIDs
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/getids:
    get:
      description: エッジを指定し、そのエッジから送信されているデータに含まれるデータ識別子（ `data_type` 、 `channel` 、
        `data_id` の組み合わせ）のリストを取得します。
      operationId: listProjectDataIDs
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 取得対象範囲の始点（マイクロ秒単位のUNIX時刻）
        example: 1505797626000000
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 取得対象範囲の終点（マイクロ秒単位のUNIX時刻）
        example: 1505798226123456
        explode: true
        in: query
        name: end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: エッジのUUID
        example: 24dbdc29-165f-4919-b2ce-7a335282bde2
        explode: true
        in: query
        name: edge_uuid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/DataIDsGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/DataIDs'
          description: OK
      summary: List Project Edge's Data IDs
      tags:
      - meas_DataPoints
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/getids:
    get:
      description: 計測を指定し、その計測に含まれるデータ識別子（ `data_type` 、 `channel` 、 `data_id` の組み合わせ）のリストを取得します。
      operationId: listProjectDataIDsWithMeasurementUUID
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/DataIDsGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/DataIDs'
          description: OK
      summary: List Project Data IDs
      tags:
      - meas_DataPoints
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/data:
    post:
      description: データポイントを登録します。
      operationId: createProjectDataPoints
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/protobuf:
            schema:
              format: binary
              type: string
        description: |-
          このエンドポイント使用時は、 `Content-Type` を以下にしてください。
            * `application/protobuf`
                * [protocol.proto](https://docs.intdash.jp/api/measurement/proto/index.html) の `StoreProto` を参照してください。
                  * `DataPointProto` の `data_payload`は iSCP v1のデータフォーマットに従います。
                  * iSCPのデータフォーマットは [詳説 iSCP 1.0](https://docs.intdash.jp/manual/iscp1-essentials/latest/ja/iscp1-essentials-ja.pdf#page=23)を参照してください。
      responses:
        "200":
          content:
            '*/*':
              schema:
                description: OK
                format: binary
                type: string
          description: OK
      summary: Store Project Data Points
      tags:
      - meas_DataPoints
      x-content-type: application/protobuf
      x-accepts: '*/*'
  /v1/projects/{project_uuid}/measurements:
    get:
      description: 計測のリストを取得します。
      operationId: listProjectMeasurements
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 5c3ac8b5-3acd-43ea-86cb-4835664b0483
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 名前が指定した文字列から始まる計測を取得します。 文字列をダブルクォーテーションで囲むと、完全一致のものだけが取得されます。
        example: measurement1
        explode: true
        in: query
        name: name
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 計測に関連付けられたエッジのUUID
        example: e0022b03-023f-4f24-90f1-560be10c423b
        explode: true
        in: query
        name: edge_uuid
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の始点。以下のいずれかの形式で指定します。
            - RFC3339(例 `2019-10-29T03:04:05.341268Z` )
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.123456Z
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: string
        style: form
      - description: |-
          取得対象範囲の終点。以下のいずれかの形式で指定します。
            - RFC3339(例 `2019-10-29T03:04:05.341268Z` )
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.234567Z
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: string
        style: form
      - description: |-
          `true` にすると、計測の一部が取得対象範囲に入っていればその計測は取得対象となります。 `false` にすると、計測の基準時刻（計測開始）が取得対象範囲に入っていればその計測は取得対象となります。
          ```
             | measurement1 |
             +--------------+
                                             | measurement2 |
                                             +--------------+
                                 | measurement3 |
                                 +--------------+
                                                                  time
          -----------+----------------------------+------------>
                     |                            |
                    start                        end
          ```

          - この例では、もし `partial_match` を `true` にすると、 `measurement1` 、 `measurement2` 、 `measurement3` が取得できます。
          - もし `partial_match` を `false` にすると、 `measurement2` と `measurement3` が取得できます。
        example: true
        explode: true
        in: query
        name: partial_match
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: 計測の基準時刻のタイプ
        example: ntp
        explode: true
        in: query
        name: basetime_type
        required: false
        schema:
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          type: string
        style: form
      - description: |-
          計測が終了している（ended）かどうかを指定して計測を取得します。

          エッジにおいてデータの取得が終了している場合、その計測は「終了(ended)」となります。
          計測は終了(ended)していても、まだサーバーに送信されていないデータがエッジに残っている可能性があります。
          * `true`: 終了した計測だけを取得します。
          * `false`: 終了していない計測だけを取得します。
        example: false
        explode: true
        in: query
        name: ended
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          指定した時刻以降に更新された計測のみを取得します。

          以下のいずれかの形式で指定します。

            - RFC3339(例 `2019-10-29T03:04:05.341268Z` )
            - UNIX時刻（マイクロ秒）(**Deprecated**)
        example: 2019-10-29T03:04:05.341268Z
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: 計測時間の最小値（マイクロ秒）。これより短い計測は取得しません。
        example: 100
        explode: true
        in: query
        name: duration_start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 計測時間の最大値（マイクロ秒）。これより長い計測は取得しません。
        example: 100000
        explode: true
        in: query
        name: duration_end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: 計測のステータス
        example: measuring
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            enum:
            - measuring
            - resending
            - finished
            type: string
          type: array
        style: form
      - description: 1回のリクエストで取得する件数。ただし、0を指定するとデフォルトの値が使用されます。
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int32
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: base_time
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: base_time
          enum:
          - name
          - description
          - ended
          - duration
          - base_time
          - processed_ratio
          - created_at
          - updated_at
          type: string
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasList'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurements'
          description: OK
      summary: List Project Measurements
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
    post:
      description: |-
        計測を作成します。

        - **Note**
          - 計測の保護／非保護を切り替える権限を持たないエッジも、
            計測作成時は保護された計測を作成することが可能です。
      operationId: createProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                $ref: '#/components/examples/MeasCreate'
                value: null
            schema:
              $ref: '#/components/schemas/MeasCreate'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/Meas'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: Created
      summary: Create Project Measurement
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}:
    delete:
      description: |-
        計測を削除します。
        - **Note**
          - 保護された計測は削除できません。
      operationId: deleteProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Trash Project Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json
    get:
      description: 計測を取得します。
      operationId: getProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasFinished'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: OK
      summary: Get Project Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
    post:
      description: 指定したUUIDの計測を作成します。
      operationId: createProjectMeasurementWithUUID
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                $ref: '#/components/examples/MeasCreate'
                value: null
            schema:
              $ref: '#/components/schemas/MeasCreate'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/Meas'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: Created
      summary: Create Project Measurement with UUID
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
    put:
      description: 計測に関する情報を更新します。
      operationId: updateProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasReplace'
      responses:
        "204":
          description: No Content
      summary: Update Project Measurement
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/complete:
    put:
      description: 計測を回収完了（completed）にします。 completedは、エッジでのデータ取得が終了し（ended）、 かつ、すべてのデータがサーバーに送信されたことを意味します。
      operationId: completeProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/Meas'
                  value: null
              schema:
                $ref: '#/components/schemas/Measurement'
          description: OK
      summary: Complete Project Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/end:
    put:
      description: 計測終了（ended）とします。endedは、エッジにおけるデータの取得が終了していることを表します。 （サーバーに回収されていないデータがまだエッジに残っている可能性はあります。サーバーへのデータの回収が完了した状態は、completedと呼びます。）
      operationId: endProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SequenceSummary'
          description: OK
      summary: End Project Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/protected:
    delete:
      description: 計測の保護を解除します。
      operationId: unprotectProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Unprotect Project Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json
    put:
      description: "計測を保護します。保護された計測は削除できません。 [See](#section/Protected-resources)\
        \ も参照してください。"
      operationId: protectProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Protect Project Measurement
      tags:
      - meas_Measurements
      x-accepts: application/json
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/basetimes:
    get:
      description: 計測の基準時刻のリストを取得します。
      operationId: listProjectMeasurementBaseTimes
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasBaseTimesGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasBaseTimes'
          description: OK
      summary: List Project Measurement Base Times
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/basetimes/{type}:
    delete:
      description: |-
        基準時刻を削除します。
        指定された基準時刻が使用中の場合（その計測の `basetime_type` として設定されている場合）は、 その基準時刻は削除できません（ステータスコード `409` が返却されます）。
        このような場合は、他の基準時刻をその計測の `basetime_type` にしてから、削除したい基準時刻を削除してください。
      operationId: deleteProjectMeasurementBaseTime
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 基準時刻のタイプ
        example: ntp
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project Measurement Base Time
      tags:
      - meas_Measurements
      x-accepts: application/json
    get:
      description: 基準時刻タイプを指定して計測の基準時刻を取得します。
      operationId: getProjectMeasurementBaseTime
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 基準時刻のタイプ
        example: ntp
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasBaseTimeGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasBaseTime'
          description: OK
      summary: Get Project Measurement Base Time
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
    put:
      description: 基準時刻を更新します。 この計測において、使用する基準時刻が設定されていない（ `basetime_type` が `undefined`
        ）の場合は、 新しい基準時刻を `basetime_type` に設定します。
      operationId: updateProjectMeasurementBaseTime
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 基準時刻のタイプ
        example: ntp
        explode: false
        in: path
        name: type
        required: true
        schema:
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example1:
                $ref: '#/components/examples/MeasBaseTimePutRequest'
                value: null
            schema:
              $ref: '#/components/schemas/MeasBaseTimePut'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasBaseTimePutResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasBaseTime'
          description: OK
      summary: Replace Project Measurement Base Time
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/sections:
    get:
      description: 計測に含まれるセクションのリストを取得します。
      operationId: getProjectMeasurementSections
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測セクションの処理ステータス。 `processed` （処理済みの計測セクションを取得）、 `unprocessed`
          （未処理の計測セクションを取得）、 `both` （両方を取得）のいずれかを選択します。
        example: processed
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: both
          enum:
          - processed
          - unprocessed
          - both
          type: string
        style: form
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementSectionsGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementSectionsGetResponse'
          description: OK
      summary: List Project Measurement Sections
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/sequences:
    get:
      description: 計測シーケンスのリストを取得します。
      operationId: listProjectMeasurementSequences
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MeasurementSequenceGroups'
          description: OK
      summary: List Project Measurement Sequences
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/sequences/{sequences_uuid}:
    get:
      description: 計測シーケンスを取得します。
      operationId: getProjectMeasurementSequence
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測シーケンスのUUID
        example: 0b849907-9f04-4c87-b176-b73fb527e935
        explode: false
        in: path
        name: sequences_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MeasurementSequenceGroup'
          description: OK
      summary: Get Project Measurement Sequence
      tags:
      - meas_Measurements
      x-accepts: application/json; charset=utf-8
    patch:
      description: 計測シーケンスを更新します。
      operationId: updateProjectMeasurementSequence
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測シーケンスのUUID
        example: 0b849907-9f04-4c87-b176-b73fb527e935
        explode: false
        in: path
        name: sequences_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementSequenceGroupReplace'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MeasurementSequenceGroup'
          description: OK
      summary: Update Project Measurement Sequence
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
    put:
      description: 計測シーケンスを置換します。
      operationId: replaceProjectMeasurementSequence
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測シーケンスのUUID
        example: 0b849907-9f04-4c87-b176-b73fb527e935
        explode: false
        in: path
        name: sequences_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementSequenceGroupReplace'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MeasurementSequenceGroup'
          description: OK
      summary: Replace Project Measurement Sequence
      tags:
      - meas_Measurements
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/sequences/chunks:
    post:
      description: 計測シーケンスにチャンクを作成します。
      operationId: createProjectMeasurementSequenceChunks
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/vnd.iscp.v2.protobuf:
            schema:
              description: |-
                [protocol.proto](https://docs.intdash.jp/api/measurement/proto/index.html)の`StoreDataChunks`を参照してくだいさい。

                `StoreDataPoint`のpayloadは iSCP v2のデータフォーマットに従います。この資料は現在準備中です。
              format: binary
              type: string
          application/json:
            schema:
              description: |-
                [protocol.proto](https://docs.intdash.jp/api/measurement/proto/index.html)の`StoreDataChunks`をJSONでシリアライズしたものです。

                `StoreDataPoint`のpayloadは iSCP v2のデータフォーマットに従います。この資料は現在準備中です。
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CreateMeasurementChunksResult'
          description: OK
      summary: Create Project Measurement Sequence Chunk
      tags:
      - meas_Measurements
      x-content-type: application/vnd.iscp.v2.protobuf
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/jobs:
    get:
      description: ジョブ（CSVファイルを計測に変換するジョブなど）のリストを取得します。
      operationId: listProjectMeasurementJobs
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
        style: form
      - description: ジョブのステータス
        example: succeeded
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ready
          - processing
          - succeeded
          - failed
          - cancelled
          type: string
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementJobsGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementJobs'
          description: OK
      summary: List Project Measurement Jobs
      tags:
      - meas_Measurement Jobs
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/jobs/{job_uuid}:
    delete:
      description: ジョブを削除します。
      operationId: deleteProjectMeasurementJob
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: ジョブのUUID
        example: ddba7729-3a53-42bb-a4cf-6d19a3e66deb
        explode: false
        in: path
        name: job_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project Measurement Job
      tags:
      - meas_Measurement Jobs
      x-accepts: application/json
    get:
      description: ジョブを取得します。
      operationId: getProjectMeasurementJob
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: ジョブのUUID
        example: ddba7729-3a53-42bb-a4cf-6d19a3e66deb
        explode: false
        in: path
        name: job_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementJobGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementJob'
          description: OK
      summary: Get Project Measurement Job
      tags:
      - meas_Measurement Jobs
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/jobs/{job_uuid}/cancel:
    put:
      description: ジョブをキャンセルします。
      operationId: cancelProjectMeasurementJob
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: ジョブのUUID
        example: ddba7729-3a53-42bb-a4cf-6d19a3e66deb
        explode: false
        in: path
        name: job_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Cancel Project Measurement Job
      tags:
      - meas_Measurement Jobs
      x-accepts: application/json
  /v1/projects/{project_uuid}/measurements/markers:
    get:
      description: 計測マーカーのリストを取得します。
      operationId: listProjectMeasurementMarkers
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: c14f84c1-b7a5-459b-bd1e-35982e4a4f38
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 計測マーカーの名前
        example: measurement marker1
        explode: true
        in: query
        name: name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Get MeasMarkers which start Meas.BaseTime + elapsed_time &lt;=\
          \ this[usec]."
        example: 1000
        explode: true
        in: query
        name: start_unix_micro
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Get MeasMarkers which start this[usec] &lt; Meas.BaseTime +\
          \ elapsed_time."
        example: 1000
        explode: true
        in: query
        name: end_unix_micro
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: |-
          タグのキーと値を使って条件を指定し、条件に一致する計測マーカーを取得します。
          キーのみを指定した場合は、指定されたキーを持つ計測マーカーを取得します。 キーと値を指定した場合は、指定されたキーを持ち、その値として指定された値を含む計測マーカーを取得します。
          `tag.<key>=<value>` 条件は複数個指定することができ、OR条件で使用されます。 ただし `!tag.<key>` と組み合わせた場合、  `!tag.<key>` が優先されます。

          例:

              | measurement marker | tag (key: value) |
              | ------------------ | ---------------- |
              | 1                  | a: value1        |
              |                    | c: value2        |
              |                    | e: 1             |

              | 2                  | a: b             |
              |                    | c: d             |

              | 3                  | a: b             |

            -  `?tag.e=` の場合、計測マーカー1番が取得されます。
            -  `?!tag.c=` の場合、計測マーカー3番が取得されます。
            -  `?tag.a=&!tag.e=` の場合、計測マーカー2、3番が取得されます。
            -  `?tag.a=val&tag.c=d` の場合、計測マーカー1、2番が取得されます。
        example: include_tag_value
        explode: true
        in: query
        name: tag.<key>
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          タグのキーを使って条件を指定し、条件に一致する計測キャプチャを除外します。
          タグの値は無視されます。
          `!tag.<key>` を複数個指定した場合、AND条件となります。 また、 `tag.<key>=<value>` と組み合わせて使用した場合、 `tag.<key>=<value>`  よりも `!tag.<key>` が優先されます。
          例: 上の `tag.<key>` の説明を参照してください。
        example: exclude_tag_value
        explode: true
        in: query
        name: '!tag.<key>'
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: base_time
          enum:
          - name
          - base_time
          - created_at
          - updated_at
          type: string
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementMarkersGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarkers'
          description: OK
      summary: List Project Measurement Markers
      tags:
      - meas_Measurement Markers
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/markers/{measurement_marker_uuid}:
    delete:
      description: 計測マーカーを削除します。
      operationId: deleteProjectMeasurementMarker
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project Measurement Marker
      tags:
      - meas_Measurement Markers
      x-accepts: application/json
    get:
      description: 計測マーカーを取得します。
      operationId: getProjectMeasurementMarker
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: OK
      summary: Get Project Measurement Marker
      tags:
      - meas_Measurement Markers
      x-accepts: application/json; charset=utf-8
    put:
      description: 計測マーカーを更新します。
      operationId: updateProjectMeasurementMarker
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              range:
                $ref: '#/components/examples/MeasurementMarkerPutRequestRange'
                value: null
              point:
                $ref: '#/components/examples/MeasurementMarkerPutRequestPoint'
                value: null
            schema:
              $ref: '#/components/schemas/MeasurementMarkerPutRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: OK
      summary: Update Project Measurement Marker
      tags:
      - meas_Measurement Markers
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/upload:
    get:
      deprecated: true
      description: （ **Deprecated** このエンドポイントではなく、`GET /measurements/jobs` を使用してください。）
        計測のアップロードのリストを取得します。
      operationId: listProjectMeasurementStatuses
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementUploadStatusesGetResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementUploadStatusesGetResponse'
          description: OK
      summary: List Project Uploading Statuses of Measurements
      tags:
      - meas_Uploading Measurements
      x-accepts: application/json; charset=utf-8
    post:
      description: |-
        CSVまたはMP4（**MP4はexperimental**）ファイルをアップロードし、計測を作成します。 計測には、指定されたエッジUUIDが関連付けられます。

        `base_time` （基準時刻）は、RFC3339による表現か、UNIX時刻（マイクロ秒）を指定してください。
        基準時刻が指定されていない場合は、CSVファイルのデータ行の1行目の時刻が基準時刻として使用されます。
        CSVファイルのデータは、時刻順にソートされている必要があります。
        `meas_end` パラメーターの設定は任意です。指定しない場合、 `true` となります。

        CSVファイルの例:
        ```
        time,       col1,   col2, col3,      col4,   col5, col6,      col7,   col8, col9,      col10
        1539263579, val11,  12,   13.12345,  val14,  15,   16.12345,  val17,  18, 19.12345,  val110
        1539263580, val21,  22,   23.12345,  val24,  25,   26.12345,  val27,  28, 29.12345,  val210
        1539263581, val31,  32,   33.12345,  val34,  35,   36.12345,  val37,  38, 39.12345,  val310
        1539263582, val41,  42,   43.12345,  val44,  45,   46.12345,  val47,  48, 49.12345,  val410
        ```
        空白行がある場合、行番号のカウントは加算されますが、その行は処理されません。 例えば、以下のような場合の空白行は無視されます。
        ```
        time,       col1,   col2, col3,      col4,   col5, col6,      col7,   col8, col9,      col10
        1539263579, val11,  12,   13.12345,  val14,  15,   16.12345,  val17,  18, 19.12345,  val110

        1539263581, val31,  32,   33.12345,  val34,  35,   36.12345,  val37,  38, 39.12345,  val310
        1539263582, val41,  42,   43.12345,  val44,  45,   46.12345,  val47,  48, 49.12345,  val410
        ```

        [Go parser library](https://golang.org/pkg/encoding/csv/) も参照してください。

        時刻の列には、RFC3339による表現か、UNIX時刻（秒）を使用することができます。
        ## エスケープ
        値の内部で `,` を使用したい場合は、その値全体を `"` で囲んでください。
        また、値の内部で `"` を使用したい場合は、値全体を `"` で囲み、さらに、 `"` を `""` のように表記してください。
        値を `"` で囲まないと、CSVファイルのパースの際にエラーが発生します。

        エスケープの例:
        ```
        time,col1
        1539263579,"ab,cde"                  .....OK (parsed as 'ab,cde')
        1539263579,"ab""cde"                 .....OK (parsed as 'ab"cde')
        1539263579,     abcde                .....OK (parsed as '     abcde')
        1539263579,"     abcde"              .....OK (parsed as '     abcde')
        1539263579,ab"cde                    .....NG
        1539263579, "abcde"                  .....NG
        1539263579,ab,cde                    .....NG(wrong number of fields)
        ```
      operationId: uploadProjectMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasurementUploadPostRequest'
      responses:
        "202":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementUploadPostResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementUploadPostResponse'
          description: OK
      summary: Create Project Measurement from CSV File
      tags:
      - meas_Uploading Measurements
      x-content-type: multipart/form-data
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/upload:
    post:
      description: CSVファイルをアップロードし、計測にデータを追加します。
      operationId: uploadProjectMeasurementIntoMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MeasurementUploadPostRequestAppend'
        description: '`meas_end` パラメーターの設定は任意です。指定しない場合、 `true` となります。'
      responses:
        "202":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  $ref: '#/components/examples/MeasurementUploadPostResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementUploadPostResponse'
          description: OK
      summary: Store Project Data Points by CSV File
      tags:
      - meas_Uploading Measurements
      x-content-type: multipart/form-data
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/markers:
    delete:
      description: 計測マーカーを削除します。
      operationId: deleteProjectMeasurementMarkers
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project Measurement Markers by Measurement UUID
      tags:
      - meas_Measurement Markers
      x-accepts: application/json
    get:
      deprecated: true
      description: "(**Deprecated** このエンドポイントではなく、 `GET /measurements/{measurement_uuid}`\
        \ を使用してください。) 計測UUIDを指定して、その計測に付与されたマーカーの一覧を取得します。"
      operationId: getProjectMeasurementMarkersWithMeasurementUUID
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  value:
                    items:
                    - uuid: 887326ce-a2a2-4db6-8c06-2f8447f0f29e
                      name: name
                      description: description
                      type: range
                      detail:
                        start_elapsed_time: 100
                        end_elapsed_time: 200
                      tag:
                        key1: value1
                        key2: value2
                      elapsed_time: 1000
                      created_at: 2017-02-11T01:23:45Z
                      created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                      updated_at: 2017-02-11T12:34:56Z
                      updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                    - uuid: 887326ce-a2a2-4db6-8c06-2f8447f0f29e
                      name: name
                      description: description
                      type: range
                      detail:
                        occurred_elapsed_time: 100
                      tag:
                        key1: value1
                        key2: value2
                      elapsed_time: 1000
                      created_at: 2017-02-11T01:23:45Z
                      created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                      updated_at: 2017-02-11T12:34:56Z
                      updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
              schema:
                $ref: '#/components/schemas/MeasurementMarkersWithoutPage'
          description: OK
      summary: List Project Measurement Markers by Measurement UUID
      tags:
      - meas_Measurement Markers
      x-accepts: application/json; charset=utf-8
    post:
      description: 計測マーカーを作成します。
      operationId: createProjectMeasurementMarker
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              point:
                $ref: '#/components/examples/MeasurementMarkerPostRequestPoint'
                value: null
              range:
                $ref: '#/components/examples/MeasurementMarkerPostRequestRange'
                value: null
            schema:
              $ref: '#/components/schemas/MeasurementMarkerPostRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: Created
      summary: Create Project Measurement Marker by Measurement UUID
      tags:
      - meas_Measurement Markers
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/measurements/{measurement_uuid}/markers/{measurement_marker_uuid}:
    delete:
      description: 計測マーカーを削除します。
      operationId: deleteProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUID
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project Measurement Marker using Measurement UUID
      tags:
      - meas_Measurement Markers
      x-accepts: application/json
    get:
      deprecated: true
      description: "**Deprecated** このエンドポイントではなく、 `GET /measurements/{measurement_uuid}`\
        \ を使用してください。"
      operationId: getProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUID
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: OK
      summary: Get Project Measurement Marker using Measurement UUID
      tags:
      - meas_Measurement Markers
      x-accepts: application/json; charset=utf-8
    put:
      description: 計測マーカーの情報を更新します。
      operationId: updateProjectMeasurementMarkerWithMeasurementUUIDAndMarkerUUID
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測マーカーのUUID
        example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        explode: false
        in: path
        name: measurement_marker_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              range:
                $ref: '#/components/examples/MeasurementMarkerPutRequestRange'
                value: null
              point:
                $ref: '#/components/examples/MeasurementMarkerPutRequestPoint'
                value: null
            schema:
              $ref: '#/components/schemas/MeasurementMarkerPutRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                range:
                  $ref: '#/components/examples/MeasurementMarkerGetResponseRange'
                  value: null
                point:
                  $ref: '#/components/examples/MeasurementMarkerGetResponsePoint'
                  value: null
              schema:
                $ref: '#/components/schemas/MeasurementMarker'
          description: OK
      summary: Replace Project Measurement Marker using Measurement UUID
      tags:
      - meas_Measurement Markers
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/signals:
    get:
      description: 信号定義のリストを取得します。
      operationId: listProjectSignals
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: ラベルが指定した文字列から始まる信号定義を取得します。 文字列をダブルクォーテーションで囲むと、完全一致のものだけを取得します。
        example: label1
        explode: true
        in: query
        name: label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 並べ替えに使用するキー
        example: label
        explode: true
        in: query
        name: sort
        required: false
        schema:
          enum:
          - label
          - created_at
          - updated_at
          type: string
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - description: 1回のリクエストで取得する件数
        example: "100"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: 取得するページの番号
        example: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    items:
                    - channel: 1
                      conversion:
                        options:
                          bitsize: 8
                          endian: big
                          offset: 0
                          scale: 1
                          sign: signed
                          startbit: 0
                        type: num_fixed_point
                      created_at: 2017-02-11T01:23:45Z
                      data_id: "00000001"
                      data_type: 1
                      description: this is signal1
                      display:
                        format: '%6.3f'
                        max: 10
                        min: -10
                        unit: m/s2
                      hash: sha256:8ddad69061d8...
                      label: signal1
                      updated_at: 2017-02-11T12:34:56Z
                      uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
                    page:
                      first: true
                      last: true
                      next: /path?xxx=1&bbb=2&page=3
                      previous: /path?xxx=1&bbb=2&page=1
                      total_count: 1
              schema:
                $ref: '#/components/schemas/Signals'
          description: OK
      summary: List Project Signals
      tags:
      - meas_Signals
      x-accepts: application/json; charset=utf-8
    post:
      description: |-
        信号定義を作成します。

        * **Note**
            - 既存の信号定義と `label` が重複する場合、または `uuid` が重複する場合は、
              ステータスコード `409 Conflict` が返却されます。
      operationId: createProjectSignal
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example:
                value:
                  channel: 1
                  conversion:
                    options:
                      bitsize: 8
                      endian: big
                      offset: 0
                      scale: 1
                      sign: signed
                      startbit: 0
                    type: num_fixed_point
                  data_id: "00000001"
                  data_type: 1
                  description: description of signal
                  display:
                    format: '%6.3f'
                    max: 10
                    min: -10
                    unit: m/s2
                  label: signal
                  uuid: 022a9941-d7ff-44ee-a9ff-55a623880a40
            schema:
              $ref: '#/components/schemas/CreateSignalRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    channel: 1
                    conversion:
                      options:
                        bitsize: 8
                        endian: big
                        offset: 0
                        scale: 1
                        sign: signed
                        startbit: 0
                      type: num_fixed_point
                    created_at: 2017-02-11T01:23:45Z
                    data_id: "00000001"
                    data_type: 1
                    description: this is signal1
                    display:
                      format: '%6.3f'
                      max: 10
                      min: -10
                      unit: m/s2
                    hash: sha256:8ddad69061d8...
                    label: signal1
                    updated_at: 2017-02-11T12:34:56Z
                    uuid: c1c3fd05-89c6-4da8-abdb-7d31aec2af18
              schema:
                $ref: '#/components/schemas/Signal'
          description: Created
      summary: Create Project Signal
      tags:
      - meas_Signals
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/signals/{signal_uuid}:
    delete:
      description: 信号定義を削除します。
      operationId: deleteProjectSignal
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 信号定義のUUID
        example: a74b933c-7c3a-4e9f-bf16-299a96d26562
        explode: false
        in: path
        name: signal_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project Signal
      tags:
      - meas_Signals
      x-accepts: application/json
    get:
      description: 信号定義を取得します。
      operationId: getProjectSignal
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 信号定義のUUID
        example: a74b933c-7c3a-4e9f-bf16-299a96d26562
        explode: false
        in: path
        name: signal_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    uuid: c1c3fd05-89c6-4da8-abdb-7d31aec2af18
                    label: signal1
                    data_id: "00000001"
                    data_type: 1
                    description: this is signal1
                    channel: 1
                    conversion:
                      options:
                        bitsize: 8
                        endian: big
                        offset: 0
                        scale: 1
                        sign: signed
                        startbit: 0
                      type: num_fixed_point
                    display:
                      format: '%6.3f'
                      max: 10
                      min: -10
                      unit: m/s2
                    hash: sha256:8ddad69061d8...
                    created_at: 2017-02-11T01:23:45Z
                    updated_at: 2017-02-11T12:34:56Z
              schema:
                $ref: '#/components/schemas/Signal'
          description: OK
      summary: Get Project Signal
      tags:
      - meas_Signals
      x-accepts: application/json; charset=utf-8
    put:
      description: 信号定義を更新します。
      operationId: updateProjectSignal
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 信号定義のUUID
        example: a74b933c-7c3a-4e9f-bf16-299a96d26562
        explode: false
        in: path
        name: signal_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              example:
                value:
                  channel: 1
                  conversion:
                    options:
                      bitsize: 8
                      endian: big
                      offset: 0
                      scale: 1
                      sign: signed
                      startbit: 0
                    type: num_fixed_point
                  data_id: "00000001"
                  data_type: 1
                  description: description of signal
                  display:
                    format: '%6.3f'
                    max: 10
                    min: -10
                    unit: m/s2
                  label: signal
            schema:
              $ref: '#/components/schemas/UpdateSignalRequest'
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    uuid: c1c3fd05-89c6-4da8-abdb-7d31aec2af18
                    label: signal1
                    data_id: "00000001"
                    data_type: 1
                    description: this is signal1
                    channel: 1
                    conversion:
                      options:
                        bitsize: 8
                        endian: big
                        offset: 0
                        scale: 1
                        sign: signed
                        startbit: 0
                      type: num_fixed_point
                    display:
                      format: '%6.3f'
                      max: 10
                      min: -10
                      unit: m/s2
                    hash: sha256:8ddad69061d8...
                    created_at: 2017-02-11T01:23:45Z
                    updated_at: 2017-02-11T12:34:56Z
              schema:
                $ref: '#/components/schemas/Signal'
          description: OK
      summary: Update Project Signal
      tags:
      - meas_Signals
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/trashed_measurements:
    get:
      description: ゴミ箱に入っている計測のリストを取得します。
      operationId: listProjectTrashedMeasurements
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 1回のリクエストで取得する件数。`0` を指定した場合は、デフォルト値の50件となります。
        example: 1
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 50
          minimum: 0
          type: integer
        style: form
      - description: 取得するページの番号
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                example1:
                  value:
                    items:
                    - uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
                      name: meas1
                      description: description of measurement
                      edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
                      duration: 100000000
                      ended: true
                      status: measuring
                      basetime: 2017-02-11T01:23:45.678901Z
                      basetime_type: ntp
                      processed_ratio: 0.9
                      protected: false
                      received_data_points: null
                      markers:
                      - uuid: 887326ce-a2a2-4db6-8c06-2f8447f0f29e
                        name: name
                        description: description
                        type: point
                        detail:
                          occurred_elapsed_time: 100
                        tag:
                          key1: value1
                          key2: value2
                        elapsed_time: 1000
                        created_at: 2017-02-11T01:23:45Z
                        created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                        updated_at: 2017-02-11T12:34:56Z
                        updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
                      created_at: 2017-02-11T01:23:45Z
                      updated_at: 2017-02-11T12:34:56Z
                    total_count: 1
              schema:
                $ref: '#/components/schemas/TrashedMeasurements'
          description: OK
      summary: List Project Trashed Measurements
      tags:
      - meas_Trashed Measurements
      x-accepts: application/json; charset=utf-8
  /v1/projects/{project_uuid}/trashed_measurements/{measurement_uuid}:
    delete:
      description: ゴミ箱に入っている計測と、その計測に関連付けられているデータポイントを直ちに削除します。
      operationId: deleteProjectTrashedMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 86fff159-5887-43c9-bf2d-cd1b522c047d
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project Trashed Measurement and Delete Data Points Immediately
      tags:
      - meas_Trashed Measurements
      x-accepts: application/json
  /v1/projects/{project_uuid}/trashed_measurements/{measurement_uuid}/restore:
    delete:
      description: ゴミ箱に入っている計測を復元します。
      operationId: restoreProjectTrashedMeasurement
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: 86fff159-5887-43c9-bf2d-cd1b522c047d
        explode: false
        in: path
        name: measurement_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Restore Project Measurement
      tags:
      - meas_Trashed Measurements
      x-accepts: application/json
  /media/hlses:
    get:
      deprecated: true
      description: "**Deprecated** このエンドポイントではなく [`GET /media/videos`](#operation/getVideos)\
        \ を使用してください"
      operationId: getHLSes
      parameters:
      - description: 取得対象範囲の始点（マイクロ秒単位のUNIX時刻）
        example: 1234567890
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: 取得対象範囲の終点（マイクロ秒単位のUNIX時刻）
        example: 1234567890
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      - description: エッジのUUID
        example: 3699e2b9-5d87-4dbd-9b85-098e7dfaee76
        explode: true
        in: query
        name: edge_uuid
        required: false
        schema:
          type: string
        style: form
      - description: チャンネル
        example: 1
        explode: true
        in: query
        name: channel
        required: false
        schema:
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/HLSList'
          description: OK
      summary: List HLSes
      tags:
      - media_HLS
      x-accepts: application/json; charset=utf-8
  /media/jobs:
    get:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        HLSへの変換ジョブのリストを取得します。
      operationId: getJobs
      parameters:
      - description: 取得したいジョブのUUID
        example: ade4eea8-edc6-3ca5-c557-12a616c2028a
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 計測のUUID
        example: a5170afc-9cc2-5327-e0e1-32746b5a7977
        explode: true
        in: query
        name: meas_uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          - update
            - 計測内の動画データのうち、新しくサーバーが受信した部分（HLSにまだ変換されていない部分）を
              HLSに変換するジョブ。通常は計測実行中に行います。
          - finalize
            - 計測全体をサーバーに回収した後に、動画データ全体をHLSに変換するジョブ
          - delete
            - 変換によって作成されたHLSデータを削除するジョブ。
              このジョブを実行すると、HLSプレイリスト、セグメントファイル、
              データベース内のHLSに関する情報が削除され、この動画のHLSによる再生はできなくなります。
        example: update
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/JobType'
          type: array
        style: form
      - description: ジョブのステータス
        example: succeeded
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/JobStatus'
          type: array
        style: form
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: 取得するページ番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/JobList'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: List Jobs
      tags:
      - media_Jobs
      x-accepts: application/json; charset=utf-8
    post:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        HLSへの変換ジョブを作成します。
      operationId: createJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Job'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                Conflict:
                  $ref: '#/components/examples/ErrorProblemConflictMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Conflict
      summary: Create Job
      tags:
      - media_Jobs
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /media/measurements/{meas_uuid}/channels/{channel}/hlses/playlist.m3u8:
    get:
      deprecated: true
      description: '**Depricated** このエンドポイントの代わりに、Videoオブジェクトの `hls`にあるPATHにしたがってPlaylistを取得してください。'
      operationId: getPlaylist
      parameters:
      - description: 計測のUUID
        example: f967c530-f562-410a-991b-031c43142778
        explode: false
        in: path
        name: meas_uuid
        required: true
        schema:
          example: f967c530-f562-410a-991b-031c43142778
          type: string
        style: simple
      - description: チャンネル
        example: 1
        explode: false
        in: path
        name: channel
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      - description: '`true` にすると、取得するm3u8形式のプレイリストに強制的にEXT-X-ENDLISTを追加します。'
        example: true
        explode: true
        in: query
        name: force_end
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/vnd.apple.mpegurl:
              schema:
                type: string
          description: OK
      summary: Get HLS Playlist
      tags:
      - media_HLS
      x-accepts: application/vnd.apple.mpegurl
  /media/measurements/{meas_uuid}/channels/{channel}/mp4s/measurement.mp4:
    get:
      deprecated: true
      description: "**Deprecated** このエンドポイントの代わりに [`POST /media/videos/{video_uuid}/mp4s`](#operation/createMP4)\
        \ を使用してください。 mp4リソース作成後、 `MP4`オブジェクトの `file_path`にあるPATHに従って動画を取得してください"
      operationId: getFMP4
      parameters:
      - description: 計測のUUID
        example: f967c530-f562-410a-991b-031c43142778
        explode: false
        in: path
        name: meas_uuid
        required: true
        schema:
          example: f967c530-f562-410a-991b-031c43142778
          type: string
        style: simple
      - description: チャンネル
        example: 1
        explode: false
        in: path
        name: channel
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            video/mp4:
              schema:
                format: binary
                type: string
          description: OK
      summary: Get HLS as FMP4
      tags:
      - media_HLS
      x-accepts: video/mp4
  /media/videos:
    get:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）のリストを取得します。
      operationId: getVideos
      parameters:
      - description: 動画（video）のUUID
        example: 3699e2b9-5d87-4dbd-9b85-098e7dfaee76
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      - description: 計測のUUID
        example: 3699e2b9-5d87-4dbd-9b85-098e7dfaee76
        explode: true
        in: query
        name: meas_uuid
        required: false
        schema:
          type: string
        style: form
      - description: チャンネル
        example: 1
        explode: true
        in: query
        name: channel
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。
          接尾辞を省略した場合は昇順となります。例えば、 `name-` を指定すると、nameによる降順で出力されます。

            - `channel`
            - `created_at`
            - `updated_at`
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: create_at+
          type: string
        style: form
      - description: 取得するページ番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          maximum: 1000
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Videos'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: List Videos
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/videos/{video_uuid}:
    get:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画を取得します。
      operationId: getVideo
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Video'
          description: OK
      summary: Get Video
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/videos/{video_uuid}/jpegs:
    get:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）から変換されたJPEGデータのリストを取得します。
      operationId: getJpegs
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Jpegs'
          description: OK
      summary: List JPEGs
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
    post:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）を変換してJPEGデータを作成します。
      operationId: createJpeg
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJpegRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Jpeg'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: Create JPEG
      tags:
      - media_Videos
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /media/videos/{video_uuid}/jpegs/{jpeg_uuid}:
    delete:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）から変換されたJPEGデータを削除します。
      operationId: deleteJpeg
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: JPEGのUUID
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        explode: false
        in: path
        name: jpeg_uuid
        required: true
        schema:
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete JPEG
      tags:
      - media_Videos
      x-accepts: application/json
    get:
      deprecated: true
      description: "（Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が\
        付いたエンドポイントを使用してください） 動画（video）から変換されたJPEGデータの情報を取得します。 JPEGファイル自体を取得するには、\
        `GET /media/videos/{video_uuid}/jpegs/{jpeg_uuid}/images/selected.zip` を使用\
        してください。"
      operationId: getJpeg
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: JPEGのUUID
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        explode: false
        in: path
        name: jpeg_uuid
        required: true
        schema:
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Jpeg'
          description: OK
      summary: Get JPEG
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/videos/{video_uuid}/jpegs/{jpeg_uuid}/cancel_convert:
    put:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）からJPEGデータへの変換をキャンセルします。
      operationId: cancelCreatingJpeg
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: JPEGのUUID
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        explode: false
        in: path
        name: jpeg_uuid
        required: true
        schema:
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Jpeg'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: Cancel Creating JPEG
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/videos/{video_uuid}/jpegs/{jpeg_uuid}/images/selected.zip:
    get:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        JPEGデータをZIPファイルにまとめた形で取得します。
      operationId: getJpegAsZip
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: JPEGのUUID
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        explode: false
        in: path
        name: jpeg_uuid
        required: true
        schema:
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          type: string
        style: simple
      - description: 取得したいJPEGのインデックス番号（最初の番号は1）。指定がない場合はすべて取得します。 `indexes` パラメーターを複数回指定することで、複数のJPEGファイルを取得することができます。
        explode: true
        in: query
        name: indexes
        required: false
        schema:
          items:
            example: 1
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: OK
      summary: Get JPEG as zip
      tags:
      - media_Videos
      x-accepts: application/zip
  /media/videos/{video_uuid}/mp4s:
    get:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）から変換されたMP4データのリストを取得します。
      operationId: getMP4s
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MP4s'
          description: OK
      summary: List MP4s
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
    post:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）を変換してMP4データを作成します。
      operationId: createMP4
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMP4Request'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MP4'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: Create MP4
      tags:
      - media_Videos
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /media/videos/{video_uuid}/mp4s/{mp4_uuid}:
    delete:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）から変換されたMP4データを削除します。
      operationId: deleteMP4
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: MP4のUUID
        example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
        explode: false
        in: path
        name: mp4_uuid
        required: true
        schema:
          example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete MP4
      tags:
      - media_Videos
      x-accepts: application/json
    get:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）から変換されたMP4データの情報を取得します。
      operationId: getMP4
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: MP4のUUID
        example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
        explode: false
        in: path
        name: mp4_uuid
        required: true
        schema:
          example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MP4'
          description: OK
      summary: Get MP4
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/videos/{video_uuid}/mp4s/{mp4_uuid}/cancel_convert:
    put:
      deprecated: true
      description: （Deprecated。代わりに Prefix(`/projects/00000000-0000-0000-0000-000000000000/`)が付いたエンドポイントを使用してください）
        動画（video）からMP4データへの変換をキャンセルします。
      operationId: cancelCreatingMP4
      parameters:
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: MP4のUUID
        example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
        explode: false
        in: path
        name: mp4_uuid
        required: true
        schema:
          example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MP4'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: Cancel Creating MP4
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/ws/edges/{edge_uuid}/fmp4s/{channel}:
    get:
      deprecated: true
      description: "**Deprecated** このエンドポイントの代わりに [`GET /v1/stream`](#operation/Stream)\
        \ でデータを取得し、WebCodecsを使用して取得したデータをデコードしてください。"
      operationId: connectLive
      parameters:
      - description: エッジのUUID
        example: 421fecd4-646b-4ab8-a715-c4b888964b11
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          example: 421fecd4-646b-4ab8-a715-c4b888964b11
          type: string
        style: simple
      - description: チャンネル
        example: 1
        explode: false
        in: path
        name: channel
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "101":
          description: Switching Protocols
      summary: Get realtime video stream
      tags:
      - media_Live
      x-accepts: application/json
  /media/projects/{project_uuid}/hlses:
    get:
      deprecated: true
      description: "**Deprecated** このエンドポイントではなく [`GET /media/videos`](#operation/getVideos)\
        \ を使用してください"
      operationId: getProjectHLSes
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 取得対象範囲の始点（マイクロ秒単位のUNIX時刻）
        example: 123456789
        explode: true
        in: query
        name: start
        required: false
        schema:
          type: integer
        style: form
      - description: 取得対象範囲の終点（マイクロ秒単位のUNIX時刻）
        example: 1234567890
        explode: true
        in: query
        name: end
        required: false
        schema:
          type: integer
        style: form
      - description: エッジのUUID
        example: 3699e2b9-5d87-4dbd-9b85-098e7dfaee76
        explode: true
        in: query
        name: edge_uuid
        required: false
        schema:
          type: string
        style: form
      - description: チャンネル
        example: 1
        explode: true
        in: query
        name: channel
        required: false
        schema:
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/HLSList'
          description: OK
      summary: List Project HLSes
      tags:
      - media_HLS
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/jobs:
    get:
      description: HLSへの変換ジョブのリストを取得します。
      operationId: getProjectJobs
      parameters:
      - description: 取得したいジョブのUUID
        example: ade4eea8-edc6-3ca5-c557-12a616c2028a
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 計測のUUID
        example: a5170afc-9cc2-5327-e0e1-32746b5a7977
        explode: true
        in: query
        name: meas_uuid
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          - update
            - 計測内の動画データのうち、新しくサーバーが受信した部分（HLSにまだ変換されていない部分）を
              HLSに変換するジョブ。通常は計測実行中に行います。
          - finalize
            - 計測全体をサーバーに回収した後に、動画データ全体をHLSに変換するジョブ
          - delete
            - 変換によって作成されたHLSデータを削除するジョブ。
              このジョブを実行すると、HLSプレイリスト、セグメントファイル、
              データベース内のHLSに関する情報が削除され、この動画のHLSによる再生はできなくなります。
        example: update
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/JobType'
          type: array
        style: form
      - description: ジョブのステータス
        example: succeeded
        explode: true
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/JobStatus'
          type: array
        style: form
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 1回のリクエストで取得する件数
        example: 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: 取得するページ番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 並べ替えに使用するキー
        example: created_at
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: created_at
          enum:
          - created_at
          - updated_at
          type: string
        style: form
      - description: 並べ替えの順序
        example: asc
        explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/JobList'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: List Project Jobs
      tags:
      - media_Jobs
      x-accepts: application/json; charset=utf-8
    post:
      description: HLSへの変換ジョブを作成します。
      operationId: createProjectJob
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Job'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
        "409":
          content:
            application/json; charset=utf-8:
              examples:
                Conflict:
                  $ref: '#/components/examples/ErrorProblemConflictMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Conflict
      summary: Create Project Job
      tags:
      - media_Jobs
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/measurements/{meas_uuid}/channels/{channel}/hlses/playlist.m3u8:
    get:
      deprecated: true
      description: '**Depricated** このエンドポイントの代わりに、Videoオブジェクトの `hls`にあるPATHにしたがってPlaylistを取得してください。'
      operationId: getProjectPlaylist
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: f967c530-f562-410a-991b-031c43142778
        explode: false
        in: path
        name: meas_uuid
        required: true
        schema:
          example: f967c530-f562-410a-991b-031c43142778
          type: string
        style: simple
      - description: チャンネル
        example: 1
        explode: false
        in: path
        name: channel
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      - description: '`true` にすると、取得するm3u8形式のプレイリストに強制的にEXT-X-ENDLISTを追加します。'
        example: true
        explode: true
        in: query
        name: force_end
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/vnd.apple.mpegurl:
              schema:
                type: string
          description: OK
      summary: Get Project HLS Playlist
      tags:
      - media_HLS
      x-accepts: application/vnd.apple.mpegurl
  /media/projects/{project_uuid}/measurements/{meas_uuid}/channels/{channel}/mp4s/measurement.mp4:
    get:
      deprecated: true
      description: "**Deprecated** このエンドポイントの代わりに [`POST /media/videos/{video_uuid}/mp4s`](#operation/createMP4)\
        \ を使用してください。 mp4リソース作成後、 `MP4`オブジェクトの `file_path`にあるPATHに従って動画を取得してください"
      operationId: getProjectFMP4
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 計測のUUID
        example: f967c530-f562-410a-991b-031c43142778
        explode: false
        in: path
        name: meas_uuid
        required: true
        schema:
          example: f967c530-f562-410a-991b-031c43142778
          type: string
        style: simple
      - description: チャンネル
        example: 1
        explode: false
        in: path
        name: channel
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            video/mp4:
              schema:
                format: binary
                type: string
          description: OK
      summary: Get Project HLS as FMP4
      tags:
      - media_HLS
      x-accepts: video/mp4
  /media/projects/{project_uuid}/videos:
    get:
      description: 動画（video）のリストを取得します。
      operationId: getProjectVideos
      parameters:
      - description: 動画（video）のUUID
        example: 3699e2b9-5d87-4dbd-9b85-098e7dfaee76
        explode: true
        in: query
        name: uuid
        required: false
        schema:
          type: string
        style: form
      - description: 計測のUUID
        example: 3699e2b9-5d87-4dbd-9b85-098e7dfaee76
        explode: true
        in: query
        name: meas_uuid
        required: false
        schema:
          type: string
        style: form
      - description: チャンネル
        example: 1
        explode: true
        in: query
        name: channel
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。
          接尾辞を省略した場合は昇順となります。例えば、 `name-` を指定すると、nameによる降順で出力されます。

            - `channel`
            - `created_at`
            - `updated_at`
        explode: true
        in: query
        name: sort
        required: false
        schema:
          default: create_at+
          type: string
        style: form
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 取得するページ番号
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          minimum: 1
          type: integer
        style: form
      - description: 1回のリクエストで取得する件数
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 100
          maximum: 1000
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Videos'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: List Project Videos
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/videos/{video_uuid}:
    get:
      description: 動画を取得します。
      operationId: getProjectVideo
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Video'
          description: OK
      summary: Get Project Video
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/videos/{video_uuid}/jpegs:
    get:
      description: 動画（video）から変換されたJPEGデータのリストを取得します。
      operationId: getProjectJpegs
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Jpegs'
          description: OK
      summary: List Project JPEGs
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
    post:
      description: 動画（video）を変換してJPEGデータを作成します。
      operationId: createProjectJpeg
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJpegRequest'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Jpeg'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: Create Project JPEG
      tags:
      - media_Videos
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/videos/{video_uuid}/jpegs/{jpeg_uuid}:
    delete:
      description: 動画（video）から変換されたJPEGデータを削除します。
      operationId: deleteProjectJpeg
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: JPEGのUUID
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        explode: false
        in: path
        name: jpeg_uuid
        required: true
        schema:
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project JPEG
      tags:
      - media_Videos
      x-accepts: application/json
    get:
      description: "動画（video）から変換されたJPEGデータの情報を取得します。 JPEGファイル自体を取得するには、`GET /media/videos/{video_uuid}/jpegs/{jpeg_uuid}/images/selected.zip`\
        \ を使用してください。"
      operationId: getProjectJpeg
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: JPEGのUUID
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        explode: false
        in: path
        name: jpeg_uuid
        required: true
        schema:
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Jpeg'
          description: OK
      summary: Get Project JPEG
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/videos/{video_uuid}/jpegs/{jpeg_uuid}/cancel_convert:
    put:
      description: 動画（video）からJPEGデータへの変換をキャンセルします。
      operationId: cancelCreatingProjectJpeg
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: JPEGのUUID
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        explode: false
        in: path
        name: jpeg_uuid
        required: true
        schema:
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Jpeg'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: Cancel Creating Project JPEG
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/videos/{video_uuid}/jpegs/{jpeg_uuid}/images/selected.zip:
    get:
      description: JPEGデータをZIPファイルにまとめた形で取得します。
      operationId: getProjectJpegAsZip
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: JPEGのUUID
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        explode: false
        in: path
        name: jpeg_uuid
        required: true
        schema:
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          type: string
        style: simple
      - description: 取得したいJPEGのインデックス番号（最初の番号は1）。指定がない場合はすべて取得します。 `indexes` パラメーターを複数回指定することで、複数のJPEGファイルを取得することができます。
        explode: true
        in: query
        name: indexes
        required: false
        schema:
          items:
            example: 1
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: OK
      summary: Get Project JPEG as zip
      tags:
      - media_Videos
      x-accepts: application/zip
  /media/projects/{project_uuid}/videos/{video_uuid}/mp4s:
    get:
      description: 動画（video）から変換されたMP4データのリストを取得します。
      operationId: getProjectMP4s
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MP4s'
          description: OK
      summary: List Project MP4s
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
    post:
      description: 動画（video）を変換してMP4データを作成します。
      operationId: createProjectMP4
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMP4Request'
      responses:
        "201":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MP4'
          description: Created
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: Create Project MP4
      tags:
      - media_Videos
      x-content-type: application/json
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/videos/{video_uuid}/mp4s/{mp4_uuid}:
    delete:
      description: 動画（video）から変換されたMP4データを削除します。
      operationId: deleteProjectMP4
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: MP4のUUID
        example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
        explode: false
        in: path
        name: mp4_uuid
        required: true
        schema:
          example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
          type: string
        style: simple
      responses:
        "204":
          description: No Content
      summary: Delete Project MP4
      tags:
      - media_Videos
      x-accepts: application/json
    get:
      description: 動画（video）から変換されたMP4データの情報を取得します。
      operationId: getProjectMP4
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: MP4のUUID
        example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
        explode: false
        in: path
        name: mp4_uuid
        required: true
        schema:
          example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MP4'
          description: OK
      summary: Get Project MP4
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/videos/{video_uuid}/mp4s/{mp4_uuid}/cancel_convert:
    put:
      description: 動画（video）からMP4データへの変換をキャンセルします。
      operationId: cancelCreatingProjectMP4
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: 変換元の動画（video）のUUID
        example: 68b91013-47e9-4e68-a965-892549587dfa
        explode: false
        in: path
        name: video_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: MP4のUUID
        example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
        explode: false
        in: path
        name: mp4_uuid
        required: true
        schema:
          example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/MP4'
          description: OK
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorProblemBadRequestMedia'
                  value: null
              schema:
                $ref: '#/components/schemas/ErrorProblemMedia'
          description: Bad Request
      summary: Cancel Creating Project MP4
      tags:
      - media_Videos
      x-accepts: application/json; charset=utf-8
  /media/projects/{project_uuid}/ws/edges/{edge_uuid}/fmp4s/{channel}:
    get:
      deprecated: true
      description: "**Deprecated** このエンドポイントの代わりに [`GET /v1/stream`](#operation/Stream)\
        \ でデータを取得し、WebCodecsを使用して取得したデータをデコードしてください。"
      operationId: connectProjectLive
      parameters:
      - description: プロジェクトのUUID
        example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
        explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          type: string
        style: simple
      - description: エッジのUUID
        example: 421fecd4-646b-4ab8-a715-c4b888964b11
        explode: false
        in: path
        name: edge_uuid
        required: true
        schema:
          example: 421fecd4-646b-4ab8-a715-c4b888964b11
          type: string
        style: simple
      - description: チャンネル
        example: 1
        explode: false
        in: path
        name: channel
        required: true
        schema:
          example: 1
          type: integer
        style: simple
      responses:
        "101":
          description: Switching Protocols
      summary: Get Project realtime video stream
      tags:
      - media_Live
      x-accepts: application/json
  /v1/version:
    get:
      description: APIバージョンを取得します。
      operationId: getVersion
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              examples:
                response:
                  value:
                    version: 1.0.0
              schema:
                $ref: '#/components/schemas/getVersion_200_response'
          description: OK
      summary: Get Version
      tags:
      - versions_Version
      x-accepts: application/json; charset=utf-8
components:
  examples:
    EmptyList:
      value:
        items: []
        page:
          next: false
          prev: false
          total_page: 1
          total_count: 1
    EdgeWithoutOwner:
      value:
        uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        name: my-edge
        nickname: My Edge
        description: Description
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    Edge:
      value:
        uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        name: my-edge
        nickname: My Edge
        description: Description
        owner:
          user_uuid: 84693d9e-0f1a-457b-b417-a7c697cffdce
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    User:
      value:
        uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        name: intdash
        nickname: nickname
        disabled: false
        is_super: false
        emails:
        - id: 1
          address: intdash@example.com
          verified: false
          created_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
        roles:
        - af22c56b-6b3e-4807-a165-07e9dbd7e25b
        password:
          attempt_count: 1
          is_temporary: false
          last_attempt_at: 2000-01-01T00:00:00Z
          expired_at: 2000-01-01T00:00:00Z
          created_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
        last_sign_in_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    ErrorProblemConflict:
      value:
        type: conflict
        title: conflict message
    Edges:
      value:
        items:
        - uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
          name: my-edge
          nickname: My Edge
          description: Description
          owner:
            user_uuid: 84693d9e-0f1a-457b-b417-a7c697cffdce
          created_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
        page:
          total_count: 1
    CreateEdgeWithUUIDRequest:
      value:
        name: edge-with-uuid
        nickname: nickname
        description: description
    CreatedUser:
      value:
        uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        name: intdash
        nickname: nickname
        disabled: false
        description: description
        is_super: false
        emails:
        - id: 1
          address: intdash@example.com
          verified: false
          created_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
        password:
          attempt_count: 0
          last_attempt_at: 2000-01-01T00:00:00Z
          is_temporary: true
          temporary_password: password
          expired_at: 2000-01-01T00:00:00Z
          created_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
        roles:
        - af22c56b-6b3e-4807-a165-07e9dbd7e25b
        last_sign_in_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    ErrorProblemConflictNameAndEmail:
      value:
        type: conflict
        title: conflict message
        properties:
          name: already exist
          email: already exist
    ErrorProblemBadRequest:
      value:
        type: invalid_request
        title: invalid request message
    UserPassword:
      value:
        attempt_count: 1
        is_temporary: false
        last_attempt_at: 2000-01-01T00:00:00Z
        expired_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    UserAPITokenList:
      value:
        items:
        - id: 1
          name: craeted
          scopes:
          - uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
            name: meas:r
            allowed_endpoints:
            - path: /resources
              method: GET
            allowed_iscp_messages:
            - type: upstream_spec_request
            denied_endpoints:
            - path: /denied_resources
              method: GET
          expired_at: 2000-01-01T00:00:00Z
          created_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
        page:
          total_count: 1
    CreatedUserAPIToken:
      value:
        id: 1
        name: craeted
        token: token.signature
        scopes:
        - uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          name: meas:r
          allowed_endpoints:
          - path: /resources
            method: GET
          allowed_iscp_messages:
          - type: upstream_spec_request
          denied_endpoints:
          - path: /denied_resources
            method: GET
        expired_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    UserAPIToken:
      value:
        id: 1
        name: craeted
        scopes:
        - uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          name: meas:r
          allowed_endpoints:
          - path: /resources
            method: GET
          allowed_iscp_messages:
          - type: upstream_spec_request
          denied_endpoints:
          - path: /denied_resources
            method: GET
        expired_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    UserTemporaryPassword:
      value:
        attempt_count: 0
        is_temporary: true
        temporary_password: password
        last_attempt_at: 2000-01-01T00:00:00Z
        expired_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    CreatedGroup:
      value:
        uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        name: my-group
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    ErrorProblemErrorExceededMaxGroupsCount:
      value:
        type: exceeded_max_groups_count
        title: <error message>
    CreatedProject:
      value:
        uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        parent_group_uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        name: my-project
        created_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
    ErrorProblemExceededMaxProjectsCountPerGroup:
      value:
        type: exceeded_max_projects_count_per_group
        title: <error message>
    ErrorProblemForbiddenCannotDeleteProject:
      value:
        type: forbidden
        title: You cannot delete a project. Because you are not a project owner.
    ErrorProblemForbiddenRemoveOwner:
      value:
        type: forbidden
        title: unremovable owner member
    ErrorProblemForbiddenAtLeastOneOwner:
      value:
        type: forbidden
        title: project must have at least one owner.
    DataIDsGetResponse:
      value:
        items:
        - data_type: 1
          channel: 2
          data_id: "00000001"
    MeasList:
      value:
        items:
        - uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          name: meas1
          description: description of measurement
          edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
          duration: 100000000
          ended: true
          status: measuring
          basetime: 2017-02-11T01:23:45.678901Z
          basetime_type: ntp
          processed_ratio: 0.9
          protected: false
          received_data_points: null
          markers:
          - uuid: 887326ce-a2a2-4db6-8c06-2f8447f0f29e
            name: name
            description: description
            type: point
            detail:
              occurred_elapsed_time: 100
            tag:
              key1: value1
              key2: value2
            elapsed_time: 1000
            created_at: 2017-02-11T01:23:45Z
            created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
            updated_at: 2017-02-11T12:34:56Z
            updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
          created_at: 2017-02-11T01:23:45Z
          updated_at: 2017-02-11T12:34:56Z
        page:
          total_count: 1
          first: true
          last: true
          next: /path?xxx=1&bbb=2&page=3
          previous: /path?xxx=1&bbb=2&page=1
    MeasCreate:
      value:
        name: meas1
        description: description of measurement
        basetime: 2017-02-11T01:23:45.678901Z
        basetime_type: ntp
        edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
        protected: false
    Meas:
      value:
        uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        name: meas1
        description: description of measurement
        edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
        duration: 100000000
        ended: true
        status: measuring
        basetime: 2017-02-11T01:23:45.678901Z
        basetime_type: ntp
        processed_ratio: 0.9
        received_data_points: null
        markers:
        - uuid: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
          name: Name3
          description: Description3
          tag:
            tagkey1: tagValue1
            tagkey2: tagValue2
          type: range
          detail:
            start_elapsed_time: 3
            end_elapsed_time: 7
          created_at: 2000-01-02T03:04:07Z
          created_by: e3f57626-93d6-4274-a51f-1ac538357a8a
          updated_at: 2020-04-15T14:15:23.135268Z
          updated_by: 447af3b3-a311-4047-9d7c-110a0fac505b
        - uuid: cdc1029e-d474-477c-aa6e-b48928fdb825
          name: Name2
          description: Description2
          tag:
            tagkey1: tagValue1
            tagkey2: tagValue2
          type: point
          detail:
            occurred_elapsed_time: 3
          created_at: 2000-01-02T03:04:06Z
          created_by: e3f57626-93d6-4274-a51f-1ac538357a8a
          updated_at: 2020-04-15T14:15:23.064981Z
          updated_by: 447af3b3-a311-4047-9d7c-110a0fac505b
        protected: false
        created_at: 2017-02-11T01:23:45Z
        updated_at: 2017-02-11T12:34:56Z
    MeasFinished:
      value:
        uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        name: meas1
        description: description of measurement
        edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
        duration: 100000000
        ended: true
        status: measuring
        basetime: 2017-02-11T01:23:45.678901Z
        basetime_type: ntp
        processed_ratio: 0.9
        received_data_points: null
        markers:
        - uuid: 887326ce-a2a2-4db6-8c06-2f8447f0f29e
          name: name
          description: description
          type: point
          detail:
            occurred_elapsed_time: 100
          tag:
            key1: value1
            key2: value2
          elapsed_time: 1000
          created_at: 2017-02-11T01:23:45Z
          created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
          updated_at: 2017-02-11T12:34:56Z
          updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
        protected: false
        created_at: 2017-02-11T01:23:45Z
        updated_at: 2017-02-11T12:34:56Z
    MeasBaseTimesGetResponse:
      value:
        items:
        - type: ntp
          basetime: 2017-02-11T01:23:45.678901Z
          created_at: 2017-02-11T01:23:45Z
          updated_at: 2017-02-11T01:23:45Z
    MeasBaseTimeGetResponse:
      value:
        type: ntp
        basetime: 2017-02-11T01:23:45.678901Z
        created_at: 2017-02-11T01:23:45Z
        updated_at: 2017-02-11T01:23:45Z
    MeasBaseTimePutRequest:
      value:
        basetime: 2017-02-11T01:23:45Z
    MeasBaseTimePutResponse:
      value:
        type: ntp
        basetime: 2017-02-11T01:23:45.678901Z
        created_at: 2017-02-11T01:23:45Z
        updated_at: 2017-02-11T01:23:45Z
    MeasurementSectionsGetResponse:
      value:
        items:
        - serial_number: 0
          processed: true
          created_at: 2017-02-11T01:23:45Z
          updated_at: 2017-02-11T12:34:56Z
        - serial_number: 1
          processed: true
          created_at: 2017-02-11T01:23:45Z
          updated_at: 2017-02-11T12:34:56Z
        - serial_number: 2
          processed: false
        total_count: 100
    MeasurementJobsGetResponse:
      value:
        items:
        - uuid: d9135580-4a6b-4fbd-971b-8fdce27b617c
          meas_uuid: a72c674a-e8e9-43bc-940f-a034853363e1
          measurement:
            uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
            name: meas1
            description: description of measurement
            edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
            duration: 100000000
            ended: true
            status: measuring
            basetime: 2017-02-11T01:23:45.678901Z
            basetime_type: ntp
            processed_ratio: 0.9
            received_data_points: null
            markers:
            - uuid: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
              name: Name3
              description: Description3
              tag:
                tagkey1: tagValue1
                tagkey2: tagValue2
              type: range
              detail:
                start_elapsed_time: 3
                end_elapsed_time: 7
              created_at: 2000-01-02T03:04:07Z
              created_by: e3f57626-93d6-4274-a51f-1ac538357a8a
              updated_at: 2020-04-15T14:15:23.135268Z
              updated_by: 447af3b3-a311-4047-9d7c-110a0fac505b
            - uuid: cdc1029e-d474-477c-aa6e-b48928fdb825
              name: Name2
              description: Description2
              tag:
                tagkey1: tagValue1
                tagkey2: tagValue2
              type: point
              detail:
                occurred_elapsed_time: 3
              created_at: 2000-01-02T03:04:06Z
              created_by: e3f57626-93d6-4274-a51f-1ac538357a8a
              updated_at: 2020-04-15T14:15:23.064981Z
              updated_by: 447af3b3-a311-4047-9d7c-110a0fac505b
            protected: false
            created_at: 2017-02-11T01:23:45Z
            updated_at: 2017-02-11T12:34:56Z
        page:
          total_count: 1
          first: true
          last: true
          next: /path?xxx=1&bbb=2&page=3
          previous: /path?xxx=1&bbb=2&page=1
    MeasurementJobGetResponse:
      value:
        uuid: d9135580-4a6b-4fbd-971b-8fdce27b617c
        meas_uuid: a72c674a-e8e9-43bc-940f-a034853363e1
        status: succeeded
        message: Succeeded
        file_name: sample.csv
        created_at: 2017-02-11T01:23:45Z
        updated_at: 2017-02-11T12:34:56Z
    MeasurementMarkersGetResponse:
      value:
        items:
        - uuid: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
          name: name
          description: description
          type: range
          detail:
            start_elapsed_time: 3
            end_elapsed_time: 4
          tag:
            tagkey1: tagValue1
            tagkey2: tagValue2
          created_at: 2017-02-11T01:23:45Z
          created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
          updated_at: 2017-02-11T12:34:56Z
          updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
        - uuid: cdc1029e-d474-477c-aa6e-b48928fdb825
          name: name
          description: description
          type: point
          detail:
            occurred_elapsed_time: 3
          tag:
            tagkey1: tagValue1
            tagkey2: tagValue2
          created_at: 2017-02-11T01:23:45Z
          created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
          updated_at: 2017-02-11T12:34:56Z
          updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
        page:
          total_count: 1
          first: true
          last: true
          next: /path?xxx=1&bbb=2&page=3
          previous: /path?xxx=1&bbb=2&page=1
    MeasurementMarkerGetResponseRange:
      value:
        uuid: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
        name: name
        description: description
        type: range
        detail:
          start_elapsed_time: 3
          end_elapsed_time: 4
        tag:
          tagkey1: tagValue1
          tagkey2: tagValue2
        created_at: 2017-02-11T01:23:45Z
        created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
        updated_at: 2017-02-11T12:34:56Z
        updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
    MeasurementMarkerGetResponsePoint:
      value:
        uuid: cdc1029e-d474-477c-aa6e-b48928fdb825
        name: name
        description: description
        type: point
        detail:
          occurred_elapsed_time: 3
        tag:
          tagkey1: tagValue1
          tagkey2: tagValue2
        created_at: 2017-02-11T01:23:45Z
        created_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
        updated_at: 2017-02-11T12:34:56Z
        updated_by: adbbd1ff-1e13-4b12-b125-e213945a65f8
    MeasurementMarkerPutRequestRange:
      value:
        name: name
        description: description
        type: range
        detail:
          start_elapsed_time: 100
          end_elapsed_time: 200
        tag:
          tagkey1: tagValue1
          tagkey2: tagValue2
    MeasurementMarkerPutRequestPoint:
      value:
        name: name
        description: description
        type: point
        detail:
          occurred_elapsed_time: 100
        tag:
          tagkey1: tagValue1
          tagkey2: tagValue2
    MeasurementUploadStatusesGetResponse:
      value:
        items:
        - uuid: d9135580-4a6b-4fbd-971b-8fdce27b617c
          meas_uuid: a72c674a-e8e9-43bc-940f-a034853363e1
          state: succeed
          message: Succeed
          file_name: sample.csv
          created_at: 2017-02-11T01:23:45Z
          updated_at: 2017-02-11T12:34:56Z
        page:
          total_count: 1
          first: true
          last: true
          next: /path?xxx=1&bbb=2&page=3
          previous: /path?xxx=1&bbb=2&page=1
    MeasurementUploadPostResponse:
      value:
        meas_upload_uuid: d9135580-4a6b-4fbd-971b-8fdce27b617c
        job_uuid: d9135580-4a6b-4fbd-971b-8fdce27b617c
        file_name: filename.csv
    MeasurementMarkerPostRequestPoint:
      value:
        name: name
        description: description
        type: point
        detail:
          occurred_elapsed_time: 100
        tag:
          tagkey1: tagValue1
          tagkey2: tagValue2
    MeasurementMarkerPostRequestRange:
      value:
        name: name
        description: description
        type: range
        detail:
          start_elapsed_time: 100
          end_elapsed_time: 200
        tag:
          tagkey1: tagValue1
          tagkey2: tagValue2
    ErrorProblemBadRequestMedia:
      value:
        type: invalid_request
        title: invalid request message
    ErrorProblemConflictMedia:
      value:
        type: conflict
        title: conflict message
  parameters:
    QueryPage:
      description: 取得するページの番号
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        minimum: 1
        type: integer
      style: form
    QueryPerPage:
      description: 1回のリクエストで取得する件数
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        default: 30
        maximum: 200
        type: integer
      style: form
    PathClientID:
      description: OAuth2クライアントID
      example: 039b8ee2-8edc-46e4-9a88-4d03bac142f7
      explode: false
      in: path
      name: client_id
      required: true
      schema:
        type: string
      style: simple
    PathEdgeUUID:
      description: エッジのUUID
      example: e920a50c-ddde-4571-b066-b568340de7cf
      explode: false
      in: path
      name: edge_uuid
      required: true
      schema:
        type: string
      style: simple
    QueryOAuth2ClientID:
      description: OAuth2クライアントID
      example: client_id
      explode: true
      in: query
      name: client_id
      required: true
      schema:
        type: string
      style: form
    QueryOAuth2ResponseType:
      description: OAuth2のresponse_type。 `code` のみサポートされています。
      example: code
      explode: true
      in: query
      name: response_type
      required: true
      schema:
        enum:
        - code
        type: string
      style: form
    QueryOAuth2RedirectURI:
      description: 認可後のリダイレクト先URI
      example: http://localhost:8080/
      explode: true
      in: query
      name: redirect_uri
      required: true
      schema:
        type: string
      style: form
    QueryOAuth2State:
      description: CSRF対策のためのstate
      example: 05d54c58385046dd822d233c6adfb9e9
      explode: true
      in: query
      name: state
      required: true
      schema:
        type: string
      style: form
    QueryOAuth2CodeChallenge:
      description: PKCEコードチャレンジ。 `code_verifier` から計算したSHA-256ハッシュを、Base64 URLエンコードしたもの。
      example: ZtNPunH49FD35FWYhT5Tv8I7vRKQJ8uxMaL0_9eHjNA
      explode: true
      in: query
      name: code_challenge
      required: false
      schema:
        type: string
      style: form
    QueryOAuth2CodeChallengeMethod:
      description: PKCEコードチャレンジの方式。 `S256` （SHA-256）のみサポートされます。
      example: S256
      explode: true
      in: query
      name: code_challenge_method
      required: false
      schema:
        enum:
        - S256
        type: string
      style: form
    PathUserEmailID:
      description: ユーザーのメールアドレスのID
      example: 1
      explode: false
      in: path
      name: user_email_id
      required: true
      schema:
        example: 1
        format: int64
        type: integer
      style: simple
    UserAPITokenID:
      description: APIトークンのID
      example: 1
      explode: false
      in: path
      name: user_api_token_id
      required: true
      schema:
        example: 1
        format: int64
        type: integer
      style: simple
    QueryProjectSort:
      description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
        例えば、 `name-` を指定すると、nameによる降順で出力されます。
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - created_at
        - created_at+
        - created_at-
        - updated_at
        - updated_at+
        - updated_at-
        - name
        - name+
        - name-
        type: string
        x-enum-varnames:
        - CreatedAt
        - CreatedAtAsc
        - CreatedAtDesc
        - UpdatedAt
        - UpdatedAtAsc
        - UpdatedAtDesc
        - Name
        - NameAsc
        - NameDesc
      style: form
    QueryGroupSort:
      description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
        例えば、 `name-` を指定すると、nameによる降順で出力されます。
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - created_at
        - created_at+
        - created_at-
        - updated_at
        - updated_at+
        - updated_at-
        - name
        - name+
        - name-
        type: string
        x-enum-varnames:
        - CreatedAt
        - CreatedAtAsc
        - CreatedAtDesc
        - UpdatedAt
        - UpdatedAtAsc
        - UpdatedAtDesc
        - Name
        - NameAsc
        - NameDesc
      style: form
    PathUserUUID:
      example: 0932ff17-567c-4ac8-a40d-136357890f7b
      explode: false
      in: path
      name: user_uuid
      required: true
      schema:
        description: ユーザーのUUID
        example: 0932ff17-567c-4ac8-a40d-136357890f7b
        type: string
      style: simple
    PathRoleUUID:
      description: ロールのUUID
      example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      explode: false
      in: path
      name: role_uuid
      required: true
      schema:
        type: string
      style: simple
    PathGroupUUID:
      description: グループのUUID
      example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      explode: false
      in: path
      name: group_uuid
      required: true
      schema:
        type: string
      style: simple
    QueryIsOwner:
      description: |-
        * `true` を指定した場合、オーナーのみを取得します。
        * `false` を指定した場合、オーナー以外を取得します。
        * 指定を省略した場合、オーナーであるかにかかわらずメンバーを取得します。
      example: false
      explode: true
      in: query
      name: is_owner
      required: false
      schema:
        type: boolean
      style: form
    QueryUserUUIDs:
      description: ユーザーのUUID
      explode: true
      in: query
      name: user_uuid
      required: false
      schema:
        items:
          example: b7f5f259-6a63-4a26-bfa3-e15240cbc0b7
          type: string
        type: array
      style: form
    QueryGroupMemberSort:
      description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
        例えば、 `name-` を指定すると、nameによる降順で出力されます。
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - created_at
        - created_at+
        - created_at-
        - updated_at
        - updated_at+
        - updated_at-
        - name
        - name+
        - name-
        type: string
        x-enum-varnames:
        - CreatedAt
        - CreatedAtAsc
        - CreatedAtDesc
        - UpdatedAt
        - UpdatedAtAsc
        - UpdatedAtDesc
        - Name
        - NameAsc
        - NameDesc
      style: form
    QuerySinceCreatedAt:
      description: 指定した時刻より後に作成されたリソースを取得します。
      example: 2006-01-02T15:04:05.999999999Z
      explode: true
      in: query
      name: since_created_at
      required: false
      schema:
        format: date-time
        type: string
      style: form
    PathProjectUUID:
      description: プロジェクトのUUID
      example: 0932ff17-567c-4ac8-a40d-136357890f7b
      explode: false
      in: path
      name: project_uuid
      required: true
      schema:
        type: string
      style: simple
    QueryEdgeUUIDs:
      description: エッジのUUID
      explode: true
      in: query
      name: edge_uuid
      required: false
      schema:
        items:
          example: b7f5f259-6a63-4a26-bfa3-e15240cbc0b7
          type: string
        type: array
      style: form
    QueryProjectEdgeSort:
      description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
        例えば、 `name-` を指定すると、nameによる降順で出力されます。
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - created_at
        - created_at+
        - created_at-
        - updated_at
        - updated_at+
        - updated_at-
        - nickname
        - nickname+
        - nickname-
        type: string
        x-enum-varnames:
        - CreatedAt
        - CreatedAtAsc
        - CreatedAtDesc
        - UpdatedAt
        - UpdatedAtAsc
        - UpdatedAtDesc
        - NicknameAt
        - NicknameAtAsc
        - NicknameAtDesc
      style: form
    QueryProjectMemberSort:
      description: 並べ替えに使用するキー。接尾辞 `+` を付けた場合は昇順、 `-` を付けた場合は降順で出力されます。 接尾辞を省略した場合は昇順となります。
        例えば、 `name-` を指定すると、nameによる降順で出力されます。
      explode: true
      in: query
      name: sort
      required: false
      schema:
        enum:
        - created_at
        - created_at+
        - created_at-
        - updated_at
        - updated_at+
        - updated_at-
        - name
        - name+
        - name-
        type: string
        x-enum-varnames:
        - CreatedAt
        - CreatedAtAsc
        - CreatedAtDesc
        - UpdatedAt
        - UpdatedAtAsc
        - UpdatedAtDesc
        - Name
        - NameAsc
        - NameDesc
      style: form
    PathScopeUUID:
      description: The Scope UUID.
      example: 4688a07a-0cbc-4597-8c87-538e744bc90d
      explode: false
      in: path
      name: scope_uuid
      required: true
      schema:
        type: string
      style: simple
    BrokerPathProjectUUID:
      description: プロジェクトのUUID
      example: c78ce0c1-eb57-4f93-a087-ee3b7cee5e06
      explode: false
      in: path
      name: project_uuid
      required: true
      schema:
        type: string
      style: simple
    DataPointsTargetName:
      description: |-
        どの計測またはどのエッジのデータポイントを取得するかを、以下のいずれかを使って指定します：
        - 計測UUID
        - エッジUUID
        - エッジの名前

        最初に、指定されたnameに一致する計測UUIDがあるかが検索されます。なければ一致するエッジUUIDがあるかが検索され、それもなければ一致するエッジの名前があるかが検索されます。
      example: 8f40b21c-f2c4-4fa5-8fe3-325491a59597
      explode: true
      in: query
      name: name
      required: true
      schema:
        type: string
      style: form
    DataPointsStart:
      description: |-
        取得対象範囲の始点。以下のいずれかの形式で指定します。
          - rfc3339(ex 2019-10-29T03:04:05.341268Z)
          - UNIX時刻（マイクロ秒）(**Deprecated**)
      example: 2019-10-29T03:04:05.123456Z
      explode: true
      in: query
      name: start
      required: false
      schema:
        type: string
      style: form
    DataPointsEnd:
      description: |-
        取得対象範囲の終点。以下のいずれかの形式で指定します。
          - rfc3339(ex 2019-10-29T03:04:05.341268Z)
          - UNIX時刻（マイクロ秒）(**Deprecated**)
      example: 2019-10-29T03:04:05.234567Z
      explode: true
      in: query
      name: end
      required: false
      schema:
        type: string
      style: form
    QueryLabel:
      description: 信号定義のラベル
      example: label
      explode: true
      in: query
      name: label
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    QueryPeriod:
      description: |-
        データポイントを指定した間隔（マイクロ秒）に間引きます。（ **Experimental** ）

        指定された間隔ごとに最新のデータポイントを残し、それ以外を除去します。 また、指定された間隔になるようにデータポイントの時刻を揃えます。
        ```
         --1--2----3---4--5---6-7--89-a---b-c---d--e--> period指定なし
         |     |     |     |     |     |     |     |
         |     |     |     |     |     |     |     |
         2-----3-----5-----7-----a-----c-----d-----e--> period指定あり

         |<--->| period
        ```
      example: 10000
      explode: true
      in: query
      name: period
      required: false
      schema:
        format: int64
        type: integer
      style: form
    QueryStart:
      description: 取得対象範囲の始点（マイクロ秒単位のUNIX時刻）
      example: 1505797626000000
      explode: true
      in: query
      name: start
      required: false
      schema:
        format: int64
        type: integer
      style: form
    QueryEnd:
      description: 取得対象範囲の終点（マイクロ秒単位のUNIX時刻）
      example: 1505798226123456
      explode: true
      in: query
      name: end
      required: false
      schema:
        format: int64
        type: integer
      style: form
    QueryEdgeUUID:
      description: エッジのUUID
      example: 24dbdc29-165f-4919-b2ce-7a335282bde2
      explode: true
      in: query
      name: edge_uuid
      required: false
      schema:
        type: string
      style: form
    pathMeasUUID:
      description: 計測のUUID
      example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
      explode: false
      in: path
      name: measurement_uuid
      required: true
      schema:
        type: string
      style: simple
    page:
      description: 取得するページの番号
      example: 1
      explode: true
      in: query
      name: page
      required: false
      schema:
        format: int32
        type: integer
      style: form
    order:
      description: 並べ替えの順序
      example: asc
      explode: true
      in: query
      name: order
      required: false
      schema:
        enum:
        - asc
        - desc
        type: string
      style: form
    pathMeasBaseTimeType:
      description: 基準時刻のタイプ
      example: ntp
      explode: false
      in: path
      name: type
      required: true
      schema:
        enum:
        - edge_rtc
        - ntp
        - gps
        - api_first_received
        - volatile
        - manual
        type: string
      style: simple
    limit:
      description: 1回のリクエストで取得する件数
      example: 1000
      explode: true
      in: query
      name: limit
      required: false
      schema:
        format: int32
        type: integer
      style: form
    PathMeasSequenceGroupUUID:
      description: 計測シーケンスのUUID
      example: 0b849907-9f04-4c87-b176-b73fb527e935
      explode: false
      in: path
      name: sequences_uuid
      required: true
      schema:
        type: string
      style: simple
    PathMeasurementJobUUID:
      description: ジョブのUUID
      example: ddba7729-3a53-42bb-a4cf-6d19a3e66deb
      explode: false
      in: path
      name: job_uuid
      required: true
      schema:
        type: string
      style: simple
    QueryTag:
      description: |-
        タグのキーと値を使って条件を指定し、条件に一致する計測マーカーを取得します。
        キーのみを指定した場合は、指定されたキーを持つ計測マーカーを取得します。 キーと値を指定した場合は、指定されたキーを持ち、その値として指定された値を含む計測マーカーを取得します。
        `tag.<key>=<value>` 条件は複数個指定することができ、OR条件で使用されます。 ただし `!tag.<key>` と組み合わせた場合、  `!tag.<key>` が優先されます。

        例:

            | measurement marker | tag (key: value) |
            | ------------------ | ---------------- |
            | 1                  | a: value1        |
            |                    | c: value2        |
            |                    | e: 1             |

            | 2                  | a: b             |
            |                    | c: d             |

            | 3                  | a: b             |

          -  `?tag.e=` の場合、計測マーカー1番が取得されます。
          -  `?!tag.c=` の場合、計測マーカー3番が取得されます。
          -  `?tag.a=&!tag.e=` の場合、計測マーカー2、3番が取得されます。
          -  `?tag.a=val&tag.c=d` の場合、計測マーカー1、2番が取得されます。
      example: include_tag_value
      explode: true
      in: query
      name: tag.<key>
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    QueryNotTag:
      description: |-
        タグのキーを使って条件を指定し、条件に一致する計測キャプチャを除外します。
        タグの値は無視されます。
        `!tag.<key>` を複数個指定した場合、AND条件となります。 また、 `tag.<key>=<value>` と組み合わせて使用した場合、 `tag.<key>=<value>`  よりも `!tag.<key>` が優先されます。
        例: 上の `tag.<key>` の説明を参照してください。
      example: exclude_tag_value
      explode: true
      in: query
      name: '!tag.<key>'
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    PathMeasurementMarkerUUID:
      description: 計測マーカーのUUID
      example: 27a841d8-78c0-4e5e-b0ee-ec1fafd90ef6
      explode: false
      in: path
      name: measurement_marker_uuid
      required: true
      schema:
        type: string
      style: simple
    MeasPathProjectUUID:
      description: プロジェクトのUUID
      example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
      explode: false
      in: path
      name: project_uuid
      required: true
      schema:
        type: string
      style: simple
    QueryLimitMedia:
      description: 1回のリクエストで取得する件数
      example: 1000
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: number
      style: form
    QueryPageMedia:
      description: 取得するページ番号
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        minimum: 1
        type: integer
      style: form
    QueryOrderMedia:
      description: 並べ替えの順序
      example: asc
      explode: true
      in: query
      name: order
      required: false
      schema:
        enum:
        - asc
        - desc
        type: string
      style: form
    PathMeasUUIDMedia:
      description: 計測のUUID
      example: f967c530-f562-410a-991b-031c43142778
      explode: false
      in: path
      name: meas_uuid
      required: true
      schema:
        example: f967c530-f562-410a-991b-031c43142778
        type: string
      style: simple
    PathChannelMedia:
      description: チャンネル
      example: 1
      explode: false
      in: path
      name: channel
      required: true
      schema:
        example: 1
        type: integer
      style: simple
    QueryPerPageMedia:
      description: 1回のリクエストで取得する件数
      explode: true
      in: query
      name: per_page
      required: false
      schema:
        default: 100
        maximum: 1000
        type: integer
      style: form
    PathVideoUUID:
      description: 変換元の動画（video）のUUID
      example: 68b91013-47e9-4e68-a965-892549587dfa
      explode: false
      in: path
      name: video_uuid
      required: true
      schema:
        type: string
      style: simple
    PathJpegUUID:
      description: JPEGのUUID
      example: 3279bdfb-9079-417e-8f94-ee8126da5933
      explode: false
      in: path
      name: jpeg_uuid
      required: true
      schema:
        example: 3279bdfb-9079-417e-8f94-ee8126da5933
        type: string
      style: simple
    PathMP4UUID:
      description: MP4のUUID
      example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
      explode: false
      in: path
      name: mp4_uuid
      required: true
      schema:
        example: 34cd9cc6-4c62-4310-bbfd-04541f59ca0f
        type: string
      style: simple
    PathEdgeUUIDMedia:
      description: エッジのUUID
      example: 421fecd4-646b-4ab8-a715-c4b888964b11
      explode: false
      in: path
      name: edge_uuid
      required: true
      schema:
        example: 421fecd4-646b-4ab8-a715-c4b888964b11
        type: string
      style: simple
    MediaPathProjectUUID:
      description: プロジェクトのUUID
      example: 75c55669-b2ab-4f14-a871-8571c6afa1ef
      explode: false
      in: path
      name: project_uuid
      required: true
      schema:
        type: string
      style: simple
  schemas:
    OAuth2ClientGrantType:
      description: グラントタイプ
      enum:
      - authorization_code
      - client_credentials
      - refresh_token
      type: string
    OAuth2ClientResponseType:
      description: グラントタイプ
      enum:
      - code
      type: string
    OAuth2Client:
      example:
        grant_types:
        - null
        - null
        name: My Client
        audiences:
        - audiences
        - audiences
        tls_client_auth_subject_dn: "SERIALNUMBER=0001,CN=CommonName,OU=OrganizationalUnit,O=Organization,POSTALCODE=PostalCode,STREET=StreetAddress,L=Locality,ST=Province,C=COUNTRY"
        redirect_uris:
        - http://localhost:8080/
        - http://localhost:8080/
        scopes:
        - meas:r
        - meas:r
        client_id: 4b54d475-0607-441e-b252-944a97337a9e
        token_endpoint_auth_method: none
        response_types:
        - null
        - null
      properties:
        client_id:
          description: OAuth2クライアントID
          example: 4b54d475-0607-441e-b252-944a97337a9e
          type: string
        name:
          description: 名前
          example: My Client
          type: string
        grant_types:
          description: グラントタイプ
          items:
            $ref: '#/components/schemas/OAuth2ClientGrantType'
          type: array
        token_endpoint_auth_method:
          description: トークンエンドポイントの認証方式
          enum:
          - none
          - client_secret_post
          - client_secret_basic
          - tls_client_auth
          type: string
        redirect_uris:
          description: 認可後のリダイレクト先URI
          items:
            example: http://localhost:8080/
            type: string
          type: array
        response_types:
          description: レスポンスタイプ
          items:
            $ref: '#/components/schemas/OAuth2ClientResponseType'
          type: array
        scopes:
          description: スコープ
          items:
            example: meas:r
            type: string
          type: array
        audiences:
          description: オーディエンス
          items:
            example: audiences
            type: string
          type: array
        tls_client_auth_subject_dn:
          description: TLSクライアント認証のサブジェクトDN
          example: "SERIALNUMBER=0001,CN=CommonName,OU=OrganizationalUnit,O=Organization,POSTALCODE=PostalCode,STREET=StreetAddress,L=Locality,ST=Province,C=COUNTRY"
          type: string
      required:
      - audiences
      - client_id
      - grant_types
      - name
      - redirect_uris
      - response_types
      - scopes
      - tls_client_auth_subject_dn
      - token_endpoint_auth_method
      - type
      type: object
    AuthPage:
      example:
        next: true
        next_page: 1
        total_count: 1
        prev: true
        total_page: 1
        prev_page: 1
      properties:
        next:
          description: 次のページがあるかどうか
          example: true
          type: boolean
        prev:
          description: 前のページがあるかどうか
          example: true
          type: boolean
        next_page:
          description: 取得対象の次のページ番号。`next` がtrueの場合のみ表示。
          example: 1
          format: int64
          type: integer
        prev_page:
          description: 取得対象の前のページ番号。`next` がtrueの場合のみ表示。
          example: 1
          format: int64
          type: integer
        total_page:
          description: 取得対象の総ページ数
          example: 1
          format: int64
          type: integer
        total_count:
          description: 取得対象の総件数
          example: 1
          format: int64
          type: integer
      required:
      - next
      - prev
      - total_count
      - total_page
      type: object
    OAuth2Clients:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - grant_types:
          - null
          - null
          name: My Client
          audiences:
          - audiences
          - audiences
          tls_client_auth_subject_dn: "SERIALNUMBER=0001,CN=CommonName,OU=OrganizationalUnit,O=Organization,POSTALCODE=PostalCode,STREET=StreetAddress,L=Locality,ST=Province,C=COUNTRY"
          redirect_uris:
          - http://localhost:8080/
          - http://localhost:8080/
          scopes:
          - meas:r
          - meas:r
          client_id: 4b54d475-0607-441e-b252-944a97337a9e
          token_endpoint_auth_method: none
          response_types:
          - null
          - null
        - grant_types:
          - null
          - null
          name: My Client
          audiences:
          - audiences
          - audiences
          tls_client_auth_subject_dn: "SERIALNUMBER=0001,CN=CommonName,OU=OrganizationalUnit,O=Organization,POSTALCODE=PostalCode,STREET=StreetAddress,L=Locality,ST=Province,C=COUNTRY"
          redirect_uris:
          - http://localhost:8080/
          - http://localhost:8080/
          scopes:
          - meas:r
          - meas:r
          client_id: 4b54d475-0607-441e-b252-944a97337a9e
          token_endpoint_auth_method: none
          response_types:
          - null
          - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/OAuth2Client'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      - page
      title: Roles
      type: object
    CheckHTTPAuthorizationRequest:
      description: |-
        アクセス制御可能かどうかを判定します。
        ###  サブジェクト指定なしの場合
        リクエストのスコープのみでアクセス判定を行います。
        ###  サブジェクト指定ありの場合
        パスを分類し、分類した結果によって処理が変わります。
        ####  パスがプロジェクトコンテキストの場合
        サブジェクトがプロジェクトに所属しているかを確認し、所属している場合は、サブジェクトがメンバーの場合そのプロジェクトにおけるスコープからアクセス判定を行います。サブジェクトがエッジの場合はリクエストのスコープからアクセス判定を行います。

        ###  パスがグループコンテキストの場合
        サブジェクトがプロジェクトに所属しているかを確認し、所属している場合は、そのプロジェクトにおけるスコープからアクセス判定を行います。
        ###  パスがその他の場合
        リクエストのスコープからアクセス判定を行います。
      example:
        path: /resource/path
        method: POST
        subject: eb0398f0-3631-470a-abed-0ac3763cf90d
        scopes:
        - scope1
      properties:
        subject:
          description: 認証主体を指定します。通常アクセスユーザーのUUIDかアクセスエッジのUUIDを指定します。
          example: eb0398f0-3631-470a-abed-0ac3763cf90d
          type: string
        scopes:
          description: スコープを指定します。前述の説明を参照ください。
          example:
          - scope1
          items:
            type: string
          type: array
        path:
          example: /resource/path
          type: string
        method:
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          example: POST
          type: string
      required:
      - method
      - path
      - scopes
      title: CheckAuthorizationRequest
      type: object
    CheckAuthorizationResponse:
      example:
        result: true
      properties:
        result:
          example: true
          type: boolean
      required:
      - result
      title: CheckAuthorizationResponse
      type: object
    UpdateOAuth2ClientRequest:
      example:
        name: My Client
        redirect_uris:
        - http://localhost:8080
        - http://localhost:8080
      properties:
        name:
          description: 名前
          example: My Client
          maxLength: 256
          minLength: 1
          type: string
        redirect_uris:
          description: 認可後のリダイレクト先URI
          items:
            description: グラントタイプが `authorization_code` のときに必要です。
            example: http://localhost:8080
            maxLength: 256
            type: string
          maximum: 10
          type: array
      type: object
    EdgeOwner:
      example:
        user_uuid: 84693d9e-0f1a-457b-b417-a7c697cffdce
      properties:
        user_uuid:
          description: 所有者ユーザーのUUID
          example: 84693d9e-0f1a-457b-b417-a7c697cffdce
          type: string
      required:
      - user_uuid
      type: object
    Edge:
      example:
        owner:
          user_uuid: 84693d9e-0f1a-457b-b417-a7c697cffdce
        updated_at: 2000-01-01T00:00:00Z
        name: my-edge
        nickname: My Edge
        description: Description
        created_at: 2000-01-01T00:00:00Z
        client_secret: secret
        uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        uuid:
          description: エッジのUUID
          example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
          type: string
        name:
          description: エッジの名前
          example: my-edge
          type: string
        nickname:
          description: エッジの表示名
          example: My Edge
          type: string
        description:
          description: エッジの説明
          example: Description
          type: string
        owner:
          $ref: '#/components/schemas/EdgeOwner'
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        client_secret:
          description: エッジのクライアントシークレット
          example: secret
          type: string
      required:
      - created_at
      - description
      - name
      - nickname
      - updated_at
      - uuid
      type: object
    Edges:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - owner:
            user_uuid: 84693d9e-0f1a-457b-b417-a7c697cffdce
          updated_at: 2000-01-01T00:00:00Z
          name: my-edge
          nickname: My Edge
          description: Description
          created_at: 2000-01-01T00:00:00Z
          client_secret: secret
          uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        - owner:
            user_uuid: 84693d9e-0f1a-457b-b417-a7c697cffdce
          updated_at: 2000-01-01T00:00:00Z
          name: my-edge
          nickname: My Edge
          description: Description
          created_at: 2000-01-01T00:00:00Z
          client_secret: secret
          uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        items:
          items:
            $ref: '#/components/schemas/Edge'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      - page
      title: Edges
      type: object
    CreateEdgeRequest:
      example:
        name: edge
        nickname: nickname
        description: description
      properties:
        name:
          description: エッジの名前
          example: edge
          maxLength: 255
          minLength: 1
          pattern: "^[0-9a-zA-Z-_]*$"
          type: string
        nickname:
          description: エッジの表示名
          example: nickname
          maxLength: 511
          type: string
        description:
          description: エッジの説明
          example: description
          maxLength: 65535
          type: string
      required:
      - name
      type: object
    PatchEdgeRequest:
      example:
        name: edge_name
        nickname: nickname
        description: description
      properties:
        name:
          description: エッジの名前
          example: edge_name
          maxLength: 255
          minLength: 1
          pattern: "^[0-9a-zA-Z-_]*$"
          type: string
        nickname:
          description: エッジの表示名
          example: nickname
          maxLength: 511
          type: string
        description:
          description: エッジの説明
          example: description
          maxLength: 65535
          type: string
      type: object
    AssignOwnerRequest:
      example:
        user_uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
      properties:
        user_uuid:
          description: 所有者とするユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
      required:
      - user_uuid
      type: object
    ErrorProblem:
      properties:
        type:
          description: エラーのタイプ
          enum:
          - about:blank
          - invalid_request
          - conflict
          - forbidden
          - account_locked
          - exceeded_max_groups_count
          - exceeded_max_projects_count_per_group
          - conflict_project_edge_uuid
          - conflict_project_edge_nickname
          type: string
        title:
          description: エラーのタイトル
          type: string
        properties:
          description: 無効なパラメーターについての情報
          type: object
      required:
      - title
      - type
      type: object
    RevokeTokenRequest:
      properties:
        client_id:
          description: OAuth2クライアントID
          type: string
        token_type_hint:
          default: refresh_token
          description: OAuth2トークンタイプについてのヒント
          enum:
          - access_token
          - refresh_token
          type: string
        token:
          description: |-
            無効化したいリフレッシュトークンまたはアクセストークン。
            指定を省略した場合、サーバーは、cookieの `_bearer_token` に指定されたアクセストークン、または、Authorizationヘッダーに指定されたアクセストークン（ `Bearer` トークン）を無効化します。
          type: string
      required:
      - client_id
      type: object
    JSONWebKey:
      description: "See [JSON Web Key (JWK)](https://datatracker.ietf.org/doc/html/rfc7517)"
      properties:
        use:
          type: string
        kty:
          type: string
        kid:
          type: string
        crv:
          type: string
        alg:
          type: string
        k:
          format: byte
          type: string
        x:
          format: byte
          type: string
        "y":
          format: byte
          type: string
        "n":
          format: byte
          type: string
        e:
          format: byte
          type: string
        d:
          format: byte
          type: string
        p:
          format: byte
          type: string
        q:
          format: byte
          type: string
        dp:
          format: byte
          type: string
        dq:
          format: byte
          type: string
        qi:
          format: byte
          type: string
        x5c:
          items:
            type: string
          type: array
        x5u:
          format: url
          type: string
        x5t:
          type: string
        x5t#S256:
          type: string
      type: object
    OAuth2JWKs:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/JSONWebKey'
          type: array
      type: object
    UserEmail:
      example:
        address: intdash@example.com
        updated_at: 2000-01-01T00:00:00Z
        verified: false
        created_at: 2000-01-01T00:00:00Z
        id: 1
      properties:
        id:
          description: メールアドレスのID
          example: 1
          format: int64
          type: integer
        address:
          description: メールアドレス
          example: intdash@example.com
          type: string
        verified:
          description: '`true` の場合、確認メールによるメールアドレス確認が済んでいます。'
          example: false
          type: boolean
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - address
      - created_at
      - id
      - updated_at
      - verified
      type: object
    UserPassword:
      example:
        attempt_count: 1
        temporary_password: password
        updated_at: 2000-01-01T00:00:00Z
        is_temporary: false
        last_attempt_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        expired_at: 2000-01-01T00:00:00Z
      properties:
        attempt_count:
          description: ログイン失敗回数。ログインに成功すると0にリセットされます。
          example: 1
          format: int64
          type: integer
        is_temporary:
          description: '`true` の場合、このユーザーのパスワードは一時パスワードです。'
          example: false
          type: boolean
        temporary_password:
          description: 一時パスワード
          example: password
          type: string
        last_attempt_at:
          description: 最終ログイン試行日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        expired_at:
          description: パスワードの有効期限
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - attempt_count
      - created_at
      - is_temporary
      - last_attempt_at
      - updated_at
      title: UserPassword
      type: object
    User:
      example:
        emails:
        - address: intdash@example.com
          updated_at: 2000-01-01T00:00:00Z
          verified: false
          created_at: 2000-01-01T00:00:00Z
          id: 1
        - address: intdash@example.com
          updated_at: 2000-01-01T00:00:00Z
          verified: false
          created_at: 2000-01-01T00:00:00Z
          id: 1
        password:
          attempt_count: 1
          temporary_password: password
          updated_at: 2000-01-01T00:00:00Z
          is_temporary: false
          last_attempt_at: 2000-01-01T00:00:00Z
          created_at: 2000-01-01T00:00:00Z
          expired_at: 2000-01-01T00:00:00Z
        last_sign_in_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
        roles:
        - af22c56b-6b3e-4807-a165-07e9dbd7e25b
        - af22c56b-6b3e-4807-a165-07e9dbd7e25b
        name: intdash
        nickname: intdash-nickname
        description: description
        is_super: false
        created_at: 2000-01-01T00:00:00Z
        disabled: false
        uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
      properties:
        uuid:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        name:
          description: ユーザーの名前
          example: intdash
          type: string
        nickname:
          description: ユーザーの表示名
          example: intdash-nickname
          type: string
        disabled:
          description: |-
            * `true`: このユーザーは無効化されています
            * `false` : このユーザーは有効です。
          example: false
          type: boolean
        description:
          description: ユーザーの説明
          example: description
          type: string
        is_super:
          description: '`true` の場合、このユーザーはスーパーユーザーです。'
          example: false
          type: boolean
        emails:
          items:
            $ref: '#/components/schemas/UserEmail'
          type: array
        last_sign_in_at:
          description: 最後にログインした日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        roles:
          description: 割り当てられたロールのUUID
          items:
            example: af22c56b-6b3e-4807-a165-07e9dbd7e25b
            type: string
          type: array
        password:
          $ref: '#/components/schemas/UserPassword'
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - description
      - disabled
      - emails
      - is_super
      - last_sign_in_at
      - name
      - nickname
      - password
      - roles
      - updated_at
      - uuid
      type: object
    PatchUserRequest:
      example:
        name: username
        nickname: nickname
        description: user description
      properties:
        name:
          description: ユーザーの名前
          example: username
          maxLength: 256
          minLength: 1
          pattern: "^[0-9a-zA-Z-_]*$"
          type: string
        nickname:
          description: ユーザーの表示名
          example: nickname
          maxLength: 512
          type: string
        description:
          description: ユーザーの説明
          example: user description
          maxLength: 65536
          type: string
      type: object
    CreateOAuth2ClientClientCredentialsRequest:
      properties:
        name:
          description: 名前
          example: My Client
          maxLength: 256
          minLength: 1
          type: string
        grant_type:
          description: グラントタイプ
          enum:
          - authorization_code
          - client_credentials
          type: string
        token_endpoint_auth_method:
          default: client_secret_post
          description: トークンエンドポイントの認証方式
          enum:
          - client_secret_post
          - tls_client_auth
          type: string
        tls_client_auth_subject_dn:
          description: TLSクライアント認証のサブジェクトDN
          example: "SERIALNUMBER=0001,CN=CommonName,OU=OrganizationalUnit,O=Organization,POSTALCODE=PostalCode,STREET=StreetAddress,L=Locality,ST=Province,C=COUNTRY"
          maxLength: 512
          type: string
      required:
      - grant_type
      - name
      - token_endpoint_auth_method
      type: object
    CreateOAuth2ClientAuthorizationCodeRequest:
      allOf:
      - $ref: '#/components/schemas/CreateOAuth2ClientAuthorizationCodeRequest_allOf'
      - $ref: '#/components/schemas/CreateOAuth2ClientClientCredentialsRequest'
    CreateMyOAuth2ClientRequest:
      discriminator:
        mapping:
          authorization_code: '#/components/schemas/CreateOAuth2ClientAuthorizationCodeRequest'
          client_credentials: '#/components/schemas/CreateOAuth2ClientClientCredentialsRequest'
        propertyName: grant_type
      oneOf:
      - $ref: '#/components/schemas/CreateOAuth2ClientAuthorizationCodeRequest'
      - $ref: '#/components/schemas/CreateOAuth2ClientClientCredentialsRequest'
    OAuth2ClientWithSecret:
      allOf:
      - $ref: '#/components/schemas/OAuth2Client'
      - $ref: '#/components/schemas/OAuth2ClientWithSecret_allOf'
    CheckMeHTTPAuthorizationRequest:
      description: 認証ユーザー自身がアクセス可能かどうかを判定します。
      example:
        path: /resource/path
        method: POST
      properties:
        path:
          example: /resource/path
          type: string
        method:
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          example: POST
          type: string
      required:
      - method
      - path
      title: CheckAuthorizationRequest
      type: object
    Users:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - emails:
          - address: intdash@example.com
            updated_at: 2000-01-01T00:00:00Z
            verified: false
            created_at: 2000-01-01T00:00:00Z
            id: 1
          - address: intdash@example.com
            updated_at: 2000-01-01T00:00:00Z
            verified: false
            created_at: 2000-01-01T00:00:00Z
            id: 1
          password:
            attempt_count: 1
            temporary_password: password
            updated_at: 2000-01-01T00:00:00Z
            is_temporary: false
            last_attempt_at: 2000-01-01T00:00:00Z
            created_at: 2000-01-01T00:00:00Z
            expired_at: 2000-01-01T00:00:00Z
          last_sign_in_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
          roles:
          - af22c56b-6b3e-4807-a165-07e9dbd7e25b
          - af22c56b-6b3e-4807-a165-07e9dbd7e25b
          name: intdash
          nickname: intdash-nickname
          description: description
          is_super: false
          created_at: 2000-01-01T00:00:00Z
          disabled: false
          uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        - emails:
          - address: intdash@example.com
            updated_at: 2000-01-01T00:00:00Z
            verified: false
            created_at: 2000-01-01T00:00:00Z
            id: 1
          - address: intdash@example.com
            updated_at: 2000-01-01T00:00:00Z
            verified: false
            created_at: 2000-01-01T00:00:00Z
            id: 1
          password:
            attempt_count: 1
            temporary_password: password
            updated_at: 2000-01-01T00:00:00Z
            is_temporary: false
            last_attempt_at: 2000-01-01T00:00:00Z
            created_at: 2000-01-01T00:00:00Z
            expired_at: 2000-01-01T00:00:00Z
          last_sign_in_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
          roles:
          - af22c56b-6b3e-4807-a165-07e9dbd7e25b
          - af22c56b-6b3e-4807-a165-07e9dbd7e25b
          name: intdash
          nickname: intdash-nickname
          description: description
          is_super: false
          created_at: 2000-01-01T00:00:00Z
          disabled: false
          uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
      properties:
        items:
          items:
            $ref: '#/components/schemas/User'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      - page
      title: Users
      type: object
    CreateUserRequest:
      example:
        role_uuids:
        - af22c56b-6b3e-4807-a165-07e9dbd7e25b
        - af22c56b-6b3e-4807-a165-07e9dbd7e25b
        name: intdash
        nickname: nickname
        description: description
        email: intdash@example.com
      properties:
        name:
          description: ユーザーの名前
          example: intdash
          maxLength: 256
          minLength: 1
          pattern: "^[0-9a-zA-Z-_]*$"
          type: string
        nickname:
          description: ユーザーの表示名
          example: nickname
          maxLength: 512
          type: string
        description:
          description: ユーザーの説明
          example: description
          maxLength: 65536
          type: string
        role_uuids:
          description: ロールのUUID。指定したロールがユーザーに割り当てられます。
          items:
            example: af22c56b-6b3e-4807-a165-07e9dbd7e25b
            type: string
          type: array
        email:
          description: ユーザーのメールアドレス
          example: intdash@example.com
          maxLength: 256
          minLength: 1
          type: string
      required:
      - name
      - role_uuids
      type: object
    CreateEmailRequest:
      example:
        address: intdash@example.com
      properties:
        address:
          description: メールアドレス
          example: intdash@example.com
          maxLength: 256
          minLength: 1
          type: string
      required:
      - address
      type: object
    PatchEmailRequest:
      example:
        address: intdash@example.com
      properties:
        address:
          description: メールアドレス
          example: intdash@example.com
          maxLength: 256
          minLength: 1
          type: string
      required:
      - address
      type: object
    UserEmailVerification:
      example:
        email_id: 1
        updated_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        expired_at: 2100-01-01T00:00:00Z
      properties:
        email_id:
          description: メールアドレスのID
          example: 1
          format: int64
          type: integer
        expired_at:
          description: 有効期限
          example: 2100-01-01T00:00:00Z
          format: date-time
          type: string
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - email_id
      - expired_at
      - updated_at
      type: object
    UpdateEmailVerifiedRequest:
      example:
        verification_token: verification.token
      properties:
        verification_token:
          description: メールアドレス確認用トークン
          example: verification.token
          maxLength: 4096
          minLength: 1
          type: string
      required:
      - verification_token
      type: object
    ChangePasswordRequest:
      example:
        password: new-password
        old_password: old-password
        recovery_token: recovery.token
      properties:
        password:
          description: 新しいパスワード
          example: new-password
          maxLength: 512
          minLength: 8
          pattern: "[a-zA-Z0-9!\"#$%&'()*+,-./:;<=>?@\\{\\}|\\[\\]]*"
          type: string
        old_password:
          description: 現在のパスワード
          example: old-password
          maxLength: 512
          type: string
        recovery_token:
          description: リカバリートークン。パスワード再設定用の確認メールに含まれています。
          example: recovery.token
          type: string
      required:
      - password
      title: ChangePasswordRequest
      type: object
    CheckPasswordResult:
      example:
        valid: false
        errors:
        - type: min_length
          message: messsage
          value: "10"
        - type: min_length
          message: messsage
          value: "10"
      properties:
        valid:
          description: '`true` の場合、ポリシーに適合しています。'
          example: false
          type: boolean
        errors:
          description: ポリシー不適合の場合、その詳細
          items:
            $ref: '#/components/schemas/CheckPasswordResult_errors_inner'
          type: array
      required:
      - valid
      type: object
    AllowedEndpoint:
      example:
        path: /resources
        method: GET
      properties:
        path:
          description: リソースパス。グロブを使って指定可能です。
          example: /resources
          type: string
        method:
          description: HTTPメソッド。グロブを使って指定可能です。
          example: GET
          type: string
      required:
      - method
      - path
      title: AllowedEndpoint
      type: object
    ISCPMessageType:
      description: iSCPメッセージタイプ
      enum:
      - upstream_spec_request
      - downstream_spec_request
      - unit
      - eos
      - sos
      - ping
      example: eos
      type: string
    AllowedISCPMessage:
      example:
        type: eos
      properties:
        type:
          $ref: '#/components/schemas/ISCPMessageType'
      required:
      - type
      title: AllowedISCPMessage
      type: object
    DeniedEndpoint:
      example:
        path: /denied_resources
        method: GET
      properties:
        path:
          description: リソースパス。グロブを使って指定可能です。
          example: /denied_resources
          type: string
        method:
          description: HTTPメソッド。グロブを使って指定可能です。
          example: GET
          type: string
      required:
      - method
      - path
      title: DeniedEndpoint
      type: object
    Scope:
      example:
        allowed_endpoints:
        - path: /resources
          method: GET
        - path: /resources
          method: GET
        updated_at: 2000-01-01T00:00:00Z
        denied_endpoints:
        - path: /denied_resources
          method: GET
        - path: /denied_resources
          method: GET
        allowed_iscp_messages:
        - type: eos
        - type: eos
        name: meas:r
        created_at: 2000-01-01T00:00:00Z
        uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
      properties:
        uuid:
          description: スコープのUUID
          example: 4688a07a-0cbc-4597-8c87-538e744bc90d
          type: string
        name:
          description: スコープの名前
          example: meas:r
          type: string
        allowed_endpoints:
          description: 許可されているエンドポイント
          items:
            $ref: '#/components/schemas/AllowedEndpoint'
          type: array
        allowed_iscp_messages:
          description: 許可されているiSCPメッセージ
          items:
            $ref: '#/components/schemas/AllowedISCPMessage'
          type: array
        denied_endpoints:
          description: 拒否されているエンドポイント
          items:
            $ref: '#/components/schemas/DeniedEndpoint'
          type: array
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - allowed_endpoints
      - allowed_iscp_messages
      - created_at
      - denied_endpoints
      - name
      - updated_at
      - uuid
      type: object
    Role:
      example:
        updated_at: 2000-01-01T00:00:00Z
        name: member
        created_at: 2000-01-01T00:00:00Z
        scopes:
        - allowed_endpoints:
          - path: /resources
            method: GET
          - path: /resources
            method: GET
          updated_at: 2000-01-01T00:00:00Z
          denied_endpoints:
          - path: /denied_resources
            method: GET
          - path: /denied_resources
            method: GET
          allowed_iscp_messages:
          - type: eos
          - type: eos
          name: meas:r
          created_at: 2000-01-01T00:00:00Z
          uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
        - allowed_endpoints:
          - path: /resources
            method: GET
          - path: /resources
            method: GET
          updated_at: 2000-01-01T00:00:00Z
          denied_endpoints:
          - path: /denied_resources
            method: GET
          - path: /denied_resources
            method: GET
          allowed_iscp_messages:
          - type: eos
          - type: eos
          name: meas:r
          created_at: 2000-01-01T00:00:00Z
          uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
        uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        uuid:
          description: ロールのUUID
          example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
          title: UUID
          type: string
        name:
          description: ロールの名前
          example: member
          type: string
        scopes:
          description: ロールのスコープ
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - name
      - scopes
      - updated_at
      - uuid
      type: object
    Roles:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - updated_at: 2000-01-01T00:00:00Z
          name: member
          created_at: 2000-01-01T00:00:00Z
          scopes:
          - allowed_endpoints:
            - path: /resources
              method: GET
            - path: /resources
              method: GET
            updated_at: 2000-01-01T00:00:00Z
            denied_endpoints:
            - path: /denied_resources
              method: GET
            - path: /denied_resources
              method: GET
            allowed_iscp_messages:
            - type: eos
            - type: eos
            name: meas:r
            created_at: 2000-01-01T00:00:00Z
            uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          - allowed_endpoints:
            - path: /resources
              method: GET
            - path: /resources
              method: GET
            updated_at: 2000-01-01T00:00:00Z
            denied_endpoints:
            - path: /denied_resources
              method: GET
            - path: /denied_resources
              method: GET
            allowed_iscp_messages:
            - type: eos
            - type: eos
            name: meas:r
            created_at: 2000-01-01T00:00:00Z
            uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        - updated_at: 2000-01-01T00:00:00Z
          name: member
          created_at: 2000-01-01T00:00:00Z
          scopes:
          - allowed_endpoints:
            - path: /resources
              method: GET
            - path: /resources
              method: GET
            updated_at: 2000-01-01T00:00:00Z
            denied_endpoints:
            - path: /denied_resources
              method: GET
            - path: /denied_resources
              method: GET
            allowed_iscp_messages:
            - type: eos
            - type: eos
            name: meas:r
            created_at: 2000-01-01T00:00:00Z
            uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          - allowed_endpoints:
            - path: /resources
              method: GET
            - path: /resources
              method: GET
            updated_at: 2000-01-01T00:00:00Z
            denied_endpoints:
            - path: /denied_resources
              method: GET
            - path: /denied_resources
              method: GET
            allowed_iscp_messages:
            - type: eos
            - type: eos
            name: meas:r
            created_at: 2000-01-01T00:00:00Z
            uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        items:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      - page
      title: Roles
      type: object
    UserAPIToken:
      example:
        last_used_at: 2000-01-01T00:00:00Z
        updated_at: 2000-01-01T00:00:00Z
        name: for test
        created_at: 2000-01-01T00:00:00Z
        id: 1
        scopes:
        - allowed_endpoints:
          - path: /resources
            method: GET
          - path: /resources
            method: GET
          updated_at: 2000-01-01T00:00:00Z
          denied_endpoints:
          - path: /denied_resources
            method: GET
          - path: /denied_resources
            method: GET
          allowed_iscp_messages:
          - type: eos
          - type: eos
          name: meas:r
          created_at: 2000-01-01T00:00:00Z
          uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
        - allowed_endpoints:
          - path: /resources
            method: GET
          - path: /resources
            method: GET
          updated_at: 2000-01-01T00:00:00Z
          denied_endpoints:
          - path: /denied_resources
            method: GET
          - path: /denied_resources
            method: GET
          allowed_iscp_messages:
          - type: eos
          - type: eos
          name: meas:r
          created_at: 2000-01-01T00:00:00Z
          uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
        expired_at: 2000-01-01T00:00:00Z
        token: token
      properties:
        id:
          description: APIトークンのID
          example: 1
          format: int64
          type: integer
        name:
          description: APIトークンの名前
          example: for test
          type: string
        token:
          description: APIトークン
          example: token
          type: string
        scopes:
          description: スコープ
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        last_used_at:
          description: 最後に使用された日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        expired_at:
          description: 有効期限
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - expired_at
      - id
      - last_used_at
      - name
      - scopes
      - updated_at
      type: object
    UserAPITokens:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - last_used_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
          name: for test
          created_at: 2000-01-01T00:00:00Z
          id: 1
          scopes:
          - allowed_endpoints:
            - path: /resources
              method: GET
            - path: /resources
              method: GET
            updated_at: 2000-01-01T00:00:00Z
            denied_endpoints:
            - path: /denied_resources
              method: GET
            - path: /denied_resources
              method: GET
            allowed_iscp_messages:
            - type: eos
            - type: eos
            name: meas:r
            created_at: 2000-01-01T00:00:00Z
            uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          - allowed_endpoints:
            - path: /resources
              method: GET
            - path: /resources
              method: GET
            updated_at: 2000-01-01T00:00:00Z
            denied_endpoints:
            - path: /denied_resources
              method: GET
            - path: /denied_resources
              method: GET
            allowed_iscp_messages:
            - type: eos
            - type: eos
            name: meas:r
            created_at: 2000-01-01T00:00:00Z
            uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          expired_at: 2000-01-01T00:00:00Z
          token: token
        - last_used_at: 2000-01-01T00:00:00Z
          updated_at: 2000-01-01T00:00:00Z
          name: for test
          created_at: 2000-01-01T00:00:00Z
          id: 1
          scopes:
          - allowed_endpoints:
            - path: /resources
              method: GET
            - path: /resources
              method: GET
            updated_at: 2000-01-01T00:00:00Z
            denied_endpoints:
            - path: /denied_resources
              method: GET
            - path: /denied_resources
              method: GET
            allowed_iscp_messages:
            - type: eos
            - type: eos
            name: meas:r
            created_at: 2000-01-01T00:00:00Z
            uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          - allowed_endpoints:
            - path: /resources
              method: GET
            - path: /resources
              method: GET
            updated_at: 2000-01-01T00:00:00Z
            denied_endpoints:
            - path: /denied_resources
              method: GET
            - path: /denied_resources
              method: GET
            allowed_iscp_messages:
            - type: eos
            - type: eos
            name: meas:r
            created_at: 2000-01-01T00:00:00Z
            uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
          expired_at: 2000-01-01T00:00:00Z
          token: token
      properties:
        items:
          items:
            $ref: '#/components/schemas/UserAPIToken'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      - page
      type: object
    CreateUserAPITokenRequest:
      example:
        name: for test
        expired_at: 2000-01-02T03:04:05Z
      properties:
        name:
          description: APIトークンの名前
          example: for test
          maxLength: 256
          minLength: 1
          type: string
        expired_at:
          description: 有効期限
          example: 2000-01-02T03:04:05Z
          format: date-time
          type: string
      required:
      - name
      type: object
    UpdateUserAPITokenRequest:
      example:
        name: for test
      properties:
        name:
          description: APIトークンの名前
          example: for test
          maxLength: 256
          type: string
      required:
      - name
      type: object
    Project:
      example:
        updated_at: 2000-01-01T00:00:00Z
        parent_group_uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        name: intdash
        created_at: 2000-01-01T00:00:00Z
        uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        uuid:
          description: プロジェクトのUUID
          example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
          type: string
        parent_group_uuid:
          description: 親グループのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        name:
          description: プロジェクトの名前
          example: intdash
          type: string
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - group_uuid
      - name
      - updated_at
      - uuid
      type: object
    Projects:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - updated_at: 2000-01-01T00:00:00Z
          parent_group_uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
          name: intdash
          created_at: 2000-01-01T00:00:00Z
          uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        - updated_at: 2000-01-01T00:00:00Z
          parent_group_uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
          name: intdash
          created_at: 2000-01-01T00:00:00Z
          uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        items:
          items:
            $ref: '#/components/schemas/Project'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      title: Projects
      type: object
    Group:
      example:
        updated_at: 2000-01-01T00:00:00Z
        parent_group_uuid: 76b35658-9d77-40d0-8ef8-5c3f520db30d
        name: intdash
        created_at: 2000-01-01T00:00:00Z
        uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
      properties:
        uuid:
          description: グループのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        parent_group_uuid:
          description: 親グループのUUID。nullの場合、親グループは存在しません。
          example: 76b35658-9d77-40d0-8ef8-5c3f520db30d
          nullable: true
          type: string
        name:
          description: グループの名前
          example: intdash
          type: string
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - name
      - parent_group_uuid
      - updated_at
      - uuid
      type: object
    Groups:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - updated_at: 2000-01-01T00:00:00Z
          parent_group_uuid: 76b35658-9d77-40d0-8ef8-5c3f520db30d
          name: intdash
          created_at: 2000-01-01T00:00:00Z
          uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        - updated_at: 2000-01-01T00:00:00Z
          parent_group_uuid: 76b35658-9d77-40d0-8ef8-5c3f520db30d
          name: intdash
          created_at: 2000-01-01T00:00:00Z
          uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
      properties:
        items:
          items:
            $ref: '#/components/schemas/Group'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      title: Groups
      type: object
    APITokenIntrospectionRequest:
      example:
        token: message.signature
      properties:
        token:
          description: APIトークン
          example: message.signature
          type: string
      required:
      - token
      title: APITokenIntrospectionRequest
      type: object
    APITokenIntrospectionResponse:
      example:
        tenant_id: 0
        user_uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        active: true
        created_at: 2000-01-02T03:04:05Z
        scopes:
        - allowed_endpoints:
          - path: /resources
            method: GET
          - path: /resources
            method: GET
          updated_at: 2000-01-01T00:00:00Z
          denied_endpoints:
          - path: /denied_resources
            method: GET
          - path: /denied_resources
            method: GET
          allowed_iscp_messages:
          - type: eos
          - type: eos
          name: meas:r
          created_at: 2000-01-01T00:00:00Z
          uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
        - allowed_endpoints:
          - path: /resources
            method: GET
          - path: /resources
            method: GET
          updated_at: 2000-01-01T00:00:00Z
          denied_endpoints:
          - path: /denied_resources
            method: GET
          - path: /denied_resources
            method: GET
          allowed_iscp_messages:
          - type: eos
          - type: eos
          name: meas:r
          created_at: 2000-01-01T00:00:00Z
          uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
        expired_at: 2000-01-02T03:04:05Z
      properties:
        active:
          description: '`true` の場合、このAPIトークンは有効です。'
          example: true
          type: boolean
        tenant_id:
          description: テナントID。デフォルトテナント以外を対象とする場合にのみ返されます。
          format: int64
          type: integer
        user_uuid:
          description: ユーザーのUUID
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          type: string
        scopes:
          description: APIトークンが認可されているスコープ
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        expired_at:
          description: APIトークンの有効期限
          example: 2000-01-02T03:04:05Z
          format: date-time
          type: string
        created_at:
          description: APIトークンの作成日時
          example: 2000-01-02T03:04:05Z
          format: date-time
          type: string
      required:
      - active
      type: object
    GroupName:
      description: グループの名前
      example: my-group
      maxLength: 255
      minLength: 1
      type: string
    CreateGroupRequest:
      example:
        name: my-group
      properties:
        name:
          description: グループの名前
          example: my-group
          maxLength: 255
          minLength: 1
          type: string
      required:
      - name
      type: object
    UpdateGroupRequest:
      example:
        name: my-group
      properties:
        name:
          description: グループの名前
          example: my-group
          maxLength: 255
          minLength: 1
          type: string
      type: object
    Member:
      example:
        emails:
        - address: intdash@example.com
          updated_at: 2000-01-01T00:00:00Z
          verified: false
          created_at: 2000-01-01T00:00:00Z
          id: 1
        - address: intdash@example.com
          updated_at: 2000-01-01T00:00:00Z
          verified: false
          created_at: 2000-01-01T00:00:00Z
          id: 1
        user_uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        updated_at: 2000-01-01T00:00:00Z
        is_owner: true
        role_uuids:
        - 59530a1d-4491-4b24-b6c6-121b4c24bb21
        - 59530a1d-4491-4b24-b6c6-121b4c24bb21
        name: username
        created_at: 2000-01-01T00:00:00Z
        inherited_role_uuids:
        - b344c708-40bc-4088-8868-2701c41d9dc2
        - b344c708-40bc-4088-8868-2701c41d9dc2
      properties:
        user_uuid:
          description: メンバーのユーザーUUID
          example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
          type: string
        name:
          description: メンバーの名前
          example: username
          type: string
        emails:
          items:
            $ref: '#/components/schemas/UserEmail'
          type: array
        inherited_role_uuids:
          description: 親グループから継承されたメンバーのロールUUID
          items:
            example: b344c708-40bc-4088-8868-2701c41d9dc2
            type: string
          type: array
        role_uuids:
          description: メンバーのロールUUID
          items:
            example: 59530a1d-4491-4b24-b6c6-121b4c24bb21
            type: string
          type: array
        is_owner:
          description: '`true` の場合、このメンバーはオーナーです。'
          type: boolean
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - emails
      - inherited_role_uuids
      - is_owner
      - name
      - role_uuids
      - updated_at
      - user_uuid
      type: object
    Members:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - emails:
          - address: intdash@example.com
            updated_at: 2000-01-01T00:00:00Z
            verified: false
            created_at: 2000-01-01T00:00:00Z
            id: 1
          - address: intdash@example.com
            updated_at: 2000-01-01T00:00:00Z
            verified: false
            created_at: 2000-01-01T00:00:00Z
            id: 1
          user_uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
          updated_at: 2000-01-01T00:00:00Z
          is_owner: true
          role_uuids:
          - 59530a1d-4491-4b24-b6c6-121b4c24bb21
          - 59530a1d-4491-4b24-b6c6-121b4c24bb21
          name: username
          created_at: 2000-01-01T00:00:00Z
          inherited_role_uuids:
          - b344c708-40bc-4088-8868-2701c41d9dc2
          - b344c708-40bc-4088-8868-2701c41d9dc2
        - emails:
          - address: intdash@example.com
            updated_at: 2000-01-01T00:00:00Z
            verified: false
            created_at: 2000-01-01T00:00:00Z
            id: 1
          - address: intdash@example.com
            updated_at: 2000-01-01T00:00:00Z
            verified: false
            created_at: 2000-01-01T00:00:00Z
            id: 1
          user_uuid: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
          updated_at: 2000-01-01T00:00:00Z
          is_owner: true
          role_uuids:
          - 59530a1d-4491-4b24-b6c6-121b4c24bb21
          - 59530a1d-4491-4b24-b6c6-121b4c24bb21
          name: username
          created_at: 2000-01-01T00:00:00Z
          inherited_role_uuids:
          - b344c708-40bc-4088-8868-2701c41d9dc2
          - b344c708-40bc-4088-8868-2701c41d9dc2
      properties:
        items:
          items:
            $ref: '#/components/schemas/Member'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      - page
      type: object
    RoleUUIDs:
      description: ユーザーに割り当てるロールのUUID。オーナーのロールUUIDは変更できません。
      items:
        example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        maxLength: 36
        type: string
      type: array
    AddGroupMemberRequest:
      example:
        user_email_address: intdash@example.com
        user_uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        role_uuids:
        - 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        - 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        user_email_address:
          description: ユーザーのメールアドレス。`user_uuid` といずれか必須です。`user_uuid` を優先します。
          example: intdash@example.com
          maxLength: 512
          type: string
        user_uuid:
          description: ユーザーのUUID。`user_email_address` といずれか必須です。`user_uuid` を優先します。
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          maxLength: 36
          type: string
        role_uuids:
          description: ユーザーに割り当てるロールのUUID。オーナーのロールUUIDは変更できません。
          items:
            example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
            maxLength: 36
            type: string
          type: array
      required:
      - role_uuids
      type: object
    ProjectName:
      description: プロジェクトの名前
      example: my-project
      maxLength: 255
      minLength: 1
      type: string
    CreateProjectRequest:
      example:
        name: my-project
      properties:
        name:
          description: プロジェクトの名前
          example: my-project
          maxLength: 255
          minLength: 1
          type: string
      required:
      - name
      type: object
    UpdateProjectRequest:
      example:
        name: my-project
      properties:
        name:
          description: プロジェクトの名前
          example: my-project
          maxLength: 255
          minLength: 1
          type: string
      required:
      - name
      type: object
    ProjectEdge:
      example:
        updated_at: 2000-01-01T00:00:00Z
        name: edge-name
        nickname: Edge Nickname
        created_at: 2000-01-01T00:00:00Z
        edge_uuid: 756c0e45-21e3-4942-92d9-4ef44a0add26
      properties:
        edge_uuid:
          description: エッジのUUID
          example: 756c0e45-21e3-4942-92d9-4ef44a0add26
          type: string
        name:
          description: エッジの名前
          example: edge-name
          type: string
        nickname:
          description: プロジェクトにおけるエッジのニックネーム
          example: Edge Nickname
          type: string
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - edge_uuid
      - name
      - nickname
      - updated_at
      type: object
    ProjectEdges:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - updated_at: 2000-01-01T00:00:00Z
          name: edge-name
          nickname: Edge Nickname
          created_at: 2000-01-01T00:00:00Z
          edge_uuid: 756c0e45-21e3-4942-92d9-4ef44a0add26
        - updated_at: 2000-01-01T00:00:00Z
          name: edge-name
          nickname: Edge Nickname
          created_at: 2000-01-01T00:00:00Z
          edge_uuid: 756c0e45-21e3-4942-92d9-4ef44a0add26
      properties:
        items:
          items:
            $ref: '#/components/schemas/ProjectEdge'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      - page
      title: ProjectEdges
      type: object
    ProjectEdgeNickname:
      description: プロジェクトにおけるエッジのニックネーム
      example: Edge Nickname
      maxLength: 255
      minLength: 1
      type: string
    AddProjectEdgeRequest:
      example:
        edge_name: edge-name
        nickname: Edge Nickname
      properties:
        edge_name:
          description: 追加したいエッジの名前
          example: edge-name
          maxLength: 255
          minLength: 1
          type: string
        nickname:
          description: プロジェクトにおけるエッジのニックネーム
          example: Edge Nickname
          maxLength: 255
          minLength: 1
          type: string
      required:
      - edge_name
      - nickname
      type: object
    UpdateProjectEdgeRequest:
      example:
        nickname: Edge Nickname
      properties:
        nickname:
          description: プロジェクトにおけるエッジのニックネーム
          example: Edge Nickname
          maxLength: 255
          minLength: 1
          type: string
      type: object
    AddProjectMemberRequest:
      example:
        user_email_address: intdash@example.com
        user_uuid: 0932ff17-567c-4ac8-a40d-136357890f7b
        role_uuids:
        - 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        - 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        user_email_address:
          description: ユーザーのメールアドレス。`user_uuid` といずれか必須です。`user_uuid` を優先します。
          example: intdash@example.com
          maxLength: 512
          type: string
        user_uuid:
          description: ユーザーのUUID。`user_email_address` といずれか必須です。`user_uuid` を優先します。
          example: 0932ff17-567c-4ac8-a40d-136357890f7b
          maxLength: 36
          type: string
        role_uuids:
          description: ユーザーに割り当てるロールのUUID
          items:
            example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
            maxLength: 36
            type: string
          type: array
      required:
      - role_uuids
      type: object
    UpdateProjectMemberRequest:
      example:
        role_uuids:
        - 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        - 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        role_uuids:
          description: ユーザーに割り当てるロールのUUID。オーナーのロールUUIDは変更できません。
          items:
            example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
            maxLength: 36
            type: string
          type: array
      type: object
    UpdateGroupMemberRequest:
      example:
        role_uuids:
        - 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
        - 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
      properties:
        role_uuids:
          description: ユーザーに割り当てるロールのUUID。オーナーのロールUUIDは変更できません。
          items:
            example: 6b4f4bce-ba32-4ad9-b808-39e2d68b33ee
            maxLength: 36
            type: string
          type: array
      type: object
    Scopes:
      example:
        page:
          next: true
          next_page: 1
          total_count: 1
          prev: true
          total_page: 1
          prev_page: 1
        items:
        - allowed_endpoints:
          - path: /resources
            method: GET
          - path: /resources
            method: GET
          updated_at: 2000-01-01T00:00:00Z
          denied_endpoints:
          - path: /denied_resources
            method: GET
          - path: /denied_resources
            method: GET
          allowed_iscp_messages:
          - type: eos
          - type: eos
          name: meas:r
          created_at: 2000-01-01T00:00:00Z
          uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
        - allowed_endpoints:
          - path: /resources
            method: GET
          - path: /resources
            method: GET
          updated_at: 2000-01-01T00:00:00Z
          denied_endpoints:
          - path: /denied_resources
            method: GET
          - path: /denied_resources
            method: GET
          allowed_iscp_messages:
          - type: eos
          - type: eos
          name: meas:r
          created_at: 2000-01-01T00:00:00Z
          uuid: 4688a07a-0cbc-4597-8c87-538e744bc90d
      properties:
        items:
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        page:
          $ref: '#/components/schemas/AuthPage'
      required:
      - items
      - page
      title: Scopes
      type: object
    EdgeConnectionEdge:
      example:
        internal: true
        last_login_at: last_login_at
        protected: true
        updated_at: updated_at
        last_lived_at: last_lived_at
        name: name
        nickname: nickname
        description: description
        created_at: created_at
        disabled: true
        type: user
        uuid: uuid
      nullable: true
      properties:
        uuid:
          description: エッジのUUID
          type: string
        name:
          description: エッジの名前
          type: string
        nickname:
          description: エッジの表示名
          type: string
        description:
          description: エッジの説明
          type: string
        disabled:
          description: |-
            * `true` : このエッジは無効化されています。
            * `false` : このエッジは有効です。
          type: boolean
        internal:
          description: |-
            * `true` : このエッジは内部エッジ（システム内部で使用される特別なエッジ）です。
              このエッジの変更や削除はできません。
            * `false` : このエッジは内部エッジではありません。
          type: boolean
        protected:
          description: |-
            * `true` : このエッジは保護されています。このエッジの変更や削除はできません。
            * `false` : このエッジは保護されていません。
          type: boolean
        type:
          description: エッジのタイプ
          enum:
          - user
          - device
          type: string
        last_login_at:
          description: エッジが最後にログインした日時
          type: string
        last_lived_at:
          description: サーバーがこのエッジ接続を確認できた最後の日時。 エッジとサーバーがWebSocketで接続されている間、この値は数秒おきに最新の日時に更新されます。
            WebSocketが切断されると、それ以上更新されなくなります。 更新は数秒おきであるため、WebSocketが切断された場合に その切断の時刻が正確に記録されるわけではありません。
          type: string
        created_at:
          description: エッジが作成された日時
          type: string
        updated_at:
          description: エッジの最終更新日時
          type: string
      required:
      - created_at
      - description
      - disabled
      - internal
      - last_lived_at
      - last_login_at
      - name
      - nickname
      - protected
      - type
      - updated_at
      - uuid
      type: object
    EdgeConnectionItem:
      example:
        edge:
          internal: true
          last_login_at: last_login_at
          protected: true
          updated_at: updated_at
          last_lived_at: last_lived_at
          name: name
          nickname: nickname
          description: description
          created_at: created_at
          disabled: true
          type: user
          uuid: uuid
        updated_at: updated_at
        last_lived_at: last_lived_at
        created_at: created_at
        uuid: uuid
      properties:
        uuid:
          description: エッジ接続のUUID
          type: string
        last_lived_at:
          description: サーバーがこのエッジ接続を確認できた最後の日時。 エッジとサーバーがWebSocketで接続されている間、この値は数秒おきに最新の日時に更新されます。
            WebSocketが切断されると、それ以上更新されなくなります。 更新は数秒おきであるため、WebSocketが切断された場合に その切断の時刻が正確に記録されるわけではありません。
          type: string
        edge:
          $ref: '#/components/schemas/EdgeConnectionEdge'
        created_at:
          description: エッジ接続が作成された日時
          type: string
        updated_at:
          description: エッジ接続の最終更新日時
          type: string
      required:
      - created_at
      - edge
      - last_lived_at
      - updated_at
      - uuid
      type: object
    EdgeConnectionList:
      example:
        page:
          next: next
          last: true
          previous: previous
          total_count: 0
          first: true
        items:
        - edge:
            internal: true
            last_login_at: last_login_at
            protected: true
            updated_at: updated_at
            last_lived_at: last_lived_at
            name: name
            nickname: nickname
            description: description
            created_at: created_at
            disabled: true
            type: user
            uuid: uuid
          updated_at: updated_at
          last_lived_at: last_lived_at
          created_at: created_at
          uuid: uuid
        - edge:
            internal: true
            last_login_at: last_login_at
            protected: true
            updated_at: updated_at
            last_lived_at: last_lived_at
            name: name
            nickname: nickname
            description: description
            created_at: created_at
            disabled: true
            type: user
            uuid: uuid
          updated_at: updated_at
          last_lived_at: last_lived_at
          created_at: created_at
          uuid: uuid
      properties:
        items:
          items:
            $ref: '#/components/schemas/EdgeConnectionItem'
          type: array
        page:
          $ref: '#/components/schemas/EdgeConnectionList_page'
      required:
      - items
      - page
      type: object
    EdgeConnectionDownstream:
      properties:
        stream_id:
          description: ダウンストリームのストリームID
          type: integer
        src_edge_uuid:
          description: ダウンストリームの送信元エッジUUID
          type: string
        dst_edge_uuid:
          description: ダウンストリームの宛先エッジUUID
          type: string
        last_received_at:
          description: ダウンストリームで最後にデータポイントが受信された日時。 実際の最後のデータポイントの受信よりも最大で10秒後の値となる場合があります。
          type: string
        received_close_request:
          description: |-
            * `true` : このダウンストリームについてのclose requestを受信済みです。
            * `false` : このダウンストリームについてのclose requestを受信していません。
          type: boolean
        created_at:
          description: ダウンストリームが作成された日時
          type: string
        updated_at:
          description: ダウンストリームの最終更新日時
          type: string
      required:
      - created_at
      - dst_edge_uuid
      - last_received_at
      - received_close_request
      - src_edge_uuid
      - stream_id
      - updated_at
      type: object
    EdgeConnectionUpstream:
      properties:
        stream_id:
          description: アップストリームのストリームID
          type: integer
        measurement_uuid:
          description: アップストリームの計測UUID
          type: string
        src_edge_uuid:
          description: アップストリームの送信元エッジUUID
          type: string
        resend:
          description: |-
            * `true` : このアップストリームは再送です。
            * `false` : このアップストリームは再送ではありません。
          type: boolean
        store:
          description: |-
            * `true` : このアップストリームで送信されたデータポイントはサーバーに保存されます。
            * `false` : このアップストリームで送信されたデータポイントはサーバーに保存されません。
          type: boolean
        last_received_at:
          description: アップストリームで最後にデータポイントが送信された日時。 実際の最後のデータポイント送信よりも最大で10秒後の値となる場合があります。
          type: string
        received_close_request:
          description: |-
            * `true` : このアップストリームについてのclose requestを受信済みです。
            * `false` : このアップストリームについてのclose requestは受信していません。
          type: boolean
        created_at:
          description: アップストリームが作成された日時
          type: string
        updated_at:
          description: アップストリームの最終更新日時
          type: string
      required:
      - created_at
      - last_received_at
      - measurement_uuid
      - received_close_request
      - resend
      - src_edge_uuid
      - store
      - stream_id
      - updated_at
      type: object
    EdgeConnection:
      allOf:
      - $ref: '#/components/schemas/EdgeConnectionItem'
      - $ref: '#/components/schemas/EdgeConnection_allOf'
    ISCPTicket:
      example:
        ticket: VjVL9o7cj45Z1WJX-dPVZ0Z6i80xAfs6.AFVDLS0-iPfzKQN3m7j_pGpU7XSwliWopn9QvGtHf2Y=
        created_at: 2000-01-23T04:56:07.000+00:00
        expired_at: 2000-01-23T04:56:07.000+00:00
      properties:
        ticket:
          description: iSCPチケット
          example: VjVL9o7cj45Z1WJX-dPVZ0Z6i80xAfs6.AFVDLS0-iPfzKQN3m7j_pGpU7XSwliWopn9QvGtHf2Y=
          type: string
        expired_at:
          description: 有効期限
          format: date-time
          type: string
        created_at:
          description: 作成日時
          format: date-time
          type: string
      required:
      - created_at
      - expired_at
      - ticket
      type: object
    DataPoint:
      discriminator:
        mapping:
          '*': '#/components/schemas/DataPointNormal'
          <channel>intdash/measurement/get/data/error: '#/components/schemas/DataPointError'
        propertyName: data_id
      oneOf:
      - $ref: '#/components/schemas/DataPointNormal'
      - $ref: '#/components/schemas/DataPointError'
    DataPointJSONLine:
      description: "JSONLines形式で返却します。一行で表現されるJSONスキーマは [DataPoint Model](https://docs.intdash.jp/api/intdash-api/main/spec_public.html#tag/meas_data_model)\
        \ を参照ください。"
      format: binary
      type: string
    DataPointDataID:
      description: データID
      example:
        data_id: data_id
        data_type: data_type
      properties:
        data_type:
          description: データタイプ
          example: data_type
          type: string
        data_id:
          description: データID
          example: data_id
          type: string
      required:
      - data_id
      - data_type
      type: object
    DataPointDataIDs:
      example:
        items:
        - data_id: data_id
          data_type: data_type
        - data_id: data_id
          data_type: data_type
      properties:
        items:
          items:
            $ref: '#/components/schemas/DataPointDataID'
          type: array
      required:
      - items
      type: object
    DataID:
      description: データID
      example:
        data_id: data_id
        data_type: 0
        channel: 6
      properties:
        data_type:
          description: データタイプ
          format: int32
          type: integer
        channel:
          description: チャンネル
          format: int64
          type: integer
        data_id:
          description: データID
          type: string
      required:
      - channel
      - data_id
      - data_type
      type: object
    DataIDs:
      example:
        items:
        - data_id: data_id
          data_type: 0
          channel: 6
        - data_id: data_id
          data_type: 0
          channel: 6
      properties:
        items:
          items:
            $ref: '#/components/schemas/DataID'
          type: array
      required:
      - items
      type: object
    MeasurementBaseTimeType:
      description: 計測の基準時刻タイプ
      enum:
      - edge_rtc
      - ntp
      - gps
      - api_first_received
      - volatile
      - manual
      - undefined
      example: edge_rtc
      type: string
    MeasurementSequencesSummary:
      example:
        received_chunks_ratio: 0.5
        expected_data_points: 123456789
        received_data_points: 123456789
        status: measuring
      properties:
        received_chunks_ratio:
          description: 計測シーケンス回収率。計測内に含まれる計測シーケンスのうち、 サーバーへの保存が完了した計測シーケンスの割合です。
          example: 0.5
          maximum: 1
          minimum: 0
          type: number
        received_data_points:
          description: サーバーが受信したデータポイントの数。符号無し64bit整数。
          example: 123456789
          format: int64
          maximum: 18446744073709552000
          minimum: 0
          type: integer
        expected_data_points:
          description: サーバーが受信することが想定されるデータポイントの総数（既に受信済みのデータポイントを含む）。符号無し64bit整数。
          example: 123456789
          format: int64
          maximum: 18446744073709552000
          minimum: 0
          type: integer
        status:
          description: |-
            計測のステータス:
              - ready
                - 計測準備中
              - measuring
                - 計測中
              - resending
                - 再送中。計測（エッジにおけるデータの取得）は終了しましたが、エッジにデータが残っており、サーバーに再送中です。
              - finished（非推奨。段階的にcompletedへ移行）
                - 完了。サーバーへのデータの回収が完了しています。
              - completed
                - 完了。サーバーへのデータの回収が完了しています。
          enum:
          - ready
          - measuring
          - resending
          - finished
          - completed
          example: measuring
          type: string
      type: object
    MeasurementMarkerBase:
      properties:
        uuid:
          description: 計測マーカーのUUID
          type: string
        name:
          description: 計測マーカーの名前
          type: string
        description:
          description: 計測マーカーの説明
          type: string
        type:
          description: |-
            計測マーカーのタイプ
            - `point` : ポイントマーカー
            - `range` : 範囲マーカー
          enum:
          - point
          - range
          type: string
        tag:
          description: 計測マーカーに付与されたタグ
          type: object
        created_at:
          description: 計測マーカーの作成日時
          type: string
        created_by:
          description: 計測マーカー作成者
          type: string
        updated_at:
          description: 計測マーカーの最終更新日時
          type: string
        updated_by:
          description: 計測マーカーの最終更新者
          type: string
      required:
      - created_at
      - created_by
      - description
      - detail
      - name
      - tag
      - type
      - updated_at
      - updated_by
      - uuid
      type: object
    MeasurementMarkerDetailPoint:
      properties:
        occurred_elapsed_time:
          description: この計測マーカーの時刻。計測の基準時刻からの経過時間（マイクロ秒）で表します。
          format: int64
          type: integer
      type: object
    MeasurementMarkerPoint:
      allOf:
      - $ref: '#/components/schemas/MeasurementMarkerBase'
      - $ref: '#/components/schemas/MeasurementMarkerPoint_allOf'
    MeasurementMarkerDetailRange:
      properties:
        start_elapsed_time:
          description: この計測マーカーの始点。この計測の基準時刻からの経過時間（マイクロ秒）で表示します。
          format: int64
          type: integer
        end_elapsed_time:
          description: この計測マーカーの始点。この計測の基準時刻からの経過時間（マイクロ秒）で表示します。
          format: int64
          type: integer
      type: object
    MeasurementMarkerRange:
      allOf:
      - $ref: '#/components/schemas/MeasurementMarkerBase'
      - $ref: '#/components/schemas/MeasurementMarkerRange_allOf'
    MeasurementMarker:
      discriminator:
        mapping:
          point: '#/components/schemas/MeasurementMarkerPoint'
          range: '#/components/schemas/MeasurementMarkerRange'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/MeasurementMarkerPoint'
      - $ref: '#/components/schemas/MeasurementMarkerRange'
    Measurement:
      example:
        basetime_type: edge_rtc
        description: description of measurement
        created_at: 2017-02-11T01:23:45Z
        completed: true
        processed_ratio: 0.9
        basetime: basetime
        sequences:
          received_chunks_ratio: 0.5
          expected_data_points: 123456789
          received_data_points: 123456789
          status: measuring
        uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        duration: 100000000
        protected: true
        updated_at: 2017-02-11T01:23:45Z
        max_elapsed_time: 100000000
        name: meas1
        ended: true
        markers:
        - null
        - null
        edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
        status: measuring
      properties:
        uuid:
          description: 計測のUUID
          example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          type: string
        name:
          description: 計測の名前
          example: meas1
          type: string
        description:
          description: 計測の説明
          example: description of measurement
          type: string
        basetime:
          description: 計測の基準時刻（RFC3339形式）
          type: string
        basetime_type:
          $ref: '#/components/schemas/MeasurementBaseTimeType'
        edge_uuid:
          description: エッジのUUID
          example: 00de1861-6614-4435-af07-da9b4338d57c
          type: string
        duration:
          deprecated: true
          description: 計測時間（ `max_elapsed_time` を使用してください）
          example: 100000000
          format: int64
          type: integer
        max_elapsed_time:
          description: 計測時間（マイクロ秒）
          example: 100000000
          format: int64
          type: integer
        completed:
          description: '`true` の場合、この計測はサーバーへのデータの回収が完了しています。'
          example: true
          type: boolean
        protected:
          deprecated: true
          description: |-
            `true` の場合、計測は保護されています。保護されている計測は削除できません。
            保護されている計測を削除したい場合は、まず保護を解除してください。
          example: true
          type: boolean
        sequences:
          $ref: '#/components/schemas/MeasurementSequencesSummary'
        markers:
          items:
            $ref: '#/components/schemas/MeasurementMarker'
          type: array
        created_at:
          description: 計測の作成日時
          example: 2017-02-11T01:23:45Z
          format: date-time
          type: string
        updated_at:
          description: 計測の最終更新日時
          example: 2017-02-11T01:23:45Z
          format: date-time
          type: string
        processed_ratio:
          deprecated: true
          description: 代わりに `sequences.received_chunks_ratio` を使用してください。処理済み率を表します。
          example: 0.9
          type: number
        ended:
          deprecated: true
          description: 代わりに `sequences.status` を使用してください。エッジにおいてデータの取得が終了しているかどうかを示します。
          example: true
          type: boolean
        status:
          deprecated: true
          description: |-
            代わりに `sequences.status` を使用してください。
            計測のステータスを表します:
              - measuring
                - 計測中
              - resending
                - 再送中。計測（エッジにおけるデータの取得）は終了しましたが、エッジにデータが残っており、サーバーに再送中です。
              - finished
                - 完了。サーバーへのデータの回収が完了しています。
          enum:
          - measuring
          - resending
          - finished
          type: string
      required:
      - basetime
      - basetime_type
      - created_at
      - description
      - duration
      - edge_uuid
      - ended
      - name
      - processed_ratio
      - protected
      - received_data_points
      - sequences
      - status
      - updated_at
      - uuid
    PageDetail:
      example:
        next: next
        last: true
        previous: previous
        total_count: 0
        first: true
      properties:
        total_count:
          description: 取得対象の総件数
          format: int64
          type: integer
        first:
          description: '`true` の場合、現在のページが最初のページです。'
          type: boolean
        last:
          description: '`true` の場合、現在のページが最後のページです。'
          type: boolean
        next:
          description: 次のページのパス。現在のページが最後のページの場合は空文字列です。
          type: string
        previous:
          description: 次のページのパス。現在のページが最後のページの場合は空文字列です。
          type: string
      required:
      - first
      - last
      - next
      - previous
      - total_count
      type: object
    Measurements:
      example:
        page:
          next: next
          last: true
          previous: previous
          total_count: 0
          first: true
        items:
        - basetime_type: edge_rtc
          description: description of measurement
          created_at: 2017-02-11T01:23:45Z
          completed: true
          processed_ratio: 0.9
          basetime: basetime
          sequences:
            received_chunks_ratio: 0.5
            expected_data_points: 123456789
            received_data_points: 123456789
            status: measuring
          uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          duration: 100000000
          protected: true
          updated_at: 2017-02-11T01:23:45Z
          max_elapsed_time: 100000000
          name: meas1
          ended: true
          markers:
          - null
          - null
          edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
          status: measuring
        - basetime_type: edge_rtc
          description: description of measurement
          created_at: 2017-02-11T01:23:45Z
          completed: true
          processed_ratio: 0.9
          basetime: basetime
          sequences:
            received_chunks_ratio: 0.5
            expected_data_points: 123456789
            received_data_points: 123456789
            status: measuring
          uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          duration: 100000000
          protected: true
          updated_at: 2017-02-11T01:23:45Z
          max_elapsed_time: 100000000
          name: meas1
          ended: true
          markers:
          - null
          - null
          edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
          status: measuring
      properties:
        items:
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
        page:
          $ref: '#/components/schemas/PageDetail'
      required:
      - items
      - page
      type: object
    MeasCreate:
      example:
        protected: true
        basetime_type: edge_rtc
        name: name
        description: description
        basetime: 2000-01-23T04:56:07.000+00:00
        edge_uuid: edge_uuid
      properties:
        name:
          description: 計測の名前
          type: string
        description:
          description: 計測の説明
          type: string
        basetime:
          description: 計測の基準時刻（計測が開始された時刻）
          format: date-time
          type: string
        basetime_type:
          $ref: '#/components/schemas/MeasurementBaseTimeType'
        edge_uuid:
          description: この計測に関連付けられたエッジのUUID
          type: string
        protected:
          deprecated: true
          description: '`true` の場合、計測は保護されます。保護されている計測は削除できません。'
          type: boolean
      required:
      - basetime
      - basetime_type
      - edge_uuid
      - protected
    MeasReplace:
      example:
        basetime_type: edge_rtc
        name: name
        description: description
        basetime: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: 計測の名前
          type: string
        description:
          description: 計測の説明
          type: string
        basetime:
          description: 計測の基準時刻
          format: date-time
          type: string
        basetime_type:
          $ref: '#/components/schemas/MeasurementBaseTimeType'
      type: object
    SequenceSummary:
      example:
        status: status
      properties:
        status:
          description: 計測のステータス
          type: string
      required:
      - status
      type: object
    MeasBaseTime:
      example:
        updated_at: updated_at
        created_at: created_at
        type: edge_rtc
        basetime: basetime
      properties:
        type:
          $ref: '#/components/schemas/MeasurementBaseTimeType'
        basetime:
          description: 基準時刻（計測が開始された時刻）（RFC3339形式）
          type: string
        created_at:
          description: 基準時刻の作成日時
          type: string
        updated_at:
          description: 基準時刻の最終更新日時
          type: string
      required:
      - basetime
      - created_at
      - type
      - updated_at
      type: object
    MeasBaseTimes:
      example:
        items:
        - updated_at: updated_at
          created_at: created_at
          type: edge_rtc
          basetime: basetime
        - updated_at: updated_at
          created_at: created_at
          type: edge_rtc
          basetime: basetime
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasBaseTime'
          type: array
      required:
      - items
      type: object
    MeasBaseTimePut:
      example:
        basetime: basetime
      properties:
        basetime:
          description: 計測の基準時刻
          type: string
      type: object
    MeasurementSectionGetResponse:
      example:
        processed: true
        updated_at: updated_at
        created_at: created_at
        serial_number: serial_number
      properties:
        serial_number:
          description: 計測セクションのシリアルナンバー
          type: string
        processed:
          description: '`true` の場合、計測セクションは処理済みです。'
          type: boolean
        created_at:
          description: 計測セクションの作成日時。 `processed` が `false` の場合は、この属性はありません。
          type: string
        updated_at:
          description: 計測セクションの最終更新日時。 `processed` が `false` の場合は、この属性はありません。
          type: string
      required:
      - created_at
      - processed
      - serial_number
      - updated_at
      type: object
    MeasurementSectionsGetResponse:
      example:
        total_count: 0
        items:
        - processed: true
          updated_at: updated_at
          created_at: created_at
          serial_number: serial_number
        - processed: true
          updated_at: updated_at
          created_at: created_at
          serial_number: serial_number
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasurementSectionGetResponse'
          type: array
        total_count:
          description: 取得対象の総件数
          type: integer
      required:
      - items
      - total_count
      type: object
    MeasurementSequenceGroup:
      example:
        updated_at: 2000-01-01T00:00:00Z
        expected_data_points: 123456789
        created_at: 2000-01-01T00:00:00Z
        uuid: 0b849907-9f04-4c87-b176-b73fb527e935
        final_sequence_number: 10
      properties:
        uuid:
          description: 計測シーケンスのUUID
          example: 0b849907-9f04-4c87-b176-b73fb527e935
          type: string
        expected_data_points:
          description: この計測シーケンスでサーバーが受信することが想定されるデータポイントの総数 （既に受信済みのデータポイントを含む） 符号なし64bit整数。
          example: 123456789
          format: int64
          maximum: 18446744073709552000
          minimum: 0
          type: integer
        final_sequence_number:
          description: 最後の計測シーケンスの番号。
          example: 10
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
        created_at:
          description: 作成日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - updated_at
      - uuid
      type: object
    PageV2:
      example:
        total_count: 0
      properties:
        total_count:
          description: 取得対象の総件数
          format: int64
          type: integer
      required:
      - total_count
      type: object
    MeasurementSequenceGroups:
      example:
        page:
          total_count: 0
        items:
        - updated_at: 2000-01-01T00:00:00Z
          expected_data_points: 123456789
          created_at: 2000-01-01T00:00:00Z
          uuid: 0b849907-9f04-4c87-b176-b73fb527e935
          final_sequence_number: 10
        - updated_at: 2000-01-01T00:00:00Z
          expected_data_points: 123456789
          created_at: 2000-01-01T00:00:00Z
          uuid: 0b849907-9f04-4c87-b176-b73fb527e935
          final_sequence_number: 10
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasurementSequenceGroup'
          type: array
        page:
          $ref: '#/components/schemas/PageV2'
      required:
      - items
      - page
      type: object
    MeasurementSequenceGroupReplace:
      example:
        expected_data_points: 123456789
        final_sequence_number: 10
      properties:
        expected_data_points:
          description: この計測シーケンスでサーバーが受信することが想定されるデータポイントの総数 （既に受信済みのデータポイントを含む） 符号なし64bit整数。
          example: 123456789
          format: int64
          maximum: 18446744073709552000
          minimum: 0
          type: integer
        final_sequence_number:
          description: 最後の計測シーケンスの番号
          example: 10
          format: int64
          maximum: 4294967295
          minimum: 0
          type: integer
      type: object
    CreateMeasurementChunksResult:
      description: シーケンスチャンクの登録結果
      example:
        total_count: 1
        items:
        - sequence_number: 1
          result: ok
        - sequence_number: 1
          result: ok
      properties:
        items:
          description: 登録結果のリスト
          items:
            $ref: '#/components/schemas/CreateMeasurementChunksResult_items_inner'
          type: array
        total_count:
          description: 登録結果の総件数
          example: 1
          format: int64
          type: integer
      required:
      - items
      - total_count
      type: object
    MeasurementJobStatus:
      description: ジョブのステータス
      enum:
      - ready
      - processing
      - succeeded
      - failed
      - cancelled
      type: string
    MeasurementJob:
      example:
        updated_at: updated_at
        meas_uuid: meas_uuid
        file_name: file_name
        created_at: created_at
        message: message
        uuid: uuid
        measurement:
          basetime_type: edge_rtc
          description: description of measurement
          created_at: 2017-02-11T01:23:45Z
          completed: true
          processed_ratio: 0.9
          basetime: basetime
          sequences:
            received_chunks_ratio: 0.5
            expected_data_points: 123456789
            received_data_points: 123456789
            status: measuring
          uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          duration: 100000000
          protected: true
          updated_at: 2017-02-11T01:23:45Z
          max_elapsed_time: 100000000
          name: meas1
          ended: true
          markers:
          - null
          - null
          edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
          status: measuring
        status: null
      properties:
        uuid:
          description: ジョブのUUID
          type: string
        meas_uuid:
          deprecated: true
          description: 計測のUUID
          type: string
        measurement:
          $ref: '#/components/schemas/Measurement'
        status:
          $ref: '#/components/schemas/MeasurementJobStatus'
        message:
          description: |-
            ジョブの結果を表すメッセージ。 ジョブのステータスが `failed` の場合、メッセージが以下の形式で表示されます。

            `<row_number>:<column_number>:<column_name>:<cell_value>:<error_message>`

            行番号や列番号が不明の場合は `0` が出力されます。
            * ex.1 `2:1:time:1539263580:A time must be after the base_time\: BaseTime=2018-10-11 13\:13\:03 +0000 UTC`
            * ex.2 `4:0:::Wrong number of fields`
            * ex.3 `0:0:::Unexpected Error`

            `:` と `\` はエスケープされ、 `\:` と `\\` として出力されます。
          type: string
        file_name:
          description: ジョブの対象のファイル名。 同じ日に同じ名前のファイルがアップロードされた場合は、ランダムな接頭辞が付与されます。
          type: string
        created_at:
          description: ジョブの作成日時
          type: string
        updated_at:
          description: ジョブの最終更新日時
          type: string
      required:
      - created_at
      - file_name
      - meas_uuid
      - measurement
      - message
      - status
      - updated_at
      - uuid
      type: object
    MeasurementJobs:
      example:
        page:
          next: next
          last: true
          previous: previous
          total_count: 0
          first: true
        items:
        - updated_at: updated_at
          meas_uuid: meas_uuid
          file_name: file_name
          created_at: created_at
          message: message
          uuid: uuid
          measurement:
            basetime_type: edge_rtc
            description: description of measurement
            created_at: 2017-02-11T01:23:45Z
            completed: true
            processed_ratio: 0.9
            basetime: basetime
            sequences:
              received_chunks_ratio: 0.5
              expected_data_points: 123456789
              received_data_points: 123456789
              status: measuring
            uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
            duration: 100000000
            protected: true
            updated_at: 2017-02-11T01:23:45Z
            max_elapsed_time: 100000000
            name: meas1
            ended: true
            markers:
            - null
            - null
            edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
            status: measuring
          status: null
        - updated_at: updated_at
          meas_uuid: meas_uuid
          file_name: file_name
          created_at: created_at
          message: message
          uuid: uuid
          measurement:
            basetime_type: edge_rtc
            description: description of measurement
            created_at: 2017-02-11T01:23:45Z
            completed: true
            processed_ratio: 0.9
            basetime: basetime
            sequences:
              received_chunks_ratio: 0.5
              expected_data_points: 123456789
              received_data_points: 123456789
              status: measuring
            uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
            duration: 100000000
            protected: true
            updated_at: 2017-02-11T01:23:45Z
            max_elapsed_time: 100000000
            name: meas1
            ended: true
            markers:
            - null
            - null
            edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
            status: measuring
          status: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasurementJob'
          type: array
        page:
          $ref: '#/components/schemas/PageDetail'
      required:
      - items
      - page
      type: object
    MeasurementMarkers:
      example:
        page:
          next: next
          last: true
          previous: previous
          total_count: 0
          first: true
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasurementMarker'
          type: array
        page:
          $ref: '#/components/schemas/PageDetail'
      required:
      - items
      - page
      type: object
    MeasurementMarkerPutRequestBase:
      properties:
        name:
          description: 計測マーカーの名前
          type: string
        description:
          description: 計測マーカーの説明
          type: string
        type:
          description: |-
            計測マーカーのタイプ
            - `point` : ポイントマーカー
            - `range` : 範囲マーカー
          enum:
          - point
          - range
          type: string
        tag:
          description: |-
            この計測マーカーに付与するタグ。タグはキーと値からなるペア（いずれもstring）で設定します。
            複数のタグを一度に設定することができます。
            値の中にオブジェクトを入れる（ネストする）ことはできません。
            ```
            // Not good
            {
              "tagkey" : {
                "nestKey": "not allowed"
              }
            }
            ```

            ```
            // OK
            {
              "tagkey1" : "ok1",
              "tagkey2" : "ok2"
            }
            ```
          type: object
    MeasurementMarkerPutRequestPoint:
      allOf:
      - $ref: '#/components/schemas/MeasurementMarkerPutRequestBase'
      - $ref: '#/components/schemas/MeasurementMarkerPoint_allOf'
    MeasurementMarkerPutRequestRange:
      allOf:
      - $ref: '#/components/schemas/MeasurementMarkerPutRequestBase'
      - $ref: '#/components/schemas/MeasurementMarkerRange_allOf'
    MeasurementMarkerPutRequest:
      discriminator:
        mapping:
          point: '#/components/schemas/MeasurementMarkerPutRequestPoint'
          range: '#/components/schemas/MeasurementMarkerPutRequestRange'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/MeasurementMarkerPutRequestPoint'
      - $ref: '#/components/schemas/MeasurementMarkerPutRequestRange'
    MeasurementUploadStatusGetResponse:
      example:
        updated_at: updated_at
        meas_uuid: meas_uuid
        file_name: file_name
        created_at: created_at
        state: ready
        message: message
        uuid: uuid
      properties:
        uuid:
          description: 計測アップロードのUUID
          type: string
        meas_uuid:
          description: 計測のUUID
          type: string
        state:
          description: 計測への変換ジョブのステータス
          enum:
          - ready
          - processing
          - succeed
          - failed
          - canceled
          type: string
        message:
          description: 計測への変換ジョブの結果
          type: string
        file_name:
          description: 計測に変換する対象のファイル名。 同じ日に同じ名前のファイルがアップロードされた場合は、 ランダムな接頭辞が付与されます。
          type: string
        created_at:
          description: 計測アップロードの作成日時
          type: string
        updated_at:
          description: 計測アップロードの最終更新日時
          type: string
      required:
      - created_at
      - file_name
      - meas_uuid
      - message
      - state
      - updated_at
      - uuid
      type: object
    MeasurementUploadStatusesGetResponse:
      example:
        page:
          next: next
          last: true
          previous: previous
          total_count: 0
          first: true
        items:
        - updated_at: updated_at
          meas_uuid: meas_uuid
          file_name: file_name
          created_at: created_at
          state: ready
          message: message
          uuid: uuid
        - updated_at: updated_at
          meas_uuid: meas_uuid
          file_name: file_name
          created_at: created_at
          state: ready
          message: message
          uuid: uuid
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasurementUploadStatusGetResponse'
          type: array
        page:
          $ref: '#/components/schemas/PageDetail'
      required:
      - items
      - page
      type: object
    LabelDataType:
      description: |-
        列名とデータタイプの対応。 データタイプは、 `int` 、` string` 、 `float` のいずれかを指定してください。
        例:
        ```
        {
          "column_1": "float",
          "column_2": "string",
          "column_3": "int"
        }
        ```
      format: json
      type: string
    MeasurementUploadPostRequest:
      properties:
        edge_uuid:
          description: エッジのUUID
          format: uuid
          type: string
        base_time:
          description: 計測の基準時刻。MP4ファイルをアップロードする場合は必須です。
          format: date-time
          type: string
        base_time_type:
          default: edge_rtc
          description: 基準時刻のタイプ
          enum:
          - edge_rtc
          - ntp
          - gps
          - api_first_received
          - volatile
          - manual
          - undefined
          type: string
        channel:
          description: 計測のチャンネル（十進表記の文字列）
          type: integer
        meas_end:
          description: '`true` にすると、計測は終了したものとして扱われます。'
          type: boolean
        label_data_type:
          $ref: '#/components/schemas/LabelDataType'
        data_file:
          description: アップロードするファイル
          format: binary
          type: string
      required:
      - data_file
      - edge_uuid
      type: object
    MeasurementUploadPostResponse:
      example:
        job_uuid: job_uuid
        file_name: file_name
        meas_upload_uuid: meas_upload_uuid
      properties:
        meas_upload_uuid:
          deprecated: true
          description: 計測アップロードのUUID
          type: string
        job_uuid:
          description: 計測への変換ジョブのUUID
          type: string
        file_name:
          description: アップロードされたファイルのファイル名
          type: string
      required:
      - file_name
      - meas_upload_uuid
      type: object
    MeasurementUploadPostRequestAppend:
      properties:
        channel:
          description: 作成された計測のチャンネル
          type: integer
        meas_end:
          description: |-
            * `true` : 終了した計測
            * `false` : 終了していない計測
          type: boolean
        label_data_type:
          $ref: '#/components/schemas/LabelDataType'
        data_file:
          description: アップロードするファイル
          format: binary
          type: string
      required:
      - data_file
      type: object
    MeasurementMarkersWithoutPage:
      example:
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/MeasurementMarker'
          type: array
      required:
      - items
      type: object
    MeasurementMarkerPostRequestPoint:
      allOf:
      - $ref: '#/components/schemas/MeasurementMarkerPutRequestPoint'
      - required:
        - detail
        - type
    MeasurementMarkerPostRequestRange:
      allOf:
      - $ref: '#/components/schemas/MeasurementMarkerPutRequestRange'
      - required:
        - detail
        - type
    MeasurementMarkerPostRequest:
      discriminator:
        mapping:
          point: '#/components/schemas/MeasurementMarkerPostRequestPoint'
          range: '#/components/schemas/MeasurementMarkerPostRequestRange'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/MeasurementMarkerPostRequestPoint'
      - $ref: '#/components/schemas/MeasurementMarkerPostRequestRange'
    SignalConversionOptionType:
      description: 変換タイプ
      enum:
      - none
      - num_fixed_point
      - num_floating_point
      - csv
      - json
      - sub_bytes
      - sub_string
      type: string
    SignalConversionOptionNumFixedPoint:
      properties:
        startbit:
          description: 開始ビット位置
          format: int32
          type: integer
        bitsize:
          description: ビットサイズ
          format: int32
          type: integer
        endian:
          description: エンディアン
          enum:
          - big
          - little
          type: string
        sign:
          description: 符号有無
          enum:
          - signed
          - unsigned
          type: string
        scale:
          description: スケールファクター
          type: number
        offset:
          description: オフセット
          type: number
      required:
      - bitsize
      - endian
      - offset
      - scale
      - sign
      - startbit
      type: object
    SignalConversionNumFixedPoint:
      properties:
        type:
          $ref: '#/components/schemas/SignalConversionOptionType'
        options:
          $ref: '#/components/schemas/SignalConversionOptionNumFixedPoint'
      required:
      - options
      - type
      type: object
    SignalConversionOptionNumFloatingPoint:
      properties:
        startbyte:
          description: 開始バイト位置
          format: int32
          type: integer
        endian:
          description: エンディアン
          enum:
          - big
          - little
          type: string
        precision:
          enum:
          - 32
          - 64
          type: integer
      required:
      - endian
      - precision
      - startbyte
      type: object
    SignalConversionNumFloatingPoint:
      properties:
        type:
          $ref: '#/components/schemas/SignalConversionOptionType'
        options:
          $ref: '#/components/schemas/SignalConversionOptionNumFloatingPoint'
      required:
      - options
      - type
      type: object
    SignalConversionOptionCSV:
      properties:
        delimiters:
          description: デリミタ
          items:
            type: string
          type: array
        index:
          description: インデックス（左端を0とする列番号）
          format: int32
          type: integer
        value_type:
          enum:
          - str
          - num
          type: string
      required:
      - delimiters
      - index
      - value_type
      type: object
    SignalConversionCSV:
      properties:
        type:
          $ref: '#/components/schemas/SignalConversionOptionType'
        options:
          $ref: '#/components/schemas/SignalConversionOptionCSV'
      required:
      - options
      - type
      type: object
    SignalConversionOptionJSON:
      properties:
        fieldpath:
          description: 抽出したいフィールドのパス
          type: string
        value_type:
          description: 値のタイプ
          enum:
          - str
          - num
          type: string
      required:
      - fieldpath
      - value_type
      type: object
    SignalConversionJSON:
      properties:
        type:
          $ref: '#/components/schemas/SignalConversionOptionType'
        options:
          $ref: '#/components/schemas/SignalConversionOptionJSON'
      required:
      - options
      - type
      type: object
    SignalConversionOptionSubBytes:
      properties:
        startbyte:
          description: 開始バイト位置
          format: int64
          type: integer
        bytesize:
          description: バイトサイズ
          format: int64
          type: integer
      required:
      - bytesize
      - startbyte
      type: object
    SignalConversionSubBytes:
      properties:
        type:
          $ref: '#/components/schemas/SignalConversionOptionType'
        options:
          $ref: '#/components/schemas/SignalConversionOptionSubBytes'
      required:
      - options
      - type
      type: object
    SignalConversionOptionSubString:
      properties:
        startbyte:
          description: 開始バイト位置
          format: int64
          type: integer
        bytesize:
          description: バイトサイズ
          format: int64
          type: integer
      required:
      - bytesize
      - startbyte
      type: object
    SignalConversionSubString:
      properties:
        type:
          $ref: '#/components/schemas/SignalConversionOptionType'
        options:
          $ref: '#/components/schemas/SignalConversionOptionSubString'
      required:
      - options
      - type
      type: object
    SignalConversion:
      discriminator:
        mapping:
          num_fixed_point: '#/components/schemas/SignalConversionNumFixedPoint'
          num_floating_point: '#/components/schemas/SignalConversionNumFloatingPoint'
          csv: '#/components/schemas/SignalConversionCSV'
          json: '#/components/schemas/SignalConversionJSON'
          sub_bytes: '#/components/schemas/SignalConversionSubBytes'
          sub_string: '#/components/schemas/SignalConversionSubString'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/SignalConversionNumFixedPoint'
      - $ref: '#/components/schemas/SignalConversionNumFloatingPoint'
      - $ref: '#/components/schemas/SignalConversionCSV'
      - $ref: '#/components/schemas/SignalConversionJSON'
      - $ref: '#/components/schemas/SignalConversionSubBytes'
      - $ref: '#/components/schemas/SignalConversionSubString'
    SignalDisplay:
      example:
        unit: unit
        min: 1
        max: 5
        format: format
      properties:
        unit:
          description: 単位
          type: string
        min:
          description: 最小値
          format: int64
          type: integer
        max:
          description: 最大値
          format: int64
          type: integer
        format:
          description: 表示用のフォーマット
          type: string
      required:
      - format
      - max
      - min
      - unit
      type: object
    Signal:
      example:
        updated_at: updated_at
        data_id: data_id
        display:
          unit: unit
          min: 1
          max: 5
          format: format
        data_type: 0
        channel: 6
        description: description
        created_at: created_at
        label: label
        uuid: uuid
        hash: hash
        conversion: null
      properties:
        uuid:
          description: 信号定義のUUID
          type: string
        label:
          description: 信号定義のラベル
          type: string
        description:
          description: 信号定義の説明
          type: string
        data_type:
          description: データタイプ
          format: int32
          type: integer
        data_id:
          description: データID
          type: string
        channel:
          description: チャンネル
          format: int32
          type: integer
        conversion:
          $ref: '#/components/schemas/SignalConversion'
        display:
          $ref: '#/components/schemas/SignalDisplay'
        hash:
          description: 信号定義のハッシュ値
          type: string
        created_at:
          description: 信号定義の作成日時
          type: string
        updated_at:
          description: 信号定義の最終更新日時
          type: string
      required:
      - channel
      - conversion
      - created_at
      - data_id
      - data_type
      - description
      - display
      - hash
      - label
      - updated_at
      - uuid
      type: object
    Signals:
      example:
        page:
          next: next
          last: true
          previous: previous
          total_count: 0
          first: true
        items:
        - updated_at: updated_at
          data_id: data_id
          display:
            unit: unit
            min: 1
            max: 5
            format: format
          data_type: 0
          channel: 6
          description: description
          created_at: created_at
          label: label
          uuid: uuid
          hash: hash
          conversion: null
        - updated_at: updated_at
          data_id: data_id
          display:
            unit: unit
            min: 1
            max: 5
            format: format
          data_type: 0
          channel: 6
          description: description
          created_at: created_at
          label: label
          uuid: uuid
          hash: hash
          conversion: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/Signal'
          type: array
        page:
          $ref: '#/components/schemas/PageDetail'
      required:
      - items
      - page
      type: object
    CreateSignalRequest:
      example:
        data_id: data_id
        display:
          unit: unit
          min: 1
          max: 5
          format: format
        channel: 0
        data_type: 6
        description: description
        label: label
        uuid: uuid
        conversion: null
      properties:
        channel:
          description: チャンネル
          format: int32
          type: integer
        conversion:
          $ref: '#/components/schemas/SignalConversion'
        data_id:
          description: データID
          type: string
        data_type:
          description: データタイプ
          format: int32
          type: integer
        description:
          description: 信号定義の説明
          type: string
        display:
          $ref: '#/components/schemas/SignalDisplay'
        label:
          description: 信号定義のラベル
          type: string
        uuid:
          description: 信号定義のUUID
          type: string
      type: object
    UpdateSignalRequest:
      example:
        data_id: data_id
        display:
          unit: unit
          min: 1
          max: 5
          format: format
        channel: 0
        data_type: 6
        description: description
        label: label
        conversion: null
      properties:
        channel:
          description: チャンネル
          format: int32
          type: integer
        conversion:
          $ref: '#/components/schemas/SignalConversion'
        data_id:
          description: データID
          type: string
        data_type:
          description: データタイプ
          format: int32
          type: integer
        description:
          description: 信号定義の説明
          type: string
        display:
          $ref: '#/components/schemas/SignalDisplay'
        label:
          description: 信号定義のラベル
          type: string
      type: object
    TrashedMeasurements:
      example:
        total_count: 10
        items:
        - basetime_type: edge_rtc
          description: description of measurement
          created_at: 2017-02-11T01:23:45Z
          completed: true
          processed_ratio: 0.9
          basetime: basetime
          sequences:
            received_chunks_ratio: 0.5
            expected_data_points: 123456789
            received_data_points: 123456789
            status: measuring
          uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          duration: 100000000
          protected: true
          updated_at: 2017-02-11T01:23:45Z
          max_elapsed_time: 100000000
          name: meas1
          ended: true
          markers:
          - null
          - null
          edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
          status: measuring
        - basetime_type: edge_rtc
          description: description of measurement
          created_at: 2017-02-11T01:23:45Z
          completed: true
          processed_ratio: 0.9
          basetime: basetime
          sequences:
            received_chunks_ratio: 0.5
            expected_data_points: 123456789
            received_data_points: 123456789
            status: measuring
          uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          duration: 100000000
          protected: true
          updated_at: 2017-02-11T01:23:45Z
          max_elapsed_time: 100000000
          name: meas1
          ended: true
          markers:
          - null
          - null
          edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
          status: measuring
      properties:
        items:
          items:
            $ref: '#/components/schemas/Measurement'
          type: array
        total_count:
          description: 取得対象の総件数
          example: 10
          type: integer
      type: object
    DataPointTime:
      oneOf:
      - description: 時刻。クエリパラメーターの `time_format` が `rfc3339` の場合はstring、それ以外の場合はintegerです。
        format: int64
        type: integer
      - description: 時刻。クエリパラメーターの `time_format` が `rfc3339` の場合はstring、それ以外の場合はintegerです。
        type: string
    DataPointDataMap:
      description: |-
        データのペイロード。ペイロードのJSON表現はデータタイプによって異なります。 [詳説iSCP 1.0](https://docs.intdash.jp/manual/iscp1-essentials/latest/ja/iscp1-essentials-ja.pdf) の「付録: データタイプとペイロードの定義」を参照してください。 iscpv1に当てはまらない場合、下記のフォーマットで固定となります。

        ```
        {
          "d": "データ本体のBase64表記"
        }
        ```
      type: object
    DataPointNormal:
      description: 改行で区切られたJSON文字列です。
      properties:
        time:
          $ref: '#/components/schemas/DataPointTime'
        measurement_uuid:
          description: このデータポイントが含まれる計測のUUID
          type: string
        created_at:
          description: このデータポイントが作成された日時
          type: string
        data_type:
          description: データタイプ
          type: string
        data_id:
          description: データID
          type: string
        data:
          description: |-
            データのペイロード。ペイロードのJSON表現はデータタイプによって異なります。 [詳説iSCP 1.0](https://docs.intdash.jp/manual/iscp1-essentials/latest/ja/iscp1-essentials-ja.pdf) の「付録: データタイプとペイロードの定義」を参照してください。 iscpv1に当てはまらない場合、下記のフォーマットで固定となります。

            ```
            {
              "d": "データ本体のBase64表記"
            }
            ```
          type: object
      required:
      - created_at
      - data
      - data_id
      - data_type
      - measurement_uuid
      - time
      type: object
    ErrorExtraEmpty:
      properties:
        error:
          description: エラーのタイプ。エラーのタイプが `unexpected` の場合は、直ちに処理が中断されます。
          enum:
          - converted_error
          - unexpected
          type: string
        error_description:
          description: エラーの説明
          type: string
      required:
      - error
      - error_description
      type: object
    ErrorConverted:
      allOf:
      - $ref: '#/components/schemas/ErrorExtraEmpty'
      - $ref: '#/components/schemas/ErrorConverted_allOf'
    DataPointDataErrorData:
      discriminator:
        mapping:
          '*': '#/components/schemas/ErrorExtraEmpty'
          converted_error: '#/components/schemas/ErrorConverted'
        propertyName: error
      oneOf:
      - $ref: '#/components/schemas/ErrorExtraEmpty'
      - $ref: '#/components/schemas/ErrorConverted'
      type: object
    DataPointDataError:
      description: データのペイロード
      properties:
        i:
          description: 固定値 `intdash/measurement/get/data/error`
          type: string
        d:
          $ref: '#/components/schemas/DataPointDataErrorData'
      required:
      - d
      - i
      type: object
    DataPointError:
      allOf:
      - $ref: '#/components/schemas/DataPointNormal'
      - $ref: '#/components/schemas/DataPointError_allOf'
    HLS:
      example:
        measurement_uuid: 507032c5-c4fb-493b-aef3-ecf6fd67df00
        duration: 12345678
        playlist: playlist.m3u8
        basetime_type: ntp
        channel: 1
        offset_time: 123456
        basetime: 2000-01-02T03:04:05Z
        edge_uuid: 6e180e5a-3d7e-476c-907d-3c71bceb8a98
      properties:
        edge_uuid:
          description: エッジのUUID
          example: 6e180e5a-3d7e-476c-907d-3c71bceb8a98
          type: string
        measurement_uuid:
          description: 計測のUUID
          example: 507032c5-c4fb-493b-aef3-ecf6fd67df00
          type: string
        basetime:
          description: 基準時刻
          example: 2000-01-02T03:04:05Z
          format: data-time
          type: string
        basetime_type:
          description: 基準時刻タイプ
          example: ntp
          type: string
        playlist:
          description: プレイリスト
          example: playlist.m3u8
          type: string
        channel:
          description: チャンネル
          example: 1
          type: integer
        offset_time:
          description: 計測開始から動画の開始までのオフセット（マイクロ秒）
          example: 123456
          type: integer
        duration:
          description: 長さ（マイクロ秒）
          example: 12345678
          type: integer
      required:
      - basetime
      - basetime_type
      - channel
      - duration
      - edge_uuid
      - measurement_uuid
      - offset_time
      - playlist
      type: object
    HLSList:
      example:
        items:
        - measurement_uuid: 507032c5-c4fb-493b-aef3-ecf6fd67df00
          duration: 12345678
          playlist: playlist.m3u8
          basetime_type: ntp
          channel: 1
          offset_time: 123456
          basetime: 2000-01-02T03:04:05Z
          edge_uuid: 6e180e5a-3d7e-476c-907d-3c71bceb8a98
        - measurement_uuid: 507032c5-c4fb-493b-aef3-ecf6fd67df00
          duration: 12345678
          playlist: playlist.m3u8
          basetime_type: ntp
          channel: 1
          offset_time: 123456
          basetime: 2000-01-02T03:04:05Z
          edge_uuid: 6e180e5a-3d7e-476c-907d-3c71bceb8a98
      properties:
        items:
          items:
            $ref: '#/components/schemas/HLS'
          type: array
      required:
      - items
      type: object
    JobType:
      description: |-
        - update
          - 計測内の動画データのうち、新しくサーバーが受信した部分（HLSにまだ変換されていない部分）を
            HLSに変換するジョブ。通常は計測実行中に行います。
        - finalize
          - 計測全体をサーバーに回収した後に、動画データ全体をHLSに変換するジョブ
        - delete
          - 変換によって作成されたHLSデータを削除するジョブ。
            このジョブを実行すると、HLSプレイリスト、セグメントファイル、
            データベース内のHLSに関する情報が削除され、この動画のHLSによる再生はできなくなります。
      enum:
      - update
      - finalize
      - delete
      example: update
      type: string
    JobStatus:
      description: ジョブのステータス
      enum:
      - unprocessed
      - processing
      - succeeded
      - failed
      type: string
    Job:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        meas_uuid: a5170afc-9cc2-5327-e0e1-32746b5a7977
        created_at: 2000-01-23T04:56:07.000+00:00
        type: update
        message: ok
        uuid: ade4eea8-edc6-3ca5-c557-12a616c2028a
        status: null
      properties:
        uuid:
          description: ジョブのUUID
          example: ade4eea8-edc6-3ca5-c557-12a616c2028a
          type: string
        meas_uuid:
          description: 計測のUUID
          example: a5170afc-9cc2-5327-e0e1-32746b5a7977
          type: string
        type:
          $ref: '#/components/schemas/JobType'
        status:
          $ref: '#/components/schemas/JobStatus'
        message:
          description: ステータスの説明
          example: ok
          type: string
        created_at:
          description: ジョブが作成された日時
          format: date-time
          type: string
        updated_at:
          description: ジョブの最終更新日時
          format: date-time
          type: string
      required:
      - created_at
      - meas_uuid
      - message
      - status
      - type
      - updated_at
      - uuid
      type: object
    JobList:
      example:
        total_count: 100
        items:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          meas_uuid: a5170afc-9cc2-5327-e0e1-32746b5a7977
          created_at: 2000-01-23T04:56:07.000+00:00
          type: update
          message: ok
          uuid: ade4eea8-edc6-3ca5-c557-12a616c2028a
          status: null
        - updated_at: 2000-01-23T04:56:07.000+00:00
          meas_uuid: a5170afc-9cc2-5327-e0e1-32746b5a7977
          created_at: 2000-01-23T04:56:07.000+00:00
          type: update
          message: ok
          uuid: ade4eea8-edc6-3ca5-c557-12a616c2028a
          status: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/Job'
          type: array
        total_count:
          description: 取得対象の総件数
          example: 100
          type: number
      required:
      - items
      - total_count
      type: object
    ErrorProblemMedia:
      properties:
        type:
          description: エラーのタイプ
          enum:
          - about:blank
          - invalid_request
          - conflict
          - forbidden
          - account_locked
          type: string
        title:
          description: エラーのタイトル
          type: string
        properties:
          description: 無効なパラメーターについての情報
          type: object
      required:
      - title
      - type
      type: object
    CreateJobRequest:
      example:
        meas_uuid: a5170afc-9cc2-5327-e0e1-32746b5a7977
        type: update
      properties:
        meas_uuid:
          description: 計測のUUID
          example: a5170afc-9cc2-5327-e0e1-32746b5a7977
          type: string
        type:
          $ref: '#/components/schemas/JobType'
      required:
      - meas_uuid
      - type
      type: object
    MediaMeasurementBaseTimeType:
      description: 計測の基準時刻タイプ
      enum:
      - edge_rtc
      - ntp
      - gps
      - api_first_received
      - volatile
      - manual
      - undefined
      example: edge_rtc
      type: string
    MediaMeasurement:
      example:
        basetime_type: edge_rtc
        description: description of measurement
        created_at: 2017-02-11T01:23:45Z
        processed_ratio: 0.9
        basetime: basetime
        uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
        duration: 100000000
        protected: true
        updated_at: 2017-02-11T01:23:45Z
        max_elapsed_time: 100000000
        name: meas1
        ended: true
        edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
        status: measuring
      properties:
        uuid:
          description: 計測のUUID
          example: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          type: string
        name:
          description: 計測の名前
          example: meas1
          type: string
        description:
          description: 計測の説明
          example: description of measurement
          type: string
        basetime:
          description: 計測の基準時刻（RFC3339形式）
          type: string
        basetime_type:
          $ref: '#/components/schemas/MediaMeasurementBaseTimeType'
        edge_uuid:
          description: エッジのUUID
          example: 00de1861-6614-4435-af07-da9b4338d57c
          type: string
        duration:
          deprecated: true
          description: 計測時間（ `max_elapsed_time` を使用してください）
          example: 100000000
          format: int64
          type: integer
        max_elapsed_time:
          description: 計測時間（マイクロ秒）
          example: 100000000
          format: int64
          type: integer
        protected:
          description: |-
            `true` の場合、計測は保護されています。保護されている計測は削除できません。
            保護されている計測を削除したい場合は、まず保護を解除してください。
          example: true
          type: boolean
        created_at:
          description: 計測の作成日時
          example: 2017-02-11T01:23:45Z
          format: date-time
          type: string
        updated_at:
          description: 計測の最終更新日時
          example: 2017-02-11T01:23:45Z
          format: date-time
          type: string
        processed_ratio:
          deprecated: true
          description: 代わりに `sequences.received_sequence_numbers_ratio` を使用してください。処理済み率を表します。
          example: 0.9
          type: number
        ended:
          deprecated: true
          description: 代わりに `sequences.status` を使用してください。エッジにおいてデータの取得が終了しているかどうかを示します。
          example: true
          type: boolean
        status:
          deprecated: true
          description: |-
            代わりに `sequences.status` を使用してください。
            計測のステータスを表します:
              - measuring
                - 計測中
              - resending
                - 再送中。計測（エッジにおけるデータの取得）は終了しましたが、エッジにデータが残っており、サーバーに再送中です。
              - finished
                - 完了。サーバーへのデータの回収が完了しています。
          enum:
          - measuring
          - resending
          - finished
          type: string
      required:
      - basetime
      - basetime_type
      - created_at
      - description
      - duration
      - edge_uuid
      - ended
      - name
      - processed_ratio
      - protected
      - sequences
      - status
      - updated_at
      - uuid
      type: object
    VideoCodecs:
      enum:
      - h264
      - vp9
      example: h264
      type: string
    VideoSourceDataType:
      enum:
      - h264
      - jpeg
      - ivf
      example: h264
      type: string
    VideoStatus:
      description: ステータス
      enum:
      - live
      - unprocessed
      - processing
      - succeeded
      - failed
      example: succeeded
      type: string
    Playlist:
      example:
        playlist: /path-to/playlist.m3u8
        playlist_with_endlist_tag: /path-to/playlist_with_endlist_tag.m3u8
      properties:
        playlist:
          description: プレイリスト
          example: /path-to/playlist.m3u8
          type: string
        playlist_with_endlist_tag:
          description: EXT-X-ENDLISTタグが付いたプレイリスト
          example: /path-to/playlist_with_endlist_tag.m3u8
          type: string
      required:
      - playlist
      - playlist_with_endlist_tag
      type: object
    MP4Status:
      description: ステータス
      enum:
      - unprocessed
      - processing
      - succeeded
      - failed
      - canceled
      type: string
    MP4:
      example:
        duration: 10000
        file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
        updated_at: 2000-01-01T00:00:00Z
        created_at: 2000-01-01T00:00:00Z
        start_offset: 0
        trimmed: false
        uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
        status: null
      properties:
        uuid:
          description: MP4のUUID
          example: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
          format: uuid
          type: string
        start_offset:
          description: 動画の開始時刻からのオフセット（マイクロ秒）
          example: 0
          type: integer
        duration:
          description: 長さ（マイクロ秒）
          example: 10000
          type: integer
        trimmed:
          description: 指定された時間範囲のみを抽出したものである場合は `true` 。
          example: false
          type: boolean
        file_path:
          description: メディアファイルのパス
          example: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
          type: string
        status:
          $ref: '#/components/schemas/MP4Status'
        created_at:
          description: 作成された日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - duration
      - start_offset
      - status
      - trimmed
      - updated_at
      - uuid
      type: object
    JpegQuality:
      description: |-
        JPEGの品質。デフォルトは 'middle' です。
        - high
        - middle
        - low
      enum:
      - high
      - middle
      - low
      type: string
    JpegStatus:
      description: ステータス
      enum:
      - unprocessed
      - processing
      - succeeded
      - failed
      - canceled
      example: succeeded
      type: string
    Jpeg:
      example:
        duration: 10000
        updated_at: 2000-01-01T00:00:00Z
        fps: 15
        created_at: 2000-01-01T00:00:00Z
        start_offset: 5000
        trimmed: true
        uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
        quality: null
        status: succeeded
      properties:
        uuid:
          description: JPEGのUUID
          example: 3279bdfb-9079-417e-8f94-ee8126da5933
          format: uuid
          type: string
        start_offset:
          description: 計測開始からのオフセット（マイクロ秒）
          example: 5000
          type: integer
        duration:
          description: 長さ（マイクロ秒）
          example: 10000
          type: integer
        trimmed:
          description: 指定された時間範囲のみを抽出したものである場合は `true` 。
          example: true
          type: boolean
        fps:
          description: フレームレート（fps）
          example: 15
          format: float
          type: number
        quality:
          $ref: '#/components/schemas/JpegQuality'
        status:
          $ref: '#/components/schemas/JpegStatus'
        created_at:
          description: 作成された日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created_at
      - created_by
      - duration
      - fps
      - quality
      - start_offset
      - status
      - trimmed
      - updated_at
      - uuid
      type: object
    Video:
      example:
        measurement_uuid: d299eea4-d02c-4742-a97a-795346a0c005
        jpegs:
        - duration: 10000
          updated_at: 2000-01-01T00:00:00Z
          fps: 15
          created_at: 2000-01-01T00:00:00Z
          start_offset: 5000
          trimmed: true
          uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
          quality: null
          status: succeeded
        - duration: 10000
          updated_at: 2000-01-01T00:00:00Z
          fps: 15
          created_at: 2000-01-01T00:00:00Z
          start_offset: 5000
          trimmed: true
          uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
          quality: null
          status: succeeded
        channel: 1
        fps: 29.98
        offset_time: 0
        created_at: 2000-01-01T00:00:00Z
        uuid: 68b91013-47e9-4e68-a965-892549587dfa
        measurement:
          basetime_type: edge_rtc
          description: description of measurement
          created_at: 2017-02-11T01:23:45Z
          processed_ratio: 0.9
          basetime: basetime
          uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
          duration: 100000000
          protected: true
          updated_at: 2017-02-11T01:23:45Z
          max_elapsed_time: 100000000
          name: meas1
          ended: true
          edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
          status: measuring
        source_data_type: h264
        hls:
          playlist: /path-to/playlist.m3u8
          playlist_with_endlist_tag: /path-to/playlist_with_endlist_tag.m3u8
        duration: 10000
        codec: h264
        mp4s:
        - duration: 10000
          file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
          updated_at: 2000-01-01T00:00:00Z
          created_at: 2000-01-01T00:00:00Z
          start_offset: 0
          trimmed: false
          uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
          status: null
        - duration: 10000
          file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
          updated_at: 2000-01-01T00:00:00Z
          created_at: 2000-01-01T00:00:00Z
          start_offset: 0
          trimmed: false
          uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
          status: null
        updated_at: 2000-01-01T00:00:00Z
        width: 1920
        edge_uuid: a8afa022-7e60-4f6a-8686-5b99d8785d25
        height: 1080
        status: succeeded
      properties:
        uuid:
          description: 動画（video）のUUID
          example: 68b91013-47e9-4e68-a965-892549587dfa
          format: uuid
          type: string
        measurement_uuid:
          description: 計測のUUID
          example: d299eea4-d02c-4742-a97a-795346a0c005
          format: uuid
          type: string
        measurement:
          $ref: '#/components/schemas/MediaMeasurement'
        edge_uuid:
          description: エッジのUUID
          example: a8afa022-7e60-4f6a-8686-5b99d8785d25
          format: uuid
          type: string
        channel:
          description: チャンネル
          example: 1
          type: integer
        codec:
          $ref: '#/components/schemas/VideoCodecs'
        source_data_type:
          $ref: '#/components/schemas/VideoSourceDataType'
        offset_time:
          description: 計測開始からのオフセット（マイクロ秒）
          example: 0
          type: integer
        duration:
          description: 長さ（マイクロ秒）
          example: 10000
          type: integer
        fps:
          description: フレームレート（fps）
          example: 29.98
          type: number
        width:
          description: 動画の幅
          example: 1920
          type: integer
        height:
          description: 動画の高さ
          example: 1080
          type: integer
        status:
          $ref: '#/components/schemas/VideoStatus'
        hls:
          $ref: '#/components/schemas/Playlist'
        mp4s:
          description: この動画を変換して作成されたMP4のリスト
          items:
            $ref: '#/components/schemas/MP4'
          type: array
        jpegs:
          description: この動画を変換して作成されたJPEGのリスト
          items:
            $ref: '#/components/schemas/Jpeg'
          type: array
        created_at:
          description: 作成された日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
        updated_at:
          description: 最終更新日時
          example: 2000-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - channel
      - codec
      - created_at
      - duration
      - edge_uuid
      - fps
      - height
      - jpegs
      - measurement_uuid
      - mp4s
      - offset_time
      - source_data_type
      - status
      - updated_at
      - uuid
      - width
      type: object
    Page:
      example:
        total_count: 1
      properties:
        total_count:
          description: 取得対象の総件数
          example: 1
          format: int64
          type: integer
      required:
      - total_count
      type: object
    Videos:
      example:
        page:
          total_count: 1
        items:
        - measurement_uuid: d299eea4-d02c-4742-a97a-795346a0c005
          jpegs:
          - duration: 10000
            updated_at: 2000-01-01T00:00:00Z
            fps: 15
            created_at: 2000-01-01T00:00:00Z
            start_offset: 5000
            trimmed: true
            uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
            quality: null
            status: succeeded
          - duration: 10000
            updated_at: 2000-01-01T00:00:00Z
            fps: 15
            created_at: 2000-01-01T00:00:00Z
            start_offset: 5000
            trimmed: true
            uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
            quality: null
            status: succeeded
          channel: 1
          fps: 29.98
          offset_time: 0
          created_at: 2000-01-01T00:00:00Z
          uuid: 68b91013-47e9-4e68-a965-892549587dfa
          measurement:
            basetime_type: edge_rtc
            description: description of measurement
            created_at: 2017-02-11T01:23:45Z
            processed_ratio: 0.9
            basetime: basetime
            uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
            duration: 100000000
            protected: true
            updated_at: 2017-02-11T01:23:45Z
            max_elapsed_time: 100000000
            name: meas1
            ended: true
            edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
            status: measuring
          source_data_type: h264
          hls:
            playlist: /path-to/playlist.m3u8
            playlist_with_endlist_tag: /path-to/playlist_with_endlist_tag.m3u8
          duration: 10000
          codec: h264
          mp4s:
          - duration: 10000
            file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
            updated_at: 2000-01-01T00:00:00Z
            created_at: 2000-01-01T00:00:00Z
            start_offset: 0
            trimmed: false
            uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
            status: null
          - duration: 10000
            file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
            updated_at: 2000-01-01T00:00:00Z
            created_at: 2000-01-01T00:00:00Z
            start_offset: 0
            trimmed: false
            uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
            status: null
          updated_at: 2000-01-01T00:00:00Z
          width: 1920
          edge_uuid: a8afa022-7e60-4f6a-8686-5b99d8785d25
          height: 1080
          status: succeeded
        - measurement_uuid: d299eea4-d02c-4742-a97a-795346a0c005
          jpegs:
          - duration: 10000
            updated_at: 2000-01-01T00:00:00Z
            fps: 15
            created_at: 2000-01-01T00:00:00Z
            start_offset: 5000
            trimmed: true
            uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
            quality: null
            status: succeeded
          - duration: 10000
            updated_at: 2000-01-01T00:00:00Z
            fps: 15
            created_at: 2000-01-01T00:00:00Z
            start_offset: 5000
            trimmed: true
            uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
            quality: null
            status: succeeded
          channel: 1
          fps: 29.98
          offset_time: 0
          created_at: 2000-01-01T00:00:00Z
          uuid: 68b91013-47e9-4e68-a965-892549587dfa
          measurement:
            basetime_type: edge_rtc
            description: description of measurement
            created_at: 2017-02-11T01:23:45Z
            processed_ratio: 0.9
            basetime: basetime
            uuid: 2cc7de37-6f71-4458-887e-10e618a6fcfb
            duration: 100000000
            protected: true
            updated_at: 2017-02-11T01:23:45Z
            max_elapsed_time: 100000000
            name: meas1
            ended: true
            edge_uuid: 00de1861-6614-4435-af07-da9b4338d57c
            status: measuring
          source_data_type: h264
          hls:
            playlist: /path-to/playlist.m3u8
            playlist_with_endlist_tag: /path-to/playlist_with_endlist_tag.m3u8
          duration: 10000
          codec: h264
          mp4s:
          - duration: 10000
            file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
            updated_at: 2000-01-01T00:00:00Z
            created_at: 2000-01-01T00:00:00Z
            start_offset: 0
            trimmed: false
            uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
            status: null
          - duration: 10000
            file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
            updated_at: 2000-01-01T00:00:00Z
            created_at: 2000-01-01T00:00:00Z
            start_offset: 0
            trimmed: false
            uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
            status: null
          updated_at: 2000-01-01T00:00:00Z
          width: 1920
          edge_uuid: a8afa022-7e60-4f6a-8686-5b99d8785d25
          height: 1080
          status: succeeded
      properties:
        items:
          items:
            $ref: '#/components/schemas/Video'
          type: array
        page:
          $ref: '#/components/schemas/Page'
      required:
      - items
      - page
      type: object
    Jpegs:
      example:
        page:
          total_count: 1
        items:
        - duration: 10000
          updated_at: 2000-01-01T00:00:00Z
          fps: 15
          created_at: 2000-01-01T00:00:00Z
          start_offset: 5000
          trimmed: true
          uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
          quality: null
          status: succeeded
        - duration: 10000
          updated_at: 2000-01-01T00:00:00Z
          fps: 15
          created_at: 2000-01-01T00:00:00Z
          start_offset: 5000
          trimmed: true
          uuid: 3279bdfb-9079-417e-8f94-ee8126da5933
          quality: null
          status: succeeded
      properties:
        items:
          items:
            $ref: '#/components/schemas/Jpeg'
          type: array
        page:
          $ref: '#/components/schemas/Page'
      required:
      - items
      - page
      type: object
    CreateJpegRequest:
      example:
        duration: 10000
        trim: false
        fps: 15
        start_offset: 0
        quality: null
      properties:
        trim:
          description: 時間範囲を指定してその部分のJPEGを作成する場合は `true` にします。
          example: false
          type: boolean
        start_offset:
          description: 計測開始からのオフセット（マイクロ秒）。trimがtrueの場合は必須です。
          example: 0
          type: integer
        duration:
          description: 長さ（マイクロ秒）。trimがtrueの場合は必須です。
          example: 10000
          type: integer
        fps:
          description: フレームレート。値が省略された場合は、元のデータと同じフレームレートが使用されます。
          example: 15
          format: float
          type: number
        quality:
          $ref: '#/components/schemas/JpegQuality'
      type: object
    MP4s:
      example:
        page:
          total_count: 1
        items:
        - duration: 10000
          file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
          updated_at: 2000-01-01T00:00:00Z
          created_at: 2000-01-01T00:00:00Z
          start_offset: 0
          trimmed: false
          uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
          status: null
        - duration: 10000
          file_path: /api/media/68b91013-47e9-4e68-a965-892549587dfa/mp4s/0108aeb1-f486-400f-9bcd-f176eee8b7e3/measurement.mp4
          updated_at: 2000-01-01T00:00:00Z
          created_at: 2000-01-01T00:00:00Z
          start_offset: 0
          trimmed: false
          uuid: 0108aeb1-f486-400f-9bcd-f176eee8b7e3
          status: null
      properties:
        items:
          items:
            $ref: '#/components/schemas/MP4'
          type: array
        page:
          $ref: '#/components/schemas/Page'
      required:
      - items
      - page
      type: object
    CreateMP4Request:
      example:
        duration: 10000
        start_offset: 0
        trimmed: false
      properties:
        trimmed:
          description: 時間範囲を指定してその部分のMP4を作成する場合は `true` にします。
          example: false
          type: boolean
        start_offset:
          description: 動画の開始時刻からのオフセット（マイクロ秒）。trimmedがtrueの場合は必須です。
          example: 0
          type: integer
        duration:
          description: 長さ（マイクロ秒）。trimmedがtrueの場合は必須です。
          example: 10000
          type: integer
      type: object
    TokenRequest:
      properties:
        grant_type:
          description: グラントタイプ
          enum:
          - password
          - authorization_code
          - refresh_token
          - client_credentials
          type: string
        refresh_token:
          description: 認可時に発行されたリフレッシュトークン。grant_typeが `refresh_token` の場合にだけ指定します。
          type: string
        tenant_uuid:
          default: 00000000-0000-0000-0000-000000000000
          description: テナントのUUID。grant_typeが `password` の場合にだけ指定します。 grant_typeが `password`
            で、テナントUUIDを省略した場合は、デフォルトのテナントが使用されます。
          type: string
        username:
          description: ユーザーの名前。grant_typeが `password` の場合にだけ指定します。
          type: string
        password:
          description: パスワード。grant_typeが `password` の場合にだけ指定します。
          type: string
        client_id:
          description: OAuth2クライアントのID
          type: string
        client_secret:
          description: OAuth2のクライアントシークレット。 OAuth2クライアントの `token_endpoint_auth_method`
            が `client_secret_post` の場合にだけ指定します。
          type: string
        client_certification:
          description: OAuth2のクライアント証明書。 OAuth2クライアントの `token_endpoint_auth_method`
            が `tls_client_auth` の場合にだけ指定します。
          type: string
        redirect_uri:
          description: 認可後のリダイレクト先URI。 grant_typeが `authorization_code` の場合にだけ必要です。
          type: string
        code_verifier:
          description: |-
            PKCE code verifier.
             * 使用可能な文字:  `[a-Z] / [0-9] / "-" / "." / "_" / "~"`
             * 長さ: 43文字以上、128文字以下
          type: string
        code:
          description: 認可コード
          type: string
      title: TokenRequest
      type: object
    issueToken_200_response:
      example:
        access_token: access_token
        refresh_token_expires_in: 6
        refresh_token: refresh_token
        scope: scope
        token_type: token_type
        expires_in: 0
      properties:
        access_token:
          description: アクセストークン
          type: string
        expires_in:
          description: アクセストークンの有効期限（期限切れまでの秒数）
          format: int64
          type: integer
        refresh_token:
          description: リフレッシュトークン
          type: string
        refresh_token_expires_in:
          description: リフレッシュトークンの有効期限（期限切れまでの秒数）
          format: int64
          type: integer
        scope:
          description: |-
            スコープのリスト（スペース区切り）。
            - temporary
                - 一時的なユーザーを表します。
          type: string
        token_type:
          description: トークンタイプ。 `Bearer` に固定。
          type: string
      type: object
    CheckPasswordRequest:
      example:
        password: password
      properties:
        password:
          description: チェックしたいパスワード
          example: password
          maxLength: 512
          type: string
      required:
      - password
      title: CheckPasswordRequest
      type: object
    getVersion_200_response:
      example:
        version: version
      properties:
        version:
          description: APIのバージョン
          type: string
      required:
      - version
      type: object
    CreateOAuth2ClientAuthorizationCodeRequest_allOf:
      properties:
        name:
          description: 名前
          example: My Client
          type: string
        grant_type:
          description: グラントタイプ
          type: string
        redirect_uris:
          items:
            description: グラントタイプが `authorization_code` の場合のみ必要です。
            example: http://localhost:8080
            maxLength: 256
            type: string
          maximum: 10
          type: array
        token_endpoint_auth_method:
          default: client_secret_basic
          description: トークンエンドポイントの認証方式
          enum:
          - client_secret_basic
          - none
          type: string
        tls_client_auth_subject_dn:
          description: TLSクライアント認証のサブジェクトDN
          type: string
      required:
      - redirect_uris
      example: null
    OAuth2ClientWithSecret_allOf:
      properties:
        client_id:
          description: OAuth2クライアントID
          type: string
        client_secret:
          description: token_endpoint_auth_methodが `none` 以外だったら required
          type: string
        name:
          description: 名前
          type: string
        grant_types:
          description: グラントタイプ
          items:
            type: string
          type: array
        token_endpoint_auth_method:
          description: トークンエンドポイントの認証方式
          type: string
        redirect_uris:
          description: 認可後のリダイレクト先URI
          items:
            type: string
          type: array
        response_types:
          description: レスポンスタイプ
          items:
            type: string
          type: array
        scopes:
          description: スコープ
          items:
            type: string
          type: array
        audiences:
          description: オーディエンス
          items:
            type: string
          type: array
        tls_client_auth_subject_dn:
          description: TLSクライアント認証のサブジェクトDN
          example: "SERIALNUMBER=0001,CN=CommonName,OU=OrganizationalUnit,O=Organization,POSTALCODE=PostalCode,STREET=StreetAddress,L=Locality,ST=Province,C=COUNTRY"
          type: string
      type: object
      example: null
    CheckPasswordResult_errors_inner:
      example:
        type: min_length
        message: messsage
        value: "10"
      properties:
        type:
          description: ポリシーの種類
          enum:
          - min_length
          - max_length
          - min_symbol_num
          - min_uppercase_alphabet_num
          - min_lowercase_alphabet_num
          - min_number_num
          - min_lengthmin_alphabet_num
          - allowed_same_username
          - allowed_same_previous_password
          type: string
        value:
          description: ポリシーで指定されている数値
          example: "10"
          type: string
        message:
          description: ポリシーに関する説明
          example: messsage
          type: string
      required:
      - message
      - type
      type: object
    EdgeConnectionList_page:
      example:
        next: next
        last: true
        previous: previous
        total_count: 0
        first: true
      properties:
        first:
          description: '`true` の場合、現在のページが最初のページです。'
          type: boolean
        last:
          description: '`true` の場合、現在のページが最後のページです。'
          type: boolean
        next:
          description: 次のページのパス。現在のページが最後のページの場合は空文字列です。
          type: string
        previous:
          description: 前のページのパス。現在のページが最初のページの場合は空文字列です。
          type: string
        total_count:
          description: 取得対象の総件数
          type: integer
      required:
      - first
      - last
      - next
      - previous
      - total_count
      type: object
    EdgeConnection_allOf:
      properties:
        downstreams:
          description: ダウンストリームについての情報
          items:
            $ref: '#/components/schemas/EdgeConnectionDownstream'
          type: array
        upstreams:
          description: アップストリームについての情報
          items:
            $ref: '#/components/schemas/EdgeConnectionUpstream'
          type: array
      required:
      - downstreams
      - upstreams
      type: object
      example: null
    MeasurementMarkerPoint_allOf:
      properties:
        detail:
          $ref: '#/components/schemas/MeasurementMarkerDetailPoint'
      example: null
    MeasurementMarkerRange_allOf:
      properties:
        detail:
          $ref: '#/components/schemas/MeasurementMarkerDetailRange'
      example: null
    CreateMeasurementChunksResult_items_inner:
      example:
        sequence_number: 1
        result: ok
      properties:
        sequence_number:
          description: シーケンスナンバー。符号無し32bit整数。
          example: 1
          format: int64
          type: integer
        result:
          description: |-
            登録結果を表します:
              - ok
                - 登録成功。
              - skipped
                - スキップ。既に登録されています。
          enum:
          - ok
          - skipped
          example: ok
          type: string
      required:
      - result
      - sequence_number
      type: object
    ErrorConverted_allOf_error_extra:
      description: '`error_type` が `converted_error` である場合の追加情報'
      properties:
        signal_label:
          description: 信号定義のラベル
          type: string
        signal_data_id:
          description: 信号定義のデータID
          type: string
        signal_channel:
          description: 信号定義のチャンネル
          format: int32
          type: integer
        signal_data_type:
          description: 信号定義のデータタイプ
          format: int32
          type: integer
      required:
      - signal_channel
      - signal_data_id
      - signal_data_type
      - signal_label
      type: object
      example: null
    ErrorConverted_allOf:
      properties:
        error_extra:
          $ref: '#/components/schemas/ErrorConverted_allOf_error_extra'
      required:
      - error_extra
      example: null
    DataPointError_allOf:
      properties:
        data_id:
          description: エラーが発生した場合、 `<channel>/intdash/measurement/get/data/error`
          type: string
        data:
          $ref: '#/components/schemas/DataPointDataError'
      example: null
  securitySchemes:
    BasicAuthForTenantAPI:
      description: |2-

        テナント管理APIを利用するためのベーシック認証です。サーバーに配置された設定ファイルに記述したユーザー情報を指定します。
        詳細はサーバー管理者にお問い合わせ下さい。
      scheme: basic
      type: http
    IntdashToken:
      description: |2-

        APIトークンを使用する場合は、[トークンを作成](#operation/createAPIToken)し、そのトークンをX-Intdash-Tokenヘッダーにセットします。

        ```
        X-Intdash-Token: XXXXXX...XXXXXX
        ```
      in: header
      name: X-Intdash-Token
      type: apiKey
    OAuth2:
      description: OAuth2のトークン交換を使用することができます。取得したトークンは、以下の `OAuth2TokenInHeader` か
        `OAuth2TokenInCookie` で利用します。
      flows:
        authorizationCode:
          authorizationUrl: /api/auth/oauth2/authorization
          refreshUrl: /api/auth/oauth2/token
          scopes:
            <scopes>: OAuth2のスコープ（権限を制御するために使用される、サーバーによって決められた文字列）
          tokenUrl: /api/auth/oauth2/token
        clientCredentials:
          scopes:
            <scopes>: OAuth2のスコープ（権限を制御するために使用される、サーバーによって決められた文字列）
          tokenUrl: /api/auth/oauth2/token
        password:
          refreshUrl: /api/auth/oauth2/token
          scopes:
            <scopes>: OAuth2のスコープ（権限を制御するために使用される、サーバーによって決められた文字列）
          tokenUrl: /api/auth/oauth2/token
      type: oauth2
    OAuth2TokenInHeader:
      bearerFormat: JWT
      description: |2-

        OAuth2で取得したトークンを `Bearer` トークンとして利用します。
        ```
        Authrization: Bearer xxx...
        ```
      scheme: bearer
      type: http
    OAuth2TokenInCookie:
      description: |-
        **アクセストークン(JSON Web Token)**

        OAuth2を使って取得したトークンを、`_bearer_token` という名前でCookieにセットします。

        リクエストヘッダーは以下のようになります:

        ```
        Cookie: _bearer_token=eyJhbGci...
        ```
      in: cookie
      name: _bearer_token
      type: apiKey
x-tagGroups:
- name: auth
  tags:
  - auth_Clients
  - auth_Authorization
  - auth_Edges
  - auth_OAuth2
  - auth_Me
  - auth_Users
  - auth_Projects
  - auth_Groups
  - auth_Group Members
  - auth_Project Edges
  - auth_Project Members
  - auth_Roles
  - auth_Scopes
- name: broker
  tags:
  - broker_Edge Connections
  - broker_Stream
  - broker_iSCP
  description: intdash broker service
- name: meas
  tags:
  - meas_data_model
  - meas_DataPoints
  - meas_DataPointIDs
  - meas_Measurements
  - meas_Measurement Jobs
  - meas_Measurement Markers
  - meas_Uploading Measurements
  - meas_Signals
  - meas_Trashed Measurements
  description: Measurements service API specification
- name: media
  tags:
  - media_HLS
  - media_Jobs
  - media_Videos
  - media_Live
- name: versions
  tags:
  - versions_Version

